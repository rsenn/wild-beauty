{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ini",
				"initialMobxState"
			],
			[
				"max",
				"maxWidthOrHeight"
			],
			[
				"ani",
				"animateLogo"
			],
			[
				"M",
				"MultitouchListener"
			],
			[
				"init",
				"initialized"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "TreePage\n  static getInitialProps(ctx)\n  function()\n  constructor(props)\n  checkTagRemove()\n  componentDidMount()\n  componentDidUpdate()\n  getNum(elem, name)\n  getId(elem)\n  selectNode(item)\n  treeSelEvent(type, arg)\n  render()",
			"settings":
			{
				"buffer_size": 227,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					189,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/stores/queries.js",
						"symkeys":
						[
							[
								193,
								226
							],
							[
								354,
								363
							],
							[
								458,
								465
							],
							[
								541,
								570
							],
							[
								855,
								863
							],
							[
								988,
								1042
							],
							[
								1648,
								1676
							],
							[
								2047,
								2074
							],
							[
								2399,
								2426
							],
							[
								2889,
								2915
							],
							[
								4036,
								4080
							],
							[
								4605,
								4616
							],
							[
								4718,
								4736
							],
							[
								4899,
								4917
							],
							[
								4999,
								5020
							],
							[
								5236,
								5257
							],
							[
								5333,
								5353
							],
							[
								5658,
								5690
							]
						],
						"symlist":
						[
							"function getImageColors(colorstr)",
							"(a, b) =>",
							"Queries",
							"async fetchImages(where = {})",
							"photo =>",
							"async fetchItems(where, fields, t = transformItemData)",
							"async refreshItem(id, props)",
							"async updateItem(id, props)",
							"async loadItems(where = {})",
							"async loadItem(where = {})",
							"saveItem(values, doneHandler = result => {})",
							"response =>",
							"async findItem(id)",
							"async getDepth(id)",
							"async getSiblings(id)",
							"async getChildren(id)",
							"async getParents(id)",
							"async apiRequest(endpoint, data)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA/AQAAICBnZXRJbWFnZUNvbG9ycyhjb2xvcnN0cikKUXVlcmllcwogIGZldGNoSW1hZ2VzKHdoZXJlID0ge30pCiAgZmV0Y2hJdGVtcyh3aGVyZSwgZmllbGRzLCB0ID0gdHJhbnNmb3JtSXRlbURhdGEpCiAgcmVmcmVzaEl0ZW0oaWQsIHByb3BzKQogIHVwZGF0ZUl0ZW0oaWQsIHByb3BzKQogIGxvYWRJdGVtcyh3aGVyZSA9IHt9KQogIGxvYWRJdGVtKHdoZXJlID0ge30pCiAgZmluZEl0ZW0oaWQpCiAgZ2V0RGVwdGgoaWQpCiAgZ2V0U2libGluZ3MoaWQpCiAgZ2V0Q2hpbGRyZW4oaWQpCiAgZ2V0UGFyZW50cyhpZCkKICBhcGlSZXF1ZXN0KGVuZHBvaW50LCBkYXRhKQAAAAAAAAAAPwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8BAAAgIGdldEltYWdlQ29sb3JzKGNvbG9yc3RyKQpRdWVyaWVzCiAgZmV0Y2hJbWFnZXMod2hlcmUgPSB7fSkKICBmZXRjaEl0ZW1zKHdoZXJlLCBmaWVsZHMsIHQgPSB0cmFuc2Zvcm1JdGVtRGF0YSkKICByZWZyZXNoSXRlbShpZCwgcHJvcHMpCiAgdXBkYXRlSXRlbShpZCwgcHJvcHMpCiAgbG9hZEl0ZW1zKHdoZXJlID0ge30pCiAgbG9hZEl0ZW0od2hlcmUgPSB7fSkKICBmaW5kSXRlbShpZCkKICBnZXREZXB0aChpZCkKICBnZXRTaWJsaW5ncyhpZCkKICBnZXRDaGlsZHJlbihpZCkKICBnZXRQYXJlbnRzKGlkKQogIGFwaVJlcXVlc3QoZW5kcG9pbnQsIGRhdGEpAAAAAAAAAAA/AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					190,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/stores/queries.js",
						"symkeys":
						[
							[
								193,
								226
							],
							[
								354,
								363
							],
							[
								458,
								465
							],
							[
								541,
								570
							],
							[
								855,
								863
							],
							[
								988,
								1042
							],
							[
								1648,
								1676
							],
							[
								2047,
								2074
							],
							[
								2399,
								2426
							],
							[
								2890,
								2916
							],
							[
								4037,
								4081
							],
							[
								4606,
								4617
							],
							[
								4719,
								4737
							],
							[
								4900,
								4918
							],
							[
								5000,
								5021
							],
							[
								5237,
								5258
							],
							[
								5334,
								5354
							],
							[
								5659,
								5691
							]
						],
						"symlist":
						[
							"function getImageColors(colorstr)",
							"(a, b) =>",
							"Queries",
							"async fetchImages(where = {})",
							"photo =>",
							"async fetchItems(where, fields, t = transformItemData)",
							"async refreshItem(id, props)",
							"async updateItem(id, props)",
							"async loadItems(where = {})",
							"async loadItem(where = {})",
							"saveItem(values, doneHandler = result => {})",
							"response =>",
							"async findItem(id)",
							"async getDepth(id)",
							"async getSiblings(id)",
							"async getChildren(id)",
							"async getParents(id)",
							"async apiRequest(endpoint, data)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA/AQAAICBnZXRJbWFnZUNvbG9ycyhjb2xvcnN0cikKUXVlcmllcwogIGZldGNoSW1hZ2VzKHdoZXJlID0ge30pCiAgZmV0Y2hJdGVtcyh3aGVyZSwgZmllbGRzLCB0ID0gdHJhbnNmb3JtSXRlbURhdGEpCiAgcmVmcmVzaEl0ZW0oaWQsIHByb3BzKQogIHVwZGF0ZUl0ZW0oaWQsIHByb3BzKQogIGxvYWRJdGVtcyh3aGVyZSA9IHt9KQogIGxvYWRJdGVtKHdoZXJlID0ge30pCiAgZmluZEl0ZW0oaWQpCiAgZ2V0RGVwdGgoaWQpCiAgZ2V0U2libGluZ3MoaWQpCiAgZ2V0Q2hpbGRyZW4oaWQpCiAgZ2V0UGFyZW50cyhpZCkKICBhcGlSZXF1ZXN0KGVuZHBvaW50LCBkYXRhKQAAAAAAAAAAPwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8BAAAgIGdldEltYWdlQ29sb3JzKGNvbG9yc3RyKQpRdWVyaWVzCiAgZmV0Y2hJbWFnZXMod2hlcmUgPSB7fSkKICBmZXRjaEl0ZW1zKHdoZXJlLCBmaWVsZHMsIHQgPSB0cmFuc2Zvcm1JdGVtRGF0YSkKICByZWZyZXNoSXRlbShpZCwgcHJvcHMpCiAgdXBkYXRlSXRlbShpZCwgcHJvcHMpCiAgbG9hZEl0ZW1zKHdoZXJlID0ge30pCiAgbG9hZEl0ZW0od2hlcmUgPSB7fSkKICBmaW5kSXRlbShpZCkKICBnZXREZXB0aChpZCkKICBnZXRTaWJsaW5ncyhpZCkKICBnZXRDaGlsZHJlbihpZCkKICBnZXRQYXJlbnRzKGlkKQogIGFwaVJlcXVlc3QoZW5kcG9pbnQsIGRhdGEpAAAAAAAAAAA/AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					191,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/stores/queries.js",
						"symkeys":
						[
							[
								193,
								226
							],
							[
								354,
								363
							],
							[
								458,
								465
							],
							[
								541,
								570
							],
							[
								855,
								863
							],
							[
								988,
								1042
							],
							[
								1648,
								1676
							],
							[
								2047,
								2074
							],
							[
								2399,
								2426
							],
							[
								2890,
								2916
							],
							[
								4037,
								4081
							],
							[
								4606,
								4617
							],
							[
								4719,
								4737
							],
							[
								4900,
								4918
							],
							[
								5000,
								5021
							],
							[
								5237,
								5258
							],
							[
								5334,
								5354
							],
							[
								5659,
								5691
							]
						],
						"symlist":
						[
							"function getImageColors(colorstr)",
							"(a, b) =>",
							"Queries",
							"async fetchImages(where = {})",
							"photo =>",
							"async fetchItems(where, fields, t = transformItemData)",
							"async refreshItem(id, props)",
							"async updateItem(id, props)",
							"async loadItems(where = {})",
							"async loadItem(where = {})",
							"saveItem(values, doneHandler = result => {})",
							"response =>",
							"async findItem(id)",
							"async getDepth(id)",
							"async getSiblings(id)",
							"async getChildren(id)",
							"async getParents(id)",
							"async apiRequest(endpoint, data)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA/AQAAICBnZXRJbWFnZUNvbG9ycyhjb2xvcnN0cikKUXVlcmllcwogIGZldGNoSW1hZ2VzKHdoZXJlID0ge30pCiAgZmV0Y2hJdGVtcyh3aGVyZSwgZmllbGRzLCB0ID0gdHJhbnNmb3JtSXRlbURhdGEpCiAgcmVmcmVzaEl0ZW0oaWQsIHByb3BzKQogIHVwZGF0ZUl0ZW0oaWQsIHByb3BzKQogIGxvYWRJdGVtcyh3aGVyZSA9IHt9KQogIGxvYWRJdGVtKHdoZXJlID0ge30pCiAgZmluZEl0ZW0oaWQpCiAgZ2V0RGVwdGgoaWQpCiAgZ2V0U2libGluZ3MoaWQpCiAgZ2V0Q2hpbGRyZW4oaWQpCiAgZ2V0UGFyZW50cyhpZCkKICBhcGlSZXF1ZXN0KGVuZHBvaW50LCBkYXRhKQAAAAAAAAAAPwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8BAAAgIGdldEltYWdlQ29sb3JzKGNvbG9yc3RyKQpRdWVyaWVzCiAgZmV0Y2hJbWFnZXMod2hlcmUgPSB7fSkKICBmZXRjaEl0ZW1zKHdoZXJlLCBmaWVsZHMsIHQgPSB0cmFuc2Zvcm1JdGVtRGF0YSkKICByZWZyZXNoSXRlbShpZCwgcHJvcHMpCiAgdXBkYXRlSXRlbShpZCwgcHJvcHMpCiAgbG9hZEl0ZW1zKHdoZXJlID0ge30pCiAgbG9hZEl0ZW0od2hlcmUgPSB7fSkKICBmaW5kSXRlbShpZCkKICBnZXREZXB0aChpZCkKICBnZXRTaWJsaW5ncyhpZCkKICBnZXRDaGlsZHJlbihpZCkKICBnZXRQYXJlbnRzKGlkKQogIGFwaVJlcXVlc3QoZW5kcG9pbnQsIGRhdGEpAAAAAAAAAAA/AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					192,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/stores/queries.js",
						"symkeys":
						[
							[
								193,
								226
							],
							[
								354,
								363
							],
							[
								458,
								465
							],
							[
								541,
								570
							],
							[
								855,
								863
							],
							[
								988,
								1042
							],
							[
								1648,
								1676
							],
							[
								2047,
								2074
							],
							[
								2399,
								2426
							],
							[
								2890,
								2916
							],
							[
								4037,
								4081
							],
							[
								4606,
								4617
							],
							[
								4719,
								4737
							],
							[
								4900,
								4918
							],
							[
								5000,
								5021
							],
							[
								5237,
								5258
							],
							[
								5334,
								5354
							],
							[
								5659,
								5691
							]
						],
						"symlist":
						[
							"function getImageColors(colorstr)",
							"(a, b) =>",
							"Queries",
							"async fetchImages(where = {})",
							"photo =>",
							"async fetchItems(where, fields, t = transformItemData)",
							"async refreshItem(id, props)",
							"async updateItem(id, props)",
							"async loadItems(where = {})",
							"async loadItem(where = {})",
							"saveItem(values, doneHandler = result => {})",
							"response =>",
							"async findItem(id)",
							"async getDepth(id)",
							"async getSiblings(id)",
							"async getChildren(id)",
							"async getParents(id)",
							"async apiRequest(endpoint, data)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA/AQAAICBnZXRJbWFnZUNvbG9ycyhjb2xvcnN0cikKUXVlcmllcwogIGZldGNoSW1hZ2VzKHdoZXJlID0ge30pCiAgZmV0Y2hJdGVtcyh3aGVyZSwgZmllbGRzLCB0ID0gdHJhbnNmb3JtSXRlbURhdGEpCiAgcmVmcmVzaEl0ZW0oaWQsIHByb3BzKQogIHVwZGF0ZUl0ZW0oaWQsIHByb3BzKQogIGxvYWRJdGVtcyh3aGVyZSA9IHt9KQogIGxvYWRJdGVtKHdoZXJlID0ge30pCiAgZmluZEl0ZW0oaWQpCiAgZ2V0RGVwdGgoaWQpCiAgZ2V0U2libGluZ3MoaWQpCiAgZ2V0Q2hpbGRyZW4oaWQpCiAgZ2V0UGFyZW50cyhpZCkKICBhcGlSZXF1ZXN0KGVuZHBvaW50LCBkYXRhKQAAAAAAAAAAPwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8BAAAgIGdldEltYWdlQ29sb3JzKGNvbG9yc3RyKQpRdWVyaWVzCiAgZmV0Y2hJbWFnZXMod2hlcmUgPSB7fSkKICBmZXRjaEl0ZW1zKHdoZXJlLCBmaWVsZHMsIHQgPSB0cmFuc2Zvcm1JdGVtRGF0YSkKICByZWZyZXNoSXRlbShpZCwgcHJvcHMpCiAgdXBkYXRlSXRlbShpZCwgcHJvcHMpCiAgbG9hZEl0ZW1zKHdoZXJlID0ge30pCiAgbG9hZEl0ZW0od2hlcmUgPSB7fSkKICBmaW5kSXRlbShpZCkKICBnZXREZXB0aChpZCkKICBnZXRTaWJsaW5ncyhpZCkKICBnZXRDaGlsZHJlbihpZCkKICBnZXRQYXJlbnRzKGlkKQogIGFwaVJlcXVlc3QoZW5kcG9pbnQsIGRhdGEpAAAAAAAAAAA/AQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					193,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/lazyInitializer.js",
						"symkeys":
						[
							[
								71,
								138
							],
							[
								261,
								269
							],
							[
								534,
								574
							],
							[
								585,
								604
							],
							[
								697,
								737
							],
							[
								771,
								794
							],
							[
								1111,
								1146
							],
							[
								1307,
								1312
							],
							[
								1367,
								1377
							],
							[
								1505,
								1542
							],
							[
								1959,
								2038
							],
							[
								2205,
								2213
							],
							[
								2485,
								2520
							],
							[
								2557,
								2583
							],
							[
								2891,
								2901
							],
							[
								3630,
								3663
							],
							[
								3793,
								3809
							],
							[
								4080,
								4102
							],
							[
								4393,
								4422
							],
							[
								4633,
								4638
							],
							[
								4852,
								4902
							]
						],
						"symlist":
						[
							" function Instance({ trackable = false, callback, initVal = null })",
							"value =>",
							"function TrackedInstance(initVal = null)",
							"callback = value =>",
							" function lazyInitializer(fn, opts = {})",
							"ret = (value = null) =>",
							" function lazyMembers(obj, members)",
							"get()",
							"set(value)",
							" function lazyProperty(obj, name, fn)",
							" function lazyMap(arr, lookup = item => item.name, ctor = arg => arg, prototyp)",
							"filter()",
							" function proxify(arr, cache = {})",
							"get(target, key, receiver)",
							" (v, k) =>",
							"set(target, key, value, receiver)",
							"has(target, key)",
							"getPrototypeOf(target)",
							" function lazyArray(elements)",
							"get()",
							" function valueInitializer(createFunction, onInit)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA/AQAAICBnZXRJbWFnZUNvbG9ycyhjb2xvcnN0cikKUXVlcmllcwogIGZldGNoSW1hZ2VzKHdoZXJlID0ge30pCiAgZmV0Y2hJdGVtcyh3aGVyZSwgZmllbGRzLCB0ID0gdHJhbnNmb3JtSXRlbURhdGEpCiAgcmVmcmVzaEl0ZW0oaWQsIHByb3BzKQogIHVwZGF0ZUl0ZW0oaWQsIHByb3BzKQogIGxvYWRJdGVtcyh3aGVyZSA9IHt9KQogIGxvYWRJdGVtKHdoZXJlID0ge30pCiAgZmluZEl0ZW0oaWQpCiAgZ2V0RGVwdGgoaWQpCiAgZ2V0U2libGluZ3MoaWQpCiAgZ2V0Q2hpbGRyZW4oaWQpCiAgZ2V0UGFyZW50cyhpZCkKICBhcGlSZXF1ZXN0KGVuZHBvaW50LCBkYXRhKQAAAAAAAAAApQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					194,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1719,
								1737
							],
							[
								1902,
								1921
							],
							[
								2911,
								2917
							],
							[
								3137,
								3145
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAClAQAASW5zdGFuY2UoeyB0cmFja2FibGUgPSBmYWxzZSwgY2FsbGJhY2ssIGluaXRWYWwgPSBudWxsIH0pClRyYWNrZWRJbnN0YW5jZShpbml0VmFsID0gbnVsbCkKICBsYXp5SW5pdGlhbGl6ZXIoZm4sIG9wdHMgPSB7fSkKICBsYXp5TWVtYmVycyhvYmosIG1lbWJlcnMpCiAgZ2V0KCkKICBzZXQodmFsdWUpCiAgbGF6eVByb3BlcnR5KG9iaiwgbmFtZSwgZm4pCiAgZmlsdGVyKCkKICBwcm94aWZ5KGFyciwgY2FjaGUgPSB7fSkKICBnZXQodGFyZ2V0LCBrZXksIHJlY2VpdmVyKQogIHNldCh0YXJnZXQsIGtleSwgdmFsdWUsIHJlY2VpdmVyKQogIGhhcyh0YXJnZXQsIGtleSkKICBnZXRQcm90b3R5cGVPZih0YXJnZXQpCiAgbGF6eUFycmF5KGVsZW1lbnRzKQogIGdldCgpCiAgdmFsdWVJbml0aWFsaXplcihjcmVhdGVGdW5jdGlvbiwgb25Jbml0KQAAAAAAAAAAXwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					195,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					196,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/dom/svg.js",
						"symkeys":
						[
							[
								409,
								412
							],
							[
								433,
								501
							],
							[
								660,
								673
							],
							[
								696,
								711
							],
							[
								764,
								781
							],
							[
								1064,
								1087
							],
							[
								1461,
								1472
							],
							[
								1544,
								1563
							],
							[
								1653,
								1679
							],
							[
								1798,
								1815
							],
							[
								2077,
								2082
							],
							[
								2190,
								2200
							],
							[
								2934,
								2964
							],
							[
								3204,
								3254
							],
							[
								3269,
								3300
							],
							[
								4039,
								4080
							],
							[
								4165,
								4196
							],
							[
								4257,
								4285
							],
							[
								4347,
								4373
							],
							[
								4422,
								4437
							],
							[
								4543,
								4562
							],
							[
								4898,
								4936
							],
							[
								5183,
								5278
							],
							[
								5957,
								6050
							],
							[
								6446,
								6459
							],
							[
								6632,
								6650
							],
							[
								6661,
								6695
							],
							[
								6905,
								6916
							],
							[
								6991,
								7004
							],
							[
								7040,
								7070
							],
							[
								7236,
								7274
							],
							[
								7406,
								7435
							],
							[
								7480,
								7490
							],
							[
								7515,
								7519
							],
							[
								7676,
								7687
							],
							[
								7817,
								7840
							],
							[
								7966,
								7988
							],
							[
								8026,
								8055
							],
							[
								8307,
								8315
							],
							[
								8403,
								8415
							],
							[
								8447,
								8454
							],
							[
								8483,
								8494
							],
							[
								8584,
								8591
							],
							[
								8629,
								8636
							],
							[
								8745,
								8753
							],
							[
								8804,
								8811
							],
							[
								8847,
								8874
							],
							[
								8977,
								8983
							],
							[
								9231,
								9248
							],
							[
								9815,
								9839
							],
							[
								10069,
								10085
							],
							[
								10397,
								10411
							],
							[
								10451,
								10458
							],
							[
								10629,
								10657
							],
							[
								10958,
								10981
							],
							[
								11654,
								11696
							],
							[
								11995,
								12005
							],
							[
								12117,
								12127
							],
							[
								12308,
								12327
							],
							[
								12697,
								12711
							],
							[
								13520,
								13530
							],
							[
								14453,
								14475
							],
							[
								14588,
								14609
							],
							[
								14893,
								14915
							],
							[
								15586,
								15615
							],
							[
								15973,
								15995
							],
							[
								16244,
								16254
							],
							[
								16297,
								16317
							],
							[
								16390,
								16394
							],
							[
								16408,
								16414
							],
							[
								16572,
								16597
							],
							[
								16635,
								16641
							],
							[
								16840,
								16844
							],
							[
								16866,
								16899
							]
						],
						"symlist":
						[
							"SVG",
							"static create(name, { outerHTML, innerHTML, text, ...attr }, parent)",
							"attrfn = n =>",
							"attrfn = arg =>",
							" (value, name) =>",
							"static factory(...args)",
							"create(tag)",
							"append_to(elem, to)",
							"setattr(elem, name, value)",
							"setcss(elem, css)",
							"() =>",
							"get root()",
							".append_to = function(elem, p)",
							"factory = function SVGFactory(tag, attr, children)",
							"create = (tag, attr, parent) =>",
							".derive = function(override = {}, parent)",
							".initialize = function(...args)",
							".setRoot = function(...args)",
							".parent = function(parent)",
							"append_to(elem)",
							".clear = function()",
							"static matrix(element, screen = false)",
							"static bbox(element, options = { parent: null, absolute: false, client: false, screen: false })",
							"static gradient(type, { stops, factory = SVG.create, parent = null, line = false, ...props })",
							"(color, o) =>",
							"static owner(elem)",
							"ret = function(tag, props, parent)",
							" function()",
							"static path()",
							"static getProperty(elem, name)",
							"static getProperties(elem, properties)",
							"static *coloredElements(elem)",
							" (e, d) =>",
							"a =>",
							"([k, v]) =>",
							"(acc, [name, value]) =>",
							"static allColors(elem)",
							"addColor = (c, item, prop) =>",
							"color =>",
							"get colors()",
							"item =>",
							"index(name)",
							"item =>",
							"name(i)",
							"get(arg)",
							"item =>",
							"set(index, color, elements)",
							"dump()",
							"adjacencyMatrix()",
							"replace(color, newColor)",
							"newColor = () =>",
							"replaceAll(fn)",
							"item =>",
							"fn = (rgba, index, color) =>",
							"static *lineIterator(e)",
							"static *pathIterator(e, opts, fn = p => p)",
							"pos = i =>",
							"pos = i =>",
							"do_point = point =>",
							" (str, pad) =>",
							"toString()",
							"static parsePath(path)",
							"parseValues = args =>",
							" (_, command, args) =>",
							"static viewbox(element, rect)",
							"static splitPath(path)",
							"command =>",
							"([command, args]) =>",
							"m =>",
							"arg =>",
							"static pathToPoints(path)",
							"cmd =>",
							"n =>",
							"static *pathToPointIterator(path)"
						]
					},
					"AQAAAAAAAAAAAAAA5QQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					197,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/dom/svg.js",
						"symkeys":
						[
							[
								409,
								412
							],
							[
								433,
								501
							],
							[
								660,
								673
							],
							[
								696,
								711
							],
							[
								1081,
								1104
							],
							[
								1478,
								1489
							],
							[
								1561,
								1580
							],
							[
								1670,
								1696
							],
							[
								1815,
								1832
							],
							[
								2094,
								2099
							],
							[
								2207,
								2217
							],
							[
								2951,
								2981
							],
							[
								3221,
								3271
							],
							[
								3286,
								3317
							],
							[
								4056,
								4097
							],
							[
								4182,
								4213
							],
							[
								4274,
								4302
							],
							[
								4364,
								4390
							],
							[
								4439,
								4454
							],
							[
								4560,
								4579
							],
							[
								4915,
								4953
							],
							[
								5200,
								5295
							],
							[
								5974,
								6067
							],
							[
								6463,
								6476
							],
							[
								6649,
								6667
							],
							[
								6678,
								6712
							],
							[
								6922,
								6933
							],
							[
								7008,
								7021
							],
							[
								7057,
								7087
							],
							[
								7253,
								7291
							],
							[
								7423,
								7452
							],
							[
								7497,
								7507
							],
							[
								7532,
								7536
							],
							[
								7693,
								7704
							],
							[
								7834,
								7857
							],
							[
								7983,
								8005
							],
							[
								8043,
								8072
							],
							[
								8324,
								8332
							],
							[
								8420,
								8432
							],
							[
								8464,
								8471
							],
							[
								8500,
								8511
							],
							[
								8601,
								8608
							],
							[
								8646,
								8653
							],
							[
								8762,
								8770
							],
							[
								8821,
								8828
							],
							[
								8864,
								8891
							],
							[
								8994,
								9000
							],
							[
								9248,
								9265
							],
							[
								9832,
								9856
							],
							[
								10086,
								10102
							],
							[
								10414,
								10428
							],
							[
								10468,
								10475
							],
							[
								10646,
								10674
							],
							[
								10975,
								10998
							],
							[
								11671,
								11713
							],
							[
								12012,
								12022
							],
							[
								12134,
								12144
							],
							[
								12325,
								12344
							],
							[
								12714,
								12728
							],
							[
								13537,
								13547
							],
							[
								14470,
								14492
							],
							[
								14605,
								14626
							],
							[
								14910,
								14932
							],
							[
								15603,
								15632
							],
							[
								15990,
								16012
							],
							[
								16261,
								16271
							],
							[
								16314,
								16334
							],
							[
								16407,
								16411
							],
							[
								16425,
								16431
							],
							[
								16589,
								16614
							],
							[
								16652,
								16658
							],
							[
								16857,
								16861
							],
							[
								16883,
								16916
							]
						],
						"symlist":
						[
							"SVG",
							"static create(name, { outerHTML, innerHTML, text, ...attr }, parent)",
							"attrfn = n =>",
							"attrfn = arg =>",
							"static factory(...args)",
							"create(tag)",
							"append_to(elem, to)",
							"setattr(elem, name, value)",
							"setcss(elem, css)",
							"() =>",
							"get root()",
							".append_to = function(elem, p)",
							"factory = function SVGFactory(tag, attr, children)",
							"create = (tag, attr, parent) =>",
							".derive = function(override = {}, parent)",
							".initialize = function(...args)",
							".setRoot = function(...args)",
							".parent = function(parent)",
							"append_to(elem)",
							".clear = function()",
							"static matrix(element, screen = false)",
							"static bbox(element, options = { parent: null, absolute: false, client: false, screen: false })",
							"static gradient(type, { stops, factory = SVG.create, parent = null, line = false, ...props })",
							"(color, o) =>",
							"static owner(elem)",
							"ret = function(tag, props, parent)",
							" function()",
							"static path()",
							"static getProperty(elem, name)",
							"static getProperties(elem, properties)",
							"static *coloredElements(elem)",
							" (e, d) =>",
							"a =>",
							"([k, v]) =>",
							"(acc, [name, value]) =>",
							"static allColors(elem)",
							"addColor = (c, item, prop) =>",
							"color =>",
							"get colors()",
							"item =>",
							"index(name)",
							"item =>",
							"name(i)",
							"get(arg)",
							"item =>",
							"set(index, color, elements)",
							"dump()",
							"adjacencyMatrix()",
							"replace(color, newColor)",
							"newColor = () =>",
							"replaceAll(fn)",
							"item =>",
							"fn = (rgba, index, color) =>",
							"static *lineIterator(e)",
							"static *pathIterator(e, opts, fn = p => p)",
							"pos = i =>",
							"pos = i =>",
							"do_point = point =>",
							" (str, pad) =>",
							"toString()",
							"static parsePath(path)",
							"parseValues = args =>",
							" (_, command, args) =>",
							"static viewbox(element, rect)",
							"static splitPath(path)",
							"command =>",
							"([command, args]) =>",
							"m =>",
							"arg =>",
							"static pathToPoints(path)",
							"cmd =>",
							"n =>",
							"static *pathToPointIterator(path)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADlBAAAU1ZHCiAgc3RhdGljIGNyZWF0ZShuYW1lLCB7IG91dGVySFRNTCwgaW5uZXJIVE1MLCB0ZXh0LCAuLi5hdHRyIH0sIHBhcmVudCkKICBzdGF0aWMgZmFjdG9yeSguLi5hcmdzKQogIGNyZWF0ZSh0YWcpCiAgYXBwZW5kX3RvKGVsZW0sIHRvKQogIHNldGF0dHIoZWxlbSwgbmFtZSwgdmFsdWUpCiAgc2V0Y3NzKGVsZW0sIGNzcykKICBnZXQgcm9vdCgpCiAgLmFwcGVuZF90byA9IGZ1bmN0aW9uKGVsZW0sIHApCiAgZmFjdG9yeSA9IGZ1bmN0aW9uIFNWR0ZhY3RvcnkodGFnLCBhdHRyLCBjaGlsZHJlbikKICAuZGVyaXZlID0gZnVuY3Rpb24ob3ZlcnJpZGUgPSB7fSwgcGFyZW50KQogIC5pbml0aWFsaXplID0gZnVuY3Rpb24oLi4uYXJncykKICAuc2V0Um9vdCA9IGZ1bmN0aW9uKC4uLmFyZ3MpCiAgLnBhcmVudCA9IGZ1bmN0aW9uKHBhcmVudCkKICBhcHBlbmRfdG8oZWxlbSkKICAuY2xlYXIgPSBmdW5jdGlvbigpCiAgc3RhdGljIG1hdHJpeChlbGVtZW50LCBzY3JlZW4gPSBmYWxzZSkKICBzdGF0aWMgYmJveChlbGVtZW50LCBvcHRpb25zID0geyBwYXJlbnQ6IG51bGwsIGFic29sdXRlOiBmYWxzZSwgY2xpZW50OiBmYWxzZSwgc2NyZWVuOiBmYWxzZSB9KQogIHN0YXRpYyBncmFkaWVudCh0eXBlLCB7IHN0b3BzLCBmYWN0b3J5ID0gU1ZHLmNyZWF0ZSwgcGFyZW50ID0gbnVsbCwgbGluZSA9IGZhbHNlLCAuLi5wcm9wcyB9KQogIHN0YXRpYyBvd25lcihlbGVtKQogIHJldCA9IGZ1bmN0aW9uKHRhZywgcHJvcHMsIHBhcmVudCkKICBmdW5jdGlvbigpCiAgc3RhdGljIHBhdGgoKQogIHN0YXRpYyBnZXRQcm9wZXJ0eShlbGVtLCBuYW1lKQogIHN0YXRpYyBnZXRQcm9wZXJ0aWVzKGVsZW0sIHByb3BlcnRpZXMpCiAgc3RhdGljICpjb2xvcmVkRWxlbWVudHMoZWxlbSkKICBzdGF0aWMgYWxsQ29sb3JzKGVsZW0pCiAgZ2V0IGNvbG9ycygpCiAgaW5kZXgobmFtZSkKICBuYW1lKGkpCiAgZ2V0KGFyZykKICBzZXQoaW5kZXgsIGNvbG9yLCBlbGVtZW50cykKICBkdW1wKCkKICBhZGphY2VuY3lNYXRyaXgoKQogIHJlcGxhY2UoY29sb3IsIG5ld0NvbG9yKQogIHJlcGxhY2VBbGwoZm4pCiAgc3RhdGljICpsaW5lSXRlcmF0b3IoZSkKICB0b1N0cmluZygpCiAgc3RhdGljIHBhcnNlUGF0aChwYXRoKQogIHN0YXRpYyB2aWV3Ym94KGVsZW1lbnQsIHJlY3QpCiAgc3RhdGljIHNwbGl0UGF0aChwYXRoKQogIHN0YXRpYyBwYXRoVG9Qb2ludHMocGF0aCkKICBzdGF0aWMgKnBhdGhUb1BvaW50SXRlcmF0b3IocGF0aCkAAAAAAAAAAOUEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADlBAAAU1ZHCiAgc3RhdGljIGNyZWF0ZShuYW1lLCB7IG91dGVySFRNTCwgaW5uZXJIVE1MLCB0ZXh0LCAuLi5hdHRyIH0sIHBhcmVudCkKICBzdGF0aWMgZmFjdG9yeSguLi5hcmdzKQogIGNyZWF0ZSh0YWcpCiAgYXBwZW5kX3RvKGVsZW0sIHRvKQogIHNldGF0dHIoZWxlbSwgbmFtZSwgdmFsdWUpCiAgc2V0Y3NzKGVsZW0sIGNzcykKICBnZXQgcm9vdCgpCiAgLmFwcGVuZF90byA9IGZ1bmN0aW9uKGVsZW0sIHApCiAgZmFjdG9yeSA9IGZ1bmN0aW9uIFNWR0ZhY3RvcnkodGFnLCBhdHRyLCBjaGlsZHJlbikKICAuZGVyaXZlID0gZnVuY3Rpb24ob3ZlcnJpZGUgPSB7fSwgcGFyZW50KQogIC5pbml0aWFsaXplID0gZnVuY3Rpb24oLi4uYXJncykKICAuc2V0Um9vdCA9IGZ1bmN0aW9uKC4uLmFyZ3MpCiAgLnBhcmVudCA9IGZ1bmN0aW9uKHBhcmVudCkKICBhcHBlbmRfdG8oZWxlbSkKICAuY2xlYXIgPSBmdW5jdGlvbigpCiAgc3RhdGljIG1hdHJpeChlbGVtZW50LCBzY3JlZW4gPSBmYWxzZSkKICBzdGF0aWMgYmJveChlbGVtZW50LCBvcHRpb25zID0geyBwYXJlbnQ6IG51bGwsIGFic29sdXRlOiBmYWxzZSwgY2xpZW50OiBmYWxzZSwgc2NyZWVuOiBmYWxzZSB9KQogIHN0YXRpYyBncmFkaWVudCh0eXBlLCB7IHN0b3BzLCBmYWN0b3J5ID0gU1ZHLmNyZWF0ZSwgcGFyZW50ID0gbnVsbCwgbGluZSA9IGZhbHNlLCAuLi5wcm9wcyB9KQogIHN0YXRpYyBvd25lcihlbGVtKQogIHJldCA9IGZ1bmN0aW9uKHRhZywgcHJvcHMsIHBhcmVudCkKICBmdW5jdGlvbigpCiAgc3RhdGljIHBhdGgoKQogIHN0YXRpYyBnZXRQcm9wZXJ0eShlbGVtLCBuYW1lKQogIHN0YXRpYyBnZXRQcm9wZXJ0aWVzKGVsZW0sIHByb3BlcnRpZXMpCiAgc3RhdGljICpjb2xvcmVkRWxlbWVudHMoZWxlbSkKICBzdGF0aWMgYWxsQ29sb3JzKGVsZW0pCiAgZ2V0IGNvbG9ycygpCiAgaW5kZXgobmFtZSkKICBuYW1lKGkpCiAgZ2V0KGFyZykKICBzZXQoaW5kZXgsIGNvbG9yLCBlbGVtZW50cykKICBkdW1wKCkKICBhZGphY2VuY3lNYXRyaXgoKQogIHJlcGxhY2UoY29sb3IsIG5ld0NvbG9yKQogIHJlcGxhY2VBbGwoZm4pCiAgc3RhdGljICpsaW5lSXRlcmF0b3IoZSkKICB0b1N0cmluZygpCiAgc3RhdGljIHBhcnNlUGF0aChwYXRoKQogIHN0YXRpYyB2aWV3Ym94KGVsZW1lbnQsIHJlY3QpCiAgc3RhdGljIHNwbGl0UGF0aChwYXRoKQogIHN0YXRpYyBwYXRoVG9Qb2ludHMocGF0aCkKICBzdGF0aWMgKnBhdGhUb1BvaW50SXRlcmF0b3IocGF0aCkAAAAAAAAAAOUEAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					198,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/lazyInitializer.js",
						"symkeys":
						[
							[
								71,
								138
							],
							[
								261,
								269
							],
							[
								534,
								574
							],
							[
								585,
								604
							],
							[
								697,
								737
							],
							[
								771,
								794
							],
							[
								1111,
								1146
							],
							[
								1307,
								1312
							],
							[
								1367,
								1377
							],
							[
								1505,
								1542
							],
							[
								1959,
								2038
							],
							[
								2205,
								2213
							],
							[
								2485,
								2520
							],
							[
								2557,
								2583
							],
							[
								2891,
								2901
							],
							[
								3630,
								3663
							],
							[
								3793,
								3809
							],
							[
								4080,
								4102
							],
							[
								4393,
								4422
							],
							[
								4633,
								4638
							],
							[
								4852,
								4902
							]
						],
						"symlist":
						[
							" function Instance({ trackable = false, callback, initVal = null })",
							"value =>",
							"function TrackedInstance(initVal = null)",
							"callback = value =>",
							" function lazyInitializer(fn, opts = {})",
							"ret = (value = null) =>",
							" function lazyMembers(obj, members)",
							"get()",
							"set(value)",
							" function lazyProperty(obj, name, fn)",
							" function lazyMap(arr, lookup = item => item.name, ctor = arg => arg, prototyp)",
							"filter()",
							" function proxify(arr, cache = {})",
							"get(target, key, receiver)",
							" (v, k) =>",
							"set(target, key, value, receiver)",
							"has(target, key)",
							"getPrototypeOf(target)",
							" function lazyArray(elements)",
							"get()",
							" function valueInitializer(createFunction, onInit)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlBAAAU1ZHCiAgc3RhdGljIGNyZWF0ZShuYW1lLCB7IG91dGVySFRNTCwgaW5uZXJIVE1MLCB0ZXh0LCAuLi5hdHRyIH0sIHBhcmVudCkKICBzdGF0aWMgZmFjdG9yeSguLi5hcmdzKQogIGNyZWF0ZSh0YWcpCiAgYXBwZW5kX3RvKGVsZW0sIHRvKQogIHNldGF0dHIoZWxlbSwgbmFtZSwgdmFsdWUpCiAgc2V0Y3NzKGVsZW0sIGNzcykKICBnZXQgcm9vdCgpCiAgLmFwcGVuZF90byA9IGZ1bmN0aW9uKGVsZW0sIHApCiAgZmFjdG9yeSA9IGZ1bmN0aW9uIFNWR0ZhY3RvcnkodGFnLCBhdHRyLCBjaGlsZHJlbikKICAuZGVyaXZlID0gZnVuY3Rpb24ob3ZlcnJpZGUgPSB7fSwgcGFyZW50KQogIC5pbml0aWFsaXplID0gZnVuY3Rpb24oLi4uYXJncykKICAuc2V0Um9vdCA9IGZ1bmN0aW9uKC4uLmFyZ3MpCiAgLnBhcmVudCA9IGZ1bmN0aW9uKHBhcmVudCkKICBhcHBlbmRfdG8oZWxlbSkKICAuY2xlYXIgPSBmdW5jdGlvbigpCiAgc3RhdGljIG1hdHJpeChlbGVtZW50LCBzY3JlZW4gPSBmYWxzZSkKICBzdGF0aWMgYmJveChlbGVtZW50LCBvcHRpb25zID0geyBwYXJlbnQ6IG51bGwsIGFic29sdXRlOiBmYWxzZSwgY2xpZW50OiBmYWxzZSwgc2NyZWVuOiBmYWxzZSB9KQogIHN0YXRpYyBncmFkaWVudCh0eXBlLCB7IHN0b3BzLCBmYWN0b3J5ID0gU1ZHLmNyZWF0ZSwgcGFyZW50ID0gbnVsbCwgbGluZSA9IGZhbHNlLCAuLi5wcm9wcyB9KQogIHN0YXRpYyBvd25lcihlbGVtKQogIHJldCA9IGZ1bmN0aW9uKHRhZywgcHJvcHMsIHBhcmVudCkKICBmdW5jdGlvbigpCiAgc3RhdGljIHBhdGgoKQogIHN0YXRpYyBnZXRQcm9wZXJ0eShlbGVtLCBuYW1lKQogIHN0YXRpYyBnZXRQcm9wZXJ0aWVzKGVsZW0sIHByb3BlcnRpZXMpCiAgc3RhdGljICpjb2xvcmVkRWxlbWVudHMoZWxlbSkKICBzdGF0aWMgYWxsQ29sb3JzKGVsZW0pCiAgZ2V0IGNvbG9ycygpCiAgaW5kZXgobmFtZSkKICBuYW1lKGkpCiAgZ2V0KGFyZykKICBzZXQoaW5kZXgsIGNvbG9yLCBlbGVtZW50cykKICBkdW1wKCkKICBhZGphY2VuY3lNYXRyaXgoKQogIHJlcGxhY2UoY29sb3IsIG5ld0NvbG9yKQogIHJlcGxhY2VBbGwoZm4pCiAgc3RhdGljICpsaW5lSXRlcmF0b3IoZSkKICB0b1N0cmluZygpCiAgc3RhdGljIHBhcnNlUGF0aChwYXRoKQogIHN0YXRpYyB2aWV3Ym94KGVsZW1lbnQsIHJlY3QpCiAgc3RhdGljIHNwbGl0UGF0aChwYXRoKQogIHN0YXRpYyBwYXRoVG9Qb2ludHMocGF0aCkKICBzdGF0aWMgKnBhdGhUb1BvaW50SXRlcmF0b3IocGF0aCkAAAAAAAAAAKUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					199,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1719,
								1737
							],
							[
								1902,
								1921
							],
							[
								2911,
								2917
							],
							[
								3137,
								3145
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAClAQAASW5zdGFuY2UoeyB0cmFja2FibGUgPSBmYWxzZSwgY2FsbGJhY2ssIGluaXRWYWwgPSBudWxsIH0pClRyYWNrZWRJbnN0YW5jZShpbml0VmFsID0gbnVsbCkKICBsYXp5SW5pdGlhbGl6ZXIoZm4sIG9wdHMgPSB7fSkKICBsYXp5TWVtYmVycyhvYmosIG1lbWJlcnMpCiAgZ2V0KCkKICBzZXQodmFsdWUpCiAgbGF6eVByb3BlcnR5KG9iaiwgbmFtZSwgZm4pCiAgZmlsdGVyKCkKICBwcm94aWZ5KGFyciwgY2FjaGUgPSB7fSkKICBnZXQodGFyZ2V0LCBrZXksIHJlY2VpdmVyKQogIHNldCh0YXJnZXQsIGtleSwgdmFsdWUsIHJlY2VpdmVyKQogIGhhcyh0YXJnZXQsIGtleSkKICBnZXRQcm90b3R5cGVPZih0YXJnZXQpCiAgbGF6eUFycmF5KGVsZW1lbnRzKQogIGdldCgpCiAgdmFsdWVJbml0aWFsaXplcihjcmVhdGVGdW5jdGlvbiwgb25Jbml0KQAAAAAAAAAAXwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					200,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/lazyInitializer.js",
						"symkeys":
						[
							[
								71,
								138
							],
							[
								261,
								269
							],
							[
								534,
								574
							],
							[
								585,
								604
							],
							[
								697,
								737
							],
							[
								771,
								794
							],
							[
								1111,
								1146
							],
							[
								1307,
								1312
							],
							[
								1367,
								1377
							],
							[
								1505,
								1542
							],
							[
								1959,
								2038
							],
							[
								2205,
								2213
							],
							[
								2485,
								2520
							],
							[
								2557,
								2583
							],
							[
								2891,
								2901
							],
							[
								3630,
								3663
							],
							[
								3793,
								3809
							],
							[
								4080,
								4102
							],
							[
								4393,
								4422
							],
							[
								4633,
								4638
							],
							[
								4852,
								4902
							]
						],
						"symlist":
						[
							" function Instance({ trackable = false, callback, initVal = null })",
							"value =>",
							"function TrackedInstance(initVal = null)",
							"callback = value =>",
							" function lazyInitializer(fn, opts = {})",
							"ret = (value = null) =>",
							" function lazyMembers(obj, members)",
							"get()",
							"set(value)",
							" function lazyProperty(obj, name, fn)",
							" function lazyMap(arr, lookup = item => item.name, ctor = arg => arg, prototyp)",
							"filter()",
							" function proxify(arr, cache = {})",
							"get(target, key, receiver)",
							" (v, k) =>",
							"set(target, key, value, receiver)",
							"has(target, key)",
							"getPrototypeOf(target)",
							" function lazyArray(elements)",
							"get()",
							" function valueInitializer(createFunction, onInit)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAKUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					201,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1719,
								1737
							],
							[
								1902,
								1921
							],
							[
								2911,
								2917
							],
							[
								3137,
								3145
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAClAQAASW5zdGFuY2UoeyB0cmFja2FibGUgPSBmYWxzZSwgY2FsbGJhY2ssIGluaXRWYWwgPSBudWxsIH0pClRyYWNrZWRJbnN0YW5jZShpbml0VmFsID0gbnVsbCkKICBsYXp5SW5pdGlhbGl6ZXIoZm4sIG9wdHMgPSB7fSkKICBsYXp5TWVtYmVycyhvYmosIG1lbWJlcnMpCiAgZ2V0KCkKICBzZXQodmFsdWUpCiAgbGF6eVByb3BlcnR5KG9iaiwgbmFtZSwgZm4pCiAgZmlsdGVyKCkKICBwcm94aWZ5KGFyciwgY2FjaGUgPSB7fSkKICBnZXQodGFyZ2V0LCBrZXksIHJlY2VpdmVyKQogIHNldCh0YXJnZXQsIGtleSwgdmFsdWUsIHJlY2VpdmVyKQogIGhhcyh0YXJnZXQsIGtleSkKICBnZXRQcm90b3R5cGVPZih0YXJnZXQpCiAgbGF6eUFycmF5KGVsZW1lbnRzKQogIGdldCgpCiAgdmFsdWVJbml0aWFsaXplcihjcmVhdGVGdW5jdGlvbiwgb25Jbml0KQAAAAAAAAAAXwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					202,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1717,
								1735
							],
							[
								1900,
								1919
							],
							[
								2909,
								2915
							],
							[
								3135,
								3143
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					203,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					204,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1717,
								1735
							],
							[
								1900,
								1919
							],
							[
								2909,
								2915
							],
							[
								3135,
								3143
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AQAAAAAAAAAAAAAAXwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					205,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					206,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					207,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					208,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1717,
								1735
							],
							[
								1900,
								1919
							],
							[
								2909,
								2915
							],
							[
								3135,
								3143
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AQAAAAAAAAAAAAAAXwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					209,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1726,
								1744
							],
							[
								1909,
								1928
							],
							[
								2918,
								2924
							],
							[
								3144,
								3152
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					210,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1726,
								1744
							],
							[
								1909,
								1928
							],
							[
								2918,
								2924
							],
							[
								3144,
								3152
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					211,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1726,
								1744
							],
							[
								1909,
								1928
							],
							[
								2946,
								2952
							],
							[
								3172,
								3180
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					212,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1728,
								1746
							],
							[
								1911,
								1930
							],
							[
								2948,
								2954
							],
							[
								3174,
								3182
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					213,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1730,
								1748
							],
							[
								1913,
								1932
							],
							[
								2950,
								2956
							],
							[
								3176,
								3184
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					214,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/dom/svg.js",
						"symkeys":
						[
							[
								409,
								412
							],
							[
								433,
								501
							],
							[
								660,
								673
							],
							[
								696,
								711
							],
							[
								1081,
								1104
							],
							[
								1478,
								1489
							],
							[
								1561,
								1580
							],
							[
								1670,
								1696
							],
							[
								1815,
								1832
							],
							[
								2094,
								2099
							],
							[
								2207,
								2217
							],
							[
								2951,
								2981
							],
							[
								3221,
								3271
							],
							[
								3286,
								3317
							],
							[
								4056,
								4097
							],
							[
								4182,
								4213
							],
							[
								4274,
								4302
							],
							[
								4364,
								4390
							],
							[
								4439,
								4454
							],
							[
								4560,
								4579
							],
							[
								4915,
								4953
							],
							[
								5200,
								5295
							],
							[
								5974,
								6067
							],
							[
								6463,
								6476
							],
							[
								6649,
								6667
							],
							[
								6678,
								6712
							],
							[
								6922,
								6933
							],
							[
								7008,
								7021
							],
							[
								7057,
								7087
							],
							[
								7253,
								7291
							],
							[
								7423,
								7452
							],
							[
								7497,
								7507
							],
							[
								7532,
								7536
							],
							[
								7693,
								7704
							],
							[
								7834,
								7857
							],
							[
								7983,
								8005
							],
							[
								8043,
								8072
							],
							[
								8324,
								8332
							],
							[
								8420,
								8432
							],
							[
								8464,
								8471
							],
							[
								8500,
								8511
							],
							[
								8601,
								8608
							],
							[
								8646,
								8653
							],
							[
								8762,
								8770
							],
							[
								8821,
								8828
							],
							[
								8864,
								8891
							],
							[
								8994,
								9000
							],
							[
								9248,
								9265
							],
							[
								9832,
								9856
							],
							[
								10086,
								10102
							],
							[
								10414,
								10428
							],
							[
								10468,
								10475
							],
							[
								10646,
								10674
							],
							[
								10975,
								10998
							],
							[
								11671,
								11713
							],
							[
								12012,
								12022
							],
							[
								12134,
								12144
							],
							[
								12325,
								12344
							],
							[
								12714,
								12728
							],
							[
								13537,
								13547
							],
							[
								14470,
								14492
							],
							[
								14605,
								14626
							],
							[
								14910,
								14932
							],
							[
								15603,
								15632
							],
							[
								15990,
								16012
							],
							[
								16261,
								16271
							],
							[
								16314,
								16334
							],
							[
								16407,
								16411
							],
							[
								16425,
								16431
							],
							[
								16589,
								16614
							],
							[
								16652,
								16658
							],
							[
								16857,
								16861
							],
							[
								16883,
								16916
							]
						],
						"symlist":
						[
							"SVG",
							"static create(name, { outerHTML, innerHTML, text, ...attr }, parent)",
							"attrfn = n =>",
							"attrfn = arg =>",
							"static factory(...args)",
							"create(tag)",
							"append_to(elem, to)",
							"setattr(elem, name, value)",
							"setcss(elem, css)",
							"() =>",
							"get root()",
							".append_to = function(elem, p)",
							"factory = function SVGFactory(tag, attr, children)",
							"create = (tag, attr, parent) =>",
							".derive = function(override = {}, parent)",
							".initialize = function(...args)",
							".setRoot = function(...args)",
							".parent = function(parent)",
							"append_to(elem)",
							".clear = function()",
							"static matrix(element, screen = false)",
							"static bbox(element, options = { parent: null, absolute: false, client: false, screen: false })",
							"static gradient(type, { stops, factory = SVG.create, parent = null, line = false, ...props })",
							"(color, o) =>",
							"static owner(elem)",
							"ret = function(tag, props, parent)",
							" function()",
							"static path()",
							"static getProperty(elem, name)",
							"static getProperties(elem, properties)",
							"static *coloredElements(elem)",
							" (e, d) =>",
							"a =>",
							"([k, v]) =>",
							"(acc, [name, value]) =>",
							"static allColors(elem)",
							"addColor = (c, item, prop) =>",
							"color =>",
							"get colors()",
							"item =>",
							"index(name)",
							"item =>",
							"name(i)",
							"get(arg)",
							"item =>",
							"set(index, color, elements)",
							"dump()",
							"adjacencyMatrix()",
							"replace(color, newColor)",
							"newColor = () =>",
							"replaceAll(fn)",
							"item =>",
							"fn = (rgba, index, color) =>",
							"static *lineIterator(e)",
							"static *pathIterator(e, opts, fn = p => p)",
							"pos = i =>",
							"pos = i =>",
							"do_point = point =>",
							" (str, pad) =>",
							"toString()",
							"static parsePath(path)",
							"parseValues = args =>",
							" (_, command, args) =>",
							"static viewbox(element, rect)",
							"static splitPath(path)",
							"command =>",
							"([command, args]) =>",
							"m =>",
							"arg =>",
							"static pathToPoints(path)",
							"cmd =>",
							"n =>",
							"static *pathToPointIterator(path)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAOUEAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					215,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1730,
								1748
							],
							[
								1913,
								1932
							],
							[
								2950,
								2956
							],
							[
								3176,
								3184
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlBAAAU1ZHCiAgc3RhdGljIGNyZWF0ZShuYW1lLCB7IG91dGVySFRNTCwgaW5uZXJIVE1MLCB0ZXh0LCAuLi5hdHRyIH0sIHBhcmVudCkKICBzdGF0aWMgZmFjdG9yeSguLi5hcmdzKQogIGNyZWF0ZSh0YWcpCiAgYXBwZW5kX3RvKGVsZW0sIHRvKQogIHNldGF0dHIoZWxlbSwgbmFtZSwgdmFsdWUpCiAgc2V0Y3NzKGVsZW0sIGNzcykKICBnZXQgcm9vdCgpCiAgLmFwcGVuZF90byA9IGZ1bmN0aW9uKGVsZW0sIHApCiAgZmFjdG9yeSA9IGZ1bmN0aW9uIFNWR0ZhY3RvcnkodGFnLCBhdHRyLCBjaGlsZHJlbikKICAuZGVyaXZlID0gZnVuY3Rpb24ob3ZlcnJpZGUgPSB7fSwgcGFyZW50KQogIC5pbml0aWFsaXplID0gZnVuY3Rpb24oLi4uYXJncykKICAuc2V0Um9vdCA9IGZ1bmN0aW9uKC4uLmFyZ3MpCiAgLnBhcmVudCA9IGZ1bmN0aW9uKHBhcmVudCkKICBhcHBlbmRfdG8oZWxlbSkKICAuY2xlYXIgPSBmdW5jdGlvbigpCiAgc3RhdGljIG1hdHJpeChlbGVtZW50LCBzY3JlZW4gPSBmYWxzZSkKICBzdGF0aWMgYmJveChlbGVtZW50LCBvcHRpb25zID0geyBwYXJlbnQ6IG51bGwsIGFic29sdXRlOiBmYWxzZSwgY2xpZW50OiBmYWxzZSwgc2NyZWVuOiBmYWxzZSB9KQogIHN0YXRpYyBncmFkaWVudCh0eXBlLCB7IHN0b3BzLCBmYWN0b3J5ID0gU1ZHLmNyZWF0ZSwgcGFyZW50ID0gbnVsbCwgbGluZSA9IGZhbHNlLCAuLi5wcm9wcyB9KQogIHN0YXRpYyBvd25lcihlbGVtKQogIHJldCA9IGZ1bmN0aW9uKHRhZywgcHJvcHMsIHBhcmVudCkKICBmdW5jdGlvbigpCiAgc3RhdGljIHBhdGgoKQogIHN0YXRpYyBnZXRQcm9wZXJ0eShlbGVtLCBuYW1lKQogIHN0YXRpYyBnZXRQcm9wZXJ0aWVzKGVsZW0sIHByb3BlcnRpZXMpCiAgc3RhdGljICpjb2xvcmVkRWxlbWVudHMoZWxlbSkKICBzdGF0aWMgYWxsQ29sb3JzKGVsZW0pCiAgZ2V0IGNvbG9ycygpCiAgaW5kZXgobmFtZSkKICBuYW1lKGkpCiAgZ2V0KGFyZykKICBzZXQoaW5kZXgsIGNvbG9yLCBlbGVtZW50cykKICBkdW1wKCkKICBhZGphY2VuY3lNYXRyaXgoKQogIHJlcGxhY2UoY29sb3IsIG5ld0NvbG9yKQogIHJlcGxhY2VBbGwoZm4pCiAgc3RhdGljICpsaW5lSXRlcmF0b3IoZSkKICB0b1N0cmluZygpCiAgc3RhdGljIHBhcnNlUGF0aChwYXRoKQogIHN0YXRpYyB2aWV3Ym94KGVsZW1lbnQsIHJlY3QpCiAgc3RhdGljIHNwbGl0UGF0aChwYXRoKQogIHN0YXRpYyBwYXRoVG9Qb2ludHMocGF0aCkKICBzdGF0aWMgKnBhdGhUb1BvaW50SXRlcmF0b3IocGF0aCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					216,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/dom/svg.js",
						"symkeys":
						[
							[
								409,
								412
							],
							[
								433,
								501
							],
							[
								660,
								673
							],
							[
								696,
								711
							],
							[
								1081,
								1104
							],
							[
								1478,
								1489
							],
							[
								1561,
								1580
							],
							[
								1670,
								1696
							],
							[
								1815,
								1832
							],
							[
								2094,
								2099
							],
							[
								2207,
								2217
							],
							[
								2951,
								2981
							],
							[
								3221,
								3271
							],
							[
								3286,
								3317
							],
							[
								4056,
								4097
							],
							[
								4182,
								4213
							],
							[
								4274,
								4302
							],
							[
								4364,
								4390
							],
							[
								4439,
								4454
							],
							[
								4560,
								4579
							],
							[
								4915,
								4953
							],
							[
								5200,
								5295
							],
							[
								5974,
								6067
							],
							[
								6463,
								6476
							],
							[
								6649,
								6667
							],
							[
								6678,
								6712
							],
							[
								6922,
								6933
							],
							[
								7008,
								7021
							],
							[
								7057,
								7087
							],
							[
								7253,
								7291
							],
							[
								7423,
								7452
							],
							[
								7497,
								7507
							],
							[
								7532,
								7536
							],
							[
								7693,
								7704
							],
							[
								7834,
								7857
							],
							[
								7983,
								8005
							],
							[
								8043,
								8072
							],
							[
								8324,
								8332
							],
							[
								8420,
								8432
							],
							[
								8464,
								8471
							],
							[
								8500,
								8511
							],
							[
								8601,
								8608
							],
							[
								8646,
								8653
							],
							[
								8762,
								8770
							],
							[
								8821,
								8828
							],
							[
								8864,
								8891
							],
							[
								8994,
								9000
							],
							[
								9248,
								9265
							],
							[
								9832,
								9856
							],
							[
								10086,
								10102
							],
							[
								10414,
								10428
							],
							[
								10468,
								10475
							],
							[
								10646,
								10674
							],
							[
								10975,
								10998
							],
							[
								11671,
								11713
							],
							[
								12012,
								12022
							],
							[
								12134,
								12144
							],
							[
								12325,
								12344
							],
							[
								12714,
								12728
							],
							[
								13537,
								13547
							],
							[
								14470,
								14492
							],
							[
								14605,
								14626
							],
							[
								14910,
								14932
							],
							[
								15603,
								15632
							],
							[
								15990,
								16012
							],
							[
								16261,
								16271
							],
							[
								16314,
								16334
							],
							[
								16407,
								16411
							],
							[
								16425,
								16431
							],
							[
								16589,
								16614
							],
							[
								16652,
								16658
							],
							[
								16857,
								16861
							],
							[
								16883,
								16916
							]
						],
						"symlist":
						[
							"SVG",
							"static create(name, { outerHTML, innerHTML, text, ...attr }, parent)",
							"attrfn = n =>",
							"attrfn = arg =>",
							"static factory(...args)",
							"create(tag)",
							"append_to(elem, to)",
							"setattr(elem, name, value)",
							"setcss(elem, css)",
							"() =>",
							"get root()",
							".append_to = function(elem, p)",
							"factory = function SVGFactory(tag, attr, children)",
							"create = (tag, attr, parent) =>",
							".derive = function(override = {}, parent)",
							".initialize = function(...args)",
							".setRoot = function(...args)",
							".parent = function(parent)",
							"append_to(elem)",
							".clear = function()",
							"static matrix(element, screen = false)",
							"static bbox(element, options = { parent: null, absolute: false, client: false, screen: false })",
							"static gradient(type, { stops, factory = SVG.create, parent = null, line = false, ...props })",
							"(color, o) =>",
							"static owner(elem)",
							"ret = function(tag, props, parent)",
							" function()",
							"static path()",
							"static getProperty(elem, name)",
							"static getProperties(elem, properties)",
							"static *coloredElements(elem)",
							" (e, d) =>",
							"a =>",
							"([k, v]) =>",
							"(acc, [name, value]) =>",
							"static allColors(elem)",
							"addColor = (c, item, prop) =>",
							"color =>",
							"get colors()",
							"item =>",
							"index(name)",
							"item =>",
							"name(i)",
							"get(arg)",
							"item =>",
							"set(index, color, elements)",
							"dump()",
							"adjacencyMatrix()",
							"replace(color, newColor)",
							"newColor = () =>",
							"replaceAll(fn)",
							"item =>",
							"fn = (rgba, index, color) =>",
							"static *lineIterator(e)",
							"static *pathIterator(e, opts, fn = p => p)",
							"pos = i =>",
							"pos = i =>",
							"do_point = point =>",
							" (str, pad) =>",
							"toString()",
							"static parsePath(path)",
							"parseValues = args =>",
							" (_, command, args) =>",
							"static viewbox(element, rect)",
							"static splitPath(path)",
							"command =>",
							"([command, args]) =>",
							"m =>",
							"arg =>",
							"static pathToPoints(path)",
							"cmd =>",
							"n =>",
							"static *pathToPointIterator(path)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAOUEAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					219,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/pages/tree.js",
						"symkeys":
						[
							[
								1295,
								1333
							],
							[
								1469,
								1514
							],
							[
								4566,
								4574
							],
							[
								5103,
								5108
							],
							[
								5378,
								5411
							],
							[
								6668,
								6677
							],
							[
								6788,
								6795
							],
							[
								7057,
								7067
							],
							[
								7261,
								7307
							],
							[
								7873,
								7878
							],
							[
								8017,
								8023
							],
							[
								8174,
								8182
							],
							[
								9555,
								9570
							],
							[
								9577,
								9592
							],
							[
								10163,
								10170
							],
							[
								10280,
								10298
							],
							[
								11127,
								11132
							],
							[
								11785,
								11801
							],
							[
								11950,
								11955
							],
							[
								12013,
								12019
							],
							[
								12062,
								12070
							],
							[
								12228,
								12247
							],
							[
								12330,
								12350
							],
							[
								12399,
								12408
							],
							[
								12428,
								12437
							],
							[
								12657,
								12664
							],
							[
								13509,
								13540
							],
							[
								13599,
								13623
							],
							[
								13731,
								13747
							],
							[
								13817,
								13825
							],
							[
								13884,
								13907
							],
							[
								14028,
								14036
							],
							[
								14368,
								14377
							],
							[
								14640,
								14645
							],
							[
								14706,
								14715
							],
							[
								15341,
								15345
							],
							[
								15814,
								15818
							],
							[
								15962,
								15966
							],
							[
								17195,
								17206
							],
							[
								17667,
								17675
							],
							[
								17826,
								17844
							],
							[
								17859,
								17877
							],
							[
								18034,
								18043
							],
							[
								18121,
								18156
							],
							[
								18396,
								18400
							]
						],
						"symlist":
						[
							"insertParent = (element, newParent) =>",
							"removeParent = (element, pred = e => true) =>",
							"TreePage",
							"() =>",
							"static async getInitialProps(ctx)",
							"(a, b) =>",
							"item =>",
							"function()",
							"({ photos, children, users, key, ...item }) =>",
							"id =>",
							" it =>",
							" item =>",
							" item =>",
							" item =>",
							"item =>",
							"constructor(props)",
							" i =>",
							"checkTagRemove()",
							" e =>",
							" () =>",
							" node =>",
							"componentDidMount()",
							"componentDidUpdate()",
							" event =>",
							" event =>",
							"rect =>",
							" function getNum(elem, name)",
							" function getId(elem)",
							"selectNode(item)",
							"child =>",
							"treeSelEvent(type, arg)",
							" item =>",
							" event =>",
							" e =>",
							" event =>",
							"e =>",
							"p =>",
							"p =>",
							"tend = e =>",
							"render()",
							"onError = event =>",
							"onImage = event =>",
							" event =>",
							"makeTreeSelEvent = name => event =>",
							"e =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlBAAAU1ZHCiAgc3RhdGljIGNyZWF0ZShuYW1lLCB7IG91dGVySFRNTCwgaW5uZXJIVE1MLCB0ZXh0LCAuLi5hdHRyIH0sIHBhcmVudCkKICBzdGF0aWMgZmFjdG9yeSguLi5hcmdzKQogIGNyZWF0ZSh0YWcpCiAgYXBwZW5kX3RvKGVsZW0sIHRvKQogIHNldGF0dHIoZWxlbSwgbmFtZSwgdmFsdWUpCiAgc2V0Y3NzKGVsZW0sIGNzcykKICBnZXQgcm9vdCgpCiAgLmFwcGVuZF90byA9IGZ1bmN0aW9uKGVsZW0sIHApCiAgZmFjdG9yeSA9IGZ1bmN0aW9uIFNWR0ZhY3RvcnkodGFnLCBhdHRyLCBjaGlsZHJlbikKICAuZGVyaXZlID0gZnVuY3Rpb24ob3ZlcnJpZGUgPSB7fSwgcGFyZW50KQogIC5pbml0aWFsaXplID0gZnVuY3Rpb24oLi4uYXJncykKICAuc2V0Um9vdCA9IGZ1bmN0aW9uKC4uLmFyZ3MpCiAgLnBhcmVudCA9IGZ1bmN0aW9uKHBhcmVudCkKICBhcHBlbmRfdG8oZWxlbSkKICAuY2xlYXIgPSBmdW5jdGlvbigpCiAgc3RhdGljIG1hdHJpeChlbGVtZW50LCBzY3JlZW4gPSBmYWxzZSkKICBzdGF0aWMgYmJveChlbGVtZW50LCBvcHRpb25zID0geyBwYXJlbnQ6IG51bGwsIGFic29sdXRlOiBmYWxzZSwgY2xpZW50OiBmYWxzZSwgc2NyZWVuOiBmYWxzZSB9KQogIHN0YXRpYyBncmFkaWVudCh0eXBlLCB7IHN0b3BzLCBmYWN0b3J5ID0gU1ZHLmNyZWF0ZSwgcGFyZW50ID0gbnVsbCwgbGluZSA9IGZhbHNlLCAuLi5wcm9wcyB9KQogIHN0YXRpYyBvd25lcihlbGVtKQogIHJldCA9IGZ1bmN0aW9uKHRhZywgcHJvcHMsIHBhcmVudCkKICBmdW5jdGlvbigpCiAgc3RhdGljIHBhdGgoKQogIHN0YXRpYyBnZXRQcm9wZXJ0eShlbGVtLCBuYW1lKQogIHN0YXRpYyBnZXRQcm9wZXJ0aWVzKGVsZW0sIHByb3BlcnRpZXMpCiAgc3RhdGljICpjb2xvcmVkRWxlbWVudHMoZWxlbSkKICBzdGF0aWMgYWxsQ29sb3JzKGVsZW0pCiAgZ2V0IGNvbG9ycygpCiAgaW5kZXgobmFtZSkKICBuYW1lKGkpCiAgZ2V0KGFyZykKICBzZXQoaW5kZXgsIGNvbG9yLCBlbGVtZW50cykKICBkdW1wKCkKICBhZGphY2VuY3lNYXRyaXgoKQogIHJlcGxhY2UoY29sb3IsIG5ld0NvbG9yKQogIHJlcGxhY2VBbGwoZm4pCiAgc3RhdGljICpsaW5lSXRlcmF0b3IoZSkKICB0b1N0cmluZygpCiAgc3RhdGljIHBhcnNlUGF0aChwYXRoKQogIHN0YXRpYyB2aWV3Ym94KGVsZW1lbnQsIHJlY3QpCiAgc3RhdGljIHNwbGl0UGF0aChwYXRoKQogIHN0YXRpYyBwYXRoVG9Qb2ludHMocGF0aCkKICBzdGF0aWMgKnBhdGhUb1BvaW50SXRlcmF0b3IocGF0aCkAAAAAAAAAAOMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AAAAAAAAAD0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					220,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1730,
								1748
							],
							[
								1913,
								1932
							],
							[
								2950,
								2956
							],
							[
								3176,
								3184
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADjAAAAVHJlZVBhZ2UKICBzdGF0aWMgZ2V0SW5pdGlhbFByb3BzKGN0eCkKICBmdW5jdGlvbigpCiAgY29uc3RydWN0b3IocHJvcHMpCiAgY2hlY2tUYWdSZW1vdmUoKQogIGNvbXBvbmVudERpZE1vdW50KCkKICBjb21wb25lbnREaWRVcGRhdGUoKQogIGdldE51bShlbGVtLCBuYW1lKQogIGdldElkKGVsZW0pCiAgc2VsZWN0Tm9kZShpdGVtKQogIHRyZWVTZWxFdmVudCh0eXBlLCBhcmcpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					221,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1732,
								1750
							],
							[
								1915,
								1934
							],
							[
								2952,
								2958
							],
							[
								3178,
								3186
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					222,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1732,
								1750
							],
							[
								1915,
								1934
							],
							[
								2961,
								2967
							],
							[
								3187,
								3195
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					223,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1732,
								1750
							],
							[
								1915,
								1934
							],
							[
								2963,
								2969
							],
							[
								3189,
								3197
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					224,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1732,
								1750
							],
							[
								1915,
								1934
							],
							[
								2969,
								2975
							],
							[
								3195,
								3203
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					225,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1736,
								1754
							],
							[
								1919,
								1938
							],
							[
								2973,
								2979
							],
							[
								3199,
								3207
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					226,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1740,
								1758
							],
							[
								1923,
								1942
							],
							[
								2977,
								2983
							],
							[
								3203,
								3211
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					227,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1740,
								1758
							],
							[
								1923,
								1942
							],
							[
								2977,
								2983
							],
							[
								3203,
								3211
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					228,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1740,
								1758
							],
							[
								1923,
								1942
							],
							[
								2977,
								2983
							],
							[
								3203,
								3211
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					229,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1739,
								1757
							],
							[
								1922,
								1941
							],
							[
								2976,
								2982
							],
							[
								3202,
								3210
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					230,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					231,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1739,
								1757
							],
							[
								1922,
								1941
							],
							[
								2976,
								2982
							],
							[
								3202,
								3210
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AQAAAAAAAAAAAAAAXwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					232,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					233,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								202,
								231
							],
							[
								512,
								522
							],
							[
								925,
								935
							],
							[
								1091,
								1106
							],
							[
								1766,
								1784
							],
							[
								1949,
								1968
							],
							[
								3003,
								3009
							],
							[
								3229,
								3237
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AQAAAAAAAAAAAAAAXwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					234,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1098,
								1113
							],
							[
								1773,
								1791
							],
							[
								1956,
								1975
							],
							[
								3010,
								3016
							],
							[
								3236,
								3244
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					235,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					236,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					237,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1098,
								1113
							],
							[
								1773,
								1791
							],
							[
								1956,
								1975
							],
							[
								3010,
								3016
							],
							[
								3236,
								3244
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AQAAAAAAAAAAAAAAXwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					238,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1098,
								1113
							],
							[
								1751,
								1769
							],
							[
								1934,
								1953
							],
							[
								2988,
								2994
							],
							[
								3214,
								3222
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					239,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1098,
								1113
							],
							[
								1751,
								1769
							],
							[
								1934,
								1953
							],
							[
								2993,
								2999
							],
							[
								3219,
								3227
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					240,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1098,
								1113
							],
							[
								1751,
								1769
							],
							[
								1934,
								1953
							],
							[
								2978,
								2984
							],
							[
								3204,
								3212
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					241,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1098,
								1113
							],
							[
								1751,
								1769
							],
							[
								1938,
								1957
							],
							[
								2982,
								2988
							],
							[
								3208,
								3216
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					242,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1098,
								1113
							],
							[
								1751,
								1769
							],
							[
								1936,
								1955
							],
							[
								2979,
								2985
							],
							[
								3205,
								3213
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					243,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1098,
								1113
							],
							[
								1751,
								1769
							],
							[
								1936,
								1955
							],
							[
								2981,
								2987
							],
							[
								3207,
								3215
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					244,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1098,
								1113
							],
							[
								1751,
								1769
							],
							[
								1936,
								1955
							],
							[
								2981,
								2987
							],
							[
								3207,
								3215
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					245,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1098,
								1113
							],
							[
								1751,
								1769
							],
							[
								1936,
								1955
							],
							[
								2985,
								2991
							],
							[
								3211,
								3219
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					246,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1098,
								1113
							],
							[
								1751,
								1769
							],
							[
								1936,
								1955
							],
							[
								2994,
								3000
							],
							[
								3220,
								3228
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					247,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1098,
								1113
							],
							[
								1751,
								1769
							],
							[
								1936,
								1955
							],
							[
								2989,
								2995
							],
							[
								3215,
								3223
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					248,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1098,
								1113
							],
							[
								1751,
								1769
							],
							[
								1936,
								1955
							],
							[
								2989,
								2995
							],
							[
								3215,
								3223
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					249,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1098,
								1113
							],
							[
								1751,
								1769
							],
							[
								1936,
								1955
							],
							[
								2989,
								2995
							],
							[
								3215,
								3223
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					250,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1098,
								1113
							],
							[
								1738,
								1756
							],
							[
								1923,
								1942
							],
							[
								2976,
								2982
							],
							[
								3202,
								3210
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					251,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/dom/svg.js",
						"symkeys":
						[
							[
								409,
								412
							],
							[
								433,
								501
							],
							[
								660,
								673
							],
							[
								696,
								711
							],
							[
								1081,
								1104
							],
							[
								1478,
								1489
							],
							[
								1561,
								1580
							],
							[
								1670,
								1696
							],
							[
								1815,
								1832
							],
							[
								2094,
								2099
							],
							[
								2207,
								2217
							],
							[
								2951,
								2981
							],
							[
								3221,
								3271
							],
							[
								3286,
								3317
							],
							[
								4056,
								4097
							],
							[
								4182,
								4213
							],
							[
								4274,
								4302
							],
							[
								4364,
								4390
							],
							[
								4439,
								4454
							],
							[
								4560,
								4579
							],
							[
								4915,
								4953
							],
							[
								5200,
								5295
							],
							[
								5974,
								6067
							],
							[
								6463,
								6476
							],
							[
								6649,
								6667
							],
							[
								6678,
								6712
							],
							[
								6922,
								6933
							],
							[
								7008,
								7021
							],
							[
								7057,
								7087
							],
							[
								7253,
								7291
							],
							[
								7423,
								7452
							],
							[
								7497,
								7507
							],
							[
								7532,
								7536
							],
							[
								7693,
								7704
							],
							[
								7834,
								7857
							],
							[
								7983,
								8005
							],
							[
								8043,
								8072
							],
							[
								8324,
								8332
							],
							[
								8420,
								8432
							],
							[
								8464,
								8471
							],
							[
								8500,
								8511
							],
							[
								8601,
								8608
							],
							[
								8646,
								8653
							],
							[
								8762,
								8770
							],
							[
								8821,
								8828
							],
							[
								8864,
								8891
							],
							[
								8994,
								9000
							],
							[
								9248,
								9265
							],
							[
								9832,
								9856
							],
							[
								10086,
								10102
							],
							[
								10414,
								10428
							],
							[
								10468,
								10475
							],
							[
								10646,
								10674
							],
							[
								10975,
								10998
							],
							[
								11671,
								11713
							],
							[
								12012,
								12022
							],
							[
								12134,
								12144
							],
							[
								12325,
								12344
							],
							[
								12714,
								12728
							],
							[
								13537,
								13547
							],
							[
								14470,
								14492
							],
							[
								14605,
								14626
							],
							[
								14910,
								14932
							],
							[
								15603,
								15632
							],
							[
								15990,
								16012
							],
							[
								16261,
								16271
							],
							[
								16314,
								16334
							],
							[
								16407,
								16411
							],
							[
								16425,
								16431
							],
							[
								16589,
								16614
							],
							[
								16652,
								16658
							],
							[
								16857,
								16861
							],
							[
								16883,
								16916
							]
						],
						"symlist":
						[
							"SVG",
							"static create(name, { outerHTML, innerHTML, text, ...attr }, parent)",
							"attrfn = n =>",
							"attrfn = arg =>",
							"static factory(...args)",
							"create(tag)",
							"append_to(elem, to)",
							"setattr(elem, name, value)",
							"setcss(elem, css)",
							"() =>",
							"get root()",
							".append_to = function(elem, p)",
							"factory = function SVGFactory(tag, attr, children)",
							"create = (tag, attr, parent) =>",
							".derive = function(override = {}, parent)",
							".initialize = function(...args)",
							".setRoot = function(...args)",
							".parent = function(parent)",
							"append_to(elem)",
							".clear = function()",
							"static matrix(element, screen = false)",
							"static bbox(element, options = { parent: null, absolute: false, client: false, screen: false })",
							"static gradient(type, { stops, factory = SVG.create, parent = null, line = false, ...props })",
							"(color, o) =>",
							"static owner(elem)",
							"ret = function(tag, props, parent)",
							" function()",
							"static path()",
							"static getProperty(elem, name)",
							"static getProperties(elem, properties)",
							"static *coloredElements(elem)",
							" (e, d) =>",
							"a =>",
							"([k, v]) =>",
							"(acc, [name, value]) =>",
							"static allColors(elem)",
							"addColor = (c, item, prop) =>",
							"color =>",
							"get colors()",
							"item =>",
							"index(name)",
							"item =>",
							"name(i)",
							"get(arg)",
							"item =>",
							"set(index, color, elements)",
							"dump()",
							"adjacencyMatrix()",
							"replace(color, newColor)",
							"newColor = () =>",
							"replaceAll(fn)",
							"item =>",
							"fn = (rgba, index, color) =>",
							"static *lineIterator(e)",
							"static *pathIterator(e, opts, fn = p => p)",
							"pos = i =>",
							"pos = i =>",
							"do_point = point =>",
							" (str, pad) =>",
							"toString()",
							"static parsePath(path)",
							"parseValues = args =>",
							" (_, command, args) =>",
							"static viewbox(element, rect)",
							"static splitPath(path)",
							"command =>",
							"([command, args]) =>",
							"m =>",
							"arg =>",
							"static pathToPoints(path)",
							"cmd =>",
							"n =>",
							"static *pathToPointIterator(path)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAOUEAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					252,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/dom/svg.js",
						"symkeys":
						[
							[
								409,
								412
							],
							[
								433,
								501
							],
							[
								660,
								673
							],
							[
								696,
								711
							],
							[
								1081,
								1104
							],
							[
								1478,
								1489
							],
							[
								1561,
								1580
							],
							[
								1679,
								1705
							],
							[
								1824,
								1841
							],
							[
								2103,
								2108
							],
							[
								2216,
								2226
							],
							[
								2960,
								2990
							],
							[
								3230,
								3280
							],
							[
								3295,
								3326
							],
							[
								4065,
								4106
							],
							[
								4191,
								4222
							],
							[
								4283,
								4311
							],
							[
								4373,
								4399
							],
							[
								4448,
								4463
							],
							[
								4569,
								4588
							],
							[
								4924,
								4962
							],
							[
								5209,
								5304
							],
							[
								5983,
								6076
							],
							[
								6472,
								6485
							],
							[
								6658,
								6676
							],
							[
								6687,
								6721
							],
							[
								6931,
								6942
							],
							[
								7017,
								7030
							],
							[
								7066,
								7096
							],
							[
								7262,
								7300
							],
							[
								7432,
								7461
							],
							[
								7506,
								7516
							],
							[
								7541,
								7545
							],
							[
								7702,
								7713
							],
							[
								7843,
								7866
							],
							[
								7992,
								8014
							],
							[
								8052,
								8081
							],
							[
								8333,
								8341
							],
							[
								8429,
								8441
							],
							[
								8473,
								8480
							],
							[
								8509,
								8520
							],
							[
								8610,
								8617
							],
							[
								8655,
								8662
							],
							[
								8771,
								8779
							],
							[
								8830,
								8837
							],
							[
								8873,
								8900
							],
							[
								9003,
								9009
							],
							[
								9257,
								9274
							],
							[
								9841,
								9865
							],
							[
								10095,
								10111
							],
							[
								10423,
								10437
							],
							[
								10477,
								10484
							],
							[
								10655,
								10683
							],
							[
								10984,
								11007
							],
							[
								11680,
								11722
							],
							[
								12021,
								12031
							],
							[
								12143,
								12153
							],
							[
								12334,
								12353
							],
							[
								12723,
								12737
							],
							[
								13546,
								13556
							],
							[
								14479,
								14501
							],
							[
								14614,
								14635
							],
							[
								14919,
								14941
							],
							[
								15612,
								15641
							],
							[
								15999,
								16021
							],
							[
								16270,
								16280
							],
							[
								16323,
								16343
							],
							[
								16416,
								16420
							],
							[
								16434,
								16440
							],
							[
								16598,
								16623
							],
							[
								16661,
								16667
							],
							[
								16866,
								16870
							],
							[
								16892,
								16925
							]
						],
						"symlist":
						[
							"SVG",
							"static create(name, { outerHTML, innerHTML, text, ...attr }, parent)",
							"attrfn = n =>",
							"attrfn = arg =>",
							"static factory(...args)",
							"create(tag)",
							"append_to(elem, to)",
							"setattr(elem, name, value)",
							"setcss(elem, css)",
							"() =>",
							"get root()",
							".append_to = function(elem, p)",
							"factory = function SVGFactory(tag, attr, children)",
							"create = (tag, attr, parent) =>",
							".derive = function(override = {}, parent)",
							".initialize = function(...args)",
							".setRoot = function(...args)",
							".parent = function(parent)",
							"append_to(elem)",
							".clear = function()",
							"static matrix(element, screen = false)",
							"static bbox(element, options = { parent: null, absolute: false, client: false, screen: false })",
							"static gradient(type, { stops, factory = SVG.create, parent = null, line = false, ...props })",
							"(color, o) =>",
							"static owner(elem)",
							"ret = function(tag, props, parent)",
							" function()",
							"static path()",
							"static getProperty(elem, name)",
							"static getProperties(elem, properties)",
							"static *coloredElements(elem)",
							" (e, d) =>",
							"a =>",
							"([k, v]) =>",
							"(acc, [name, value]) =>",
							"static allColors(elem)",
							"addColor = (c, item, prop) =>",
							"color =>",
							"get colors()",
							"item =>",
							"index(name)",
							"item =>",
							"name(i)",
							"get(arg)",
							"item =>",
							"set(index, color, elements)",
							"dump()",
							"adjacencyMatrix()",
							"replace(color, newColor)",
							"newColor = () =>",
							"replaceAll(fn)",
							"item =>",
							"fn = (rgba, index, color) =>",
							"static *lineIterator(e)",
							"static *pathIterator(e, opts, fn = p => p)",
							"pos = i =>",
							"pos = i =>",
							"do_point = point =>",
							" (str, pad) =>",
							"toString()",
							"static parsePath(path)",
							"parseValues = args =>",
							" (_, command, args) =>",
							"static viewbox(element, rect)",
							"static splitPath(path)",
							"command =>",
							"([command, args]) =>",
							"m =>",
							"arg =>",
							"static pathToPoints(path)",
							"cmd =>",
							"n =>",
							"static *pathToPointIterator(path)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlBAAAU1ZHCiAgc3RhdGljIGNyZWF0ZShuYW1lLCB7IG91dGVySFRNTCwgaW5uZXJIVE1MLCB0ZXh0LCAuLi5hdHRyIH0sIHBhcmVudCkKICBzdGF0aWMgZmFjdG9yeSguLi5hcmdzKQogIGNyZWF0ZSh0YWcpCiAgYXBwZW5kX3RvKGVsZW0sIHRvKQogIHNldGF0dHIoZWxlbSwgbmFtZSwgdmFsdWUpCiAgc2V0Y3NzKGVsZW0sIGNzcykKICBnZXQgcm9vdCgpCiAgLmFwcGVuZF90byA9IGZ1bmN0aW9uKGVsZW0sIHApCiAgZmFjdG9yeSA9IGZ1bmN0aW9uIFNWR0ZhY3RvcnkodGFnLCBhdHRyLCBjaGlsZHJlbikKICAuZGVyaXZlID0gZnVuY3Rpb24ob3ZlcnJpZGUgPSB7fSwgcGFyZW50KQogIC5pbml0aWFsaXplID0gZnVuY3Rpb24oLi4uYXJncykKICAuc2V0Um9vdCA9IGZ1bmN0aW9uKC4uLmFyZ3MpCiAgLnBhcmVudCA9IGZ1bmN0aW9uKHBhcmVudCkKICBhcHBlbmRfdG8oZWxlbSkKICAuY2xlYXIgPSBmdW5jdGlvbigpCiAgc3RhdGljIG1hdHJpeChlbGVtZW50LCBzY3JlZW4gPSBmYWxzZSkKICBzdGF0aWMgYmJveChlbGVtZW50LCBvcHRpb25zID0geyBwYXJlbnQ6IG51bGwsIGFic29sdXRlOiBmYWxzZSwgY2xpZW50OiBmYWxzZSwgc2NyZWVuOiBmYWxzZSB9KQogIHN0YXRpYyBncmFkaWVudCh0eXBlLCB7IHN0b3BzLCBmYWN0b3J5ID0gU1ZHLmNyZWF0ZSwgcGFyZW50ID0gbnVsbCwgbGluZSA9IGZhbHNlLCAuLi5wcm9wcyB9KQogIHN0YXRpYyBvd25lcihlbGVtKQogIHJldCA9IGZ1bmN0aW9uKHRhZywgcHJvcHMsIHBhcmVudCkKICBmdW5jdGlvbigpCiAgc3RhdGljIHBhdGgoKQogIHN0YXRpYyBnZXRQcm9wZXJ0eShlbGVtLCBuYW1lKQogIHN0YXRpYyBnZXRQcm9wZXJ0aWVzKGVsZW0sIHByb3BlcnRpZXMpCiAgc3RhdGljICpjb2xvcmVkRWxlbWVudHMoZWxlbSkKICBzdGF0aWMgYWxsQ29sb3JzKGVsZW0pCiAgZ2V0IGNvbG9ycygpCiAgaW5kZXgobmFtZSkKICBuYW1lKGkpCiAgZ2V0KGFyZykKICBzZXQoaW5kZXgsIGNvbG9yLCBlbGVtZW50cykKICBkdW1wKCkKICBhZGphY2VuY3lNYXRyaXgoKQogIHJlcGxhY2UoY29sb3IsIG5ld0NvbG9yKQogIHJlcGxhY2VBbGwoZm4pCiAgc3RhdGljICpsaW5lSXRlcmF0b3IoZSkKICB0b1N0cmluZygpCiAgc3RhdGljIHBhcnNlUGF0aChwYXRoKQogIHN0YXRpYyB2aWV3Ym94KGVsZW1lbnQsIHJlY3QpCiAgc3RhdGljIHNwbGl0UGF0aChwYXRoKQogIHN0YXRpYyBwYXRoVG9Qb2ludHMocGF0aCkKICBzdGF0aWMgKnBhdGhUb1BvaW50SXRlcmF0b3IocGF0aCkAAAAAAAAAAOUEAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					253,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1654,
								1672
							],
							[
								1837,
								1856
							],
							[
								2845,
								2851
							],
							[
								3071,
								3079
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADlBAAAU1ZHCiAgc3RhdGljIGNyZWF0ZShuYW1lLCB7IG91dGVySFRNTCwgaW5uZXJIVE1MLCB0ZXh0LCAuLi5hdHRyIH0sIHBhcmVudCkKICBzdGF0aWMgZmFjdG9yeSguLi5hcmdzKQogIGNyZWF0ZSh0YWcpCiAgYXBwZW5kX3RvKGVsZW0sIHRvKQogIHNldGF0dHIoZWxlbSwgbmFtZSwgdmFsdWUpCiAgc2V0Y3NzKGVsZW0sIGNzcykKICBnZXQgcm9vdCgpCiAgLmFwcGVuZF90byA9IGZ1bmN0aW9uKGVsZW0sIHApCiAgZmFjdG9yeSA9IGZ1bmN0aW9uIFNWR0ZhY3RvcnkodGFnLCBhdHRyLCBjaGlsZHJlbikKICAuZGVyaXZlID0gZnVuY3Rpb24ob3ZlcnJpZGUgPSB7fSwgcGFyZW50KQogIC5pbml0aWFsaXplID0gZnVuY3Rpb24oLi4uYXJncykKICAuc2V0Um9vdCA9IGZ1bmN0aW9uKC4uLmFyZ3MpCiAgLnBhcmVudCA9IGZ1bmN0aW9uKHBhcmVudCkKICBhcHBlbmRfdG8oZWxlbSkKICAuY2xlYXIgPSBmdW5jdGlvbigpCiAgc3RhdGljIG1hdHJpeChlbGVtZW50LCBzY3JlZW4gPSBmYWxzZSkKICBzdGF0aWMgYmJveChlbGVtZW50LCBvcHRpb25zID0geyBwYXJlbnQ6IG51bGwsIGFic29sdXRlOiBmYWxzZSwgY2xpZW50OiBmYWxzZSwgc2NyZWVuOiBmYWxzZSB9KQogIHN0YXRpYyBncmFkaWVudCh0eXBlLCB7IHN0b3BzLCBmYWN0b3J5ID0gU1ZHLmNyZWF0ZSwgcGFyZW50ID0gbnVsbCwgbGluZSA9IGZhbHNlLCAuLi5wcm9wcyB9KQogIHN0YXRpYyBvd25lcihlbGVtKQogIHJldCA9IGZ1bmN0aW9uKHRhZywgcHJvcHMsIHBhcmVudCkKICBmdW5jdGlvbigpCiAgc3RhdGljIHBhdGgoKQogIHN0YXRpYyBnZXRQcm9wZXJ0eShlbGVtLCBuYW1lKQogIHN0YXRpYyBnZXRQcm9wZXJ0aWVzKGVsZW0sIHByb3BlcnRpZXMpCiAgc3RhdGljICpjb2xvcmVkRWxlbWVudHMoZWxlbSkKICBzdGF0aWMgYWxsQ29sb3JzKGVsZW0pCiAgZ2V0IGNvbG9ycygpCiAgaW5kZXgobmFtZSkKICBuYW1lKGkpCiAgZ2V0KGFyZykKICBzZXQoaW5kZXgsIGNvbG9yLCBlbGVtZW50cykKICBkdW1wKCkKICBhZGphY2VuY3lNYXRyaXgoKQogIHJlcGxhY2UoY29sb3IsIG5ld0NvbG9yKQogIHJlcGxhY2VBbGwoZm4pCiAgc3RhdGljICpsaW5lSXRlcmF0b3IoZSkKICB0b1N0cmluZygpCiAgc3RhdGljIHBhcnNlUGF0aChwYXRoKQogIHN0YXRpYyB2aWV3Ym94KGVsZW1lbnQsIHJlY3QpCiAgc3RhdGljIHNwbGl0UGF0aChwYXRoKQogIHN0YXRpYyBwYXRoVG9Qb2ludHMocGF0aCkKICBzdGF0aWMgKnBhdGhUb1BvaW50SXRlcmF0b3IocGF0aCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					254,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								175,
								204
							],
							[
								485,
								495
							],
							[
								898,
								908
							],
							[
								1064,
								1079
							],
							[
								1654,
								1672
							],
							[
								1837,
								1856
							],
							[
								2845,
								2851
							],
							[
								3115,
								3123
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					255,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1098,
								1113
							],
							[
								1688,
								1706
							],
							[
								1871,
								1890
							],
							[
								2879,
								2885
							],
							[
								3149,
								3157
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					256,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1098,
								1113
							],
							[
								1688,
								1706
							],
							[
								1871,
								1890
							],
							[
								2881,
								2887
							],
							[
								3151,
								3159
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"(rect, root) =>",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					257,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1692,
								1710
							],
							[
								1875,
								1894
							],
							[
								2885,
								2891
							],
							[
								3155,
								3163
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					258,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1692,
								1710
							],
							[
								1875,
								1894
							],
							[
								2885,
								2891
							],
							[
								3150,
								3158
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					259,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1692,
								1710
							],
							[
								1875,
								1894
							],
							[
								2885,
								2891
							],
							[
								3151,
								3159
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					260,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1692,
								1710
							],
							[
								1878,
								1897
							],
							[
								2888,
								2894
							],
							[
								3154,
								3162
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					261,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1692,
								1710
							],
							[
								1878,
								1897
							],
							[
								2888,
								2894
							],
							[
								3154,
								3162
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAF8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					262,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					263,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1692,
								1710
							],
							[
								1878,
								1897
							],
							[
								2888,
								2894
							],
							[
								3154,
								3162
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AQAAAAAAAAAAAAAAXwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					264,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					265,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1692,
								1710
							],
							[
								1878,
								1897
							],
							[
								2888,
								2894
							],
							[
								3154,
								3162
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AQAAAAAAAAAAAAAAXwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					266,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					267,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/wild-beauty/pages/new.js",
						"symkeys":
						[
							[
								788,
								803
							],
							[
								845,
								850
							],
							[
								925,
								928
							],
							[
								1150,
								1216
							],
							[
								1555,
								1560
							],
							[
								1607,
								1614
							],
							[
								1842,
								1860
							],
							[
								2253,
								2262
							],
							[
								2362,
								2371
							],
							[
								2568,
								2576
							],
							[
								2771,
								2788
							],
							[
								2890,
								2909
							],
							[
								2965,
								2985
							],
							[
								3089,
								3107
							],
							[
								3334,
								3343
							],
							[
								3521,
								3530
							],
							[
								3664,
								3673
							],
							[
								3813,
								3822
							],
							[
								3881,
								3889
							],
							[
								3940,
								3958
							],
							[
								3973,
								3991
							],
							[
								4061,
								4096
							],
							[
								4482,
								4487
							],
							[
								4581,
								4597
							],
							[
								5141,
								5160
							],
							[
								5870,
								5879
							]
						],
						"symlist":
						[
							"getPrng = () =>",
							"() =>",
							"New",
							"static async getInitialProps({ res, req, err, mobxStore, ...ctx })",
							"ph =>",
							"item =>",
							"constructor(props)",
							" event =>",
							" event =>",
							"image =>",
							"addContent(event)",
							"componentDidMount()",
							"componentDidUpdate()",
							"chooseImage(event)",
							" event =>",
							" event =>",
							" event =>",
							" state =>",
							"render()",
							"onError = event =>",
							"onImage = event =>",
							"makeTreeSelEvent = name => event =>",
							"id =>",
							"id_or_element =>",
							"(id, angle = 90) =>",
							" image =>"
						]
					},
					"AQAAAAAAAAAAAAAAuAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					268,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1692,
								1710
							],
							[
								1878,
								1897
							],
							[
								2888,
								2894
							],
							[
								3154,
								3162
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC4AAAATmV3CiAgc3RhdGljIGdldEluaXRpYWxQcm9wcyh7IHJlcywgcmVxLCBlcnIsIG1vYnhTdG9yZSwgLi4uY3R4IH0pCiAgY29uc3RydWN0b3IocHJvcHMpCiAgYWRkQ29udGVudChldmVudCkKICBjb21wb25lbnREaWRNb3VudCgpCiAgY29tcG9uZW50RGlkVXBkYXRlKCkKICBjaG9vc2VJbWFnZShldmVudCkKICByZW5kZXIoKQAAAAAAAAAAXwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					269,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					270,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								932,
								942
							],
							[
								1692,
								1710
							],
							[
								1878,
								1897
							],
							[
								2888,
								2894
							],
							[
								3154,
								3162
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay",
							"constructor(props)",
							"componentDidMount()",
							" () =>",
							"render()"
						]
					},
					"AQAAAAAAAAAAAAAAXwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					271,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpClN2Z092ZXJsYXkKICBjb25zdHJ1Y3Rvcihwcm9wcykKICBjb21wb25lbnREaWRNb3VudCgpCiAgcmVuZGVyKCkAAAAAAAAAAB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpAAAAAAAAAAAeAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					272,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								3484,
								3505
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay = props =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAeAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpAAAAAAAAAAAeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHgAAAFN2Z1BhdGhUcmFjZXIocGF0aCkKKmVudHJpZXMoKQAAAAAAAAAAHgAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					273,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								3484,
								3510
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay = ({svgRef}) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAeAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpAAAAAAAAAAAeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHgAAAFN2Z1BhdGhUcmFjZXIocGF0aCkKKmVudHJpZXMoKQAAAAAAAAAAHgAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					274,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								3491,
								3517
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay = ({svgRef}) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAeAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpAAAAAAAAAAAeAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					275,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAeAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					276,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								3491,
								3517
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay = ({svgRef}) =>"
						]
					},
					"AQAAAAAAAAAAAAAAHgAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					277,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/package.json",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAeAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					278,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/node_modules/react/index.js",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					279,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/node_modules/react/cjs/react.development.js",
						"symkeys":
						[
							[
								303,
								313
							],
							[
								2698,
								2735
							],
							[
								3707,
								3741
							],
							[
								3795,
								3855
							],
							[
								4025,
								4078
							],
							[
								5108,
								5129
							],
							[
								5343,
								5365
							],
							[
								5590,
								5632
							],
							[
								6001,
								6016
							],
							[
								6489,
								6534
							],
							[
								7531,
								7567
							],
							[
								8257,
								8324
							],
							[
								8973,
								9056
							],
							[
								9690,
								9768
							],
							[
								9949,
								9992
							],
							[
								10291,
								10300
							],
							[
								11499,
								11563
							],
							[
								12399,
								12452
							],
							[
								13102,
								13156
							],
							[
								13185,
								13194
							],
							[
								13226,
								13242
							],
							[
								13554,
								13579
							],
							[
								13584,
								13598
							],
							[
								13611,
								13620
							],
							[
								13711,
								13758
							],
							[
								13995,
								14008
							],
							[
								14180,
								14189
							],
							[
								14307,
								14327
							],
							[
								14434,
								14492
							],
							[
								14678,
								14707
							],
							[
								14753,
								14784
							],
							[
								16711,
								16739
							],
							[
								16988,
								17016
							],
							[
								17265,
								17320
							],
							[
								17329,
								17364
							],
							[
								17909,
								17964
							],
							[
								17973,
								18008
							],
							[
								18553,
								18606
							],
							[
								20262,
								20330
							],
							[
								22085,
								22131
							],
							[
								24043,
								24090
							],
							[
								24410,
								24458
							],
							[
								26713,
								26744
							],
							[
								27037,
								27057
							],
							[
								27193,
								27210
							],
							[
								27457,
								27493
							],
							[
								27796,
								27834
							],
							[
								28191,
								28265
							],
							[
								29367,
								29380
							],
							[
								32166,
								32211
							],
							[
								32342,
								32359
							],
							[
								32694,
								32726
							],
							[
								32765,
								32777
							],
							[
								33227,
								33290
							],
							[
								33316,
								33328
							],
							[
								33634,
								33660
							],
							[
								33693,
								33710
							],
							[
								34306,
								34334
							],
							[
								34505,
								34563
							],
							[
								36465,
								36481
							],
							[
								36842,
								36867
							],
							[
								36960,
								36976
							],
							[
								37038,
								37067
							],
							[
								37170,
								37186
							],
							[
								37249,
								37279
							],
							[
								37382,
								37398
							],
							[
								37459,
								37487
							],
							[
								37582,
								37598
							],
							[
								38000,
								38016
							],
							[
								38076,
								38103
							],
							[
								38748,
								38781
							],
							[
								39028,
								39051
							],
							[
								39684,
								39701
							],
							[
								40021,
								40040
							],
							[
								40473,
								40489
							],
							[
								40542,
								40573
							],
							[
								41078,
								41094
							],
							[
								41144,
								41172
							],
							[
								41644,
								41671
							],
							[
								42826,
								42842
							],
							[
								42884,
								42904
							],
							[
								43223,
								43256
							],
							[
								44139,
								44167
							],
							[
								44609,
								44625
							],
							[
								44667,
								44687
							],
							[
								44846,
								44874
							],
							[
								45458,
								45509
							],
							[
								46769,
								46800
							],
							[
								46889,
								46935
							],
							[
								47039,
								47068
							],
							[
								47155,
								47187
							],
							[
								47277,
								47315
							],
							[
								47411,
								47447
							],
							[
								47541,
								47571
							],
							[
								47659,
								47706
							],
							[
								47811,
								47853
							],
							[
								48363,
								48385
							],
							[
								48429,
								48451
							],
							[
								49343,
								49366
							],
							[
								50534,
								50595
							],
							[
								51149,
								51201
							],
							[
								52005,
								52023
							],
							[
								52102,
								52106
							],
							[
								52137,
								52153
							],
							[
								52811,
								52815
							],
							[
								55997,
								56057
							],
							[
								56123,
								56158
							],
							[
								56179,
								56188
							],
							[
								56257,
								56325
							],
							[
								57741,
								57788
							],
							[
								58103,
								58179
							],
							[
								60509,
								60558
							],
							[
								60905,
								60943
							],
							[
								61153,
								61196
							],
							[
								61425,
								61482
							],
							[
								61836,
								61885
							],
							[
								62652,
								62701
							],
							[
								64082,
								64126
							],
							[
								65204,
								65239
							],
							[
								66712,
								66752
							],
							[
								67397,
								67456
							],
							[
								69662,
								69704
							],
							[
								70207,
								70223
							],
							[
								70490,
								70551
							]
						],
						"symlist":
						[
							"function()",
							"function getIteratorFn(maybeIterable)",
							"function setExtraStackFrame(stack)",
							"ReactDebugCurrentFrame.setExtraStackFrame = function (stack)",
							"ReactDebugCurrentFrame.getStackAddendum = function ()",
							"function warn(format)",
							"function error(format)",
							"function printWarning(level, format, args)",
							"function (item)",
							"function warnNoop(publicInstance, callerName)",
							"isMounted: function (publicInstance)",
							"enqueueForceUpdate: function (publicInstance, callback, callerName)",
							"enqueueReplaceState: function (publicInstance, completeState, callback, callerName)",
							"enqueueSetState: function (publicInstance, partialState, callback, callerName)",
							"function Component(props, context, updater)",
							"Component",
							"Component.prototype.setState = function (partialState, callback)",
							"Component.prototype.forceUpdate = function (callback)",
							"defineDeprecationWarning = function (methodName, info)",
							"Component",
							"get: function ()",
							"function ComponentDummy()",
							"ComponentDummy",
							"Component",
							"function PureComponent(props, context, updater)",
							"PureComponent",
							"Component",
							"function createRef()",
							"function getWrappedName(outerType, innerType, wrapperName)",
							"function getContextName(type)",
							"function getComponentName(type)",
							"function hasValidRef(config)",
							"function hasValidKey(config)",
							"function defineKeyPropWarningGetter(props, displayName)",
							"warnAboutAccessingKey = function ()",
							"function defineRefPropWarningGetter(props, displayName)",
							"warnAboutAccessingRef = function ()",
							"function warnIfStringRefCannotBeAutoConverted(config)",
							"ReactElement = function (type, key, ref, self, source, owner, props)",
							"function createElement(type, config, children)",
							"function cloneAndReplaceKey(oldElement, newKey)",
							"function cloneElement(element, config, children)",
							"function isValidElement(object)",
							"function escape(key)",
							" function (match)",
							"function escapeUserProvidedKey(text)",
							"function getElementKey(element, index)",
							"function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback)",
							" function (c)",
							"function mapChildren(children, func, context)",
							" function (child)",
							"function countChildren(children)",
							" function ()",
							"function forEachChildren(children, forEachFunc, forEachContext)",
							" function ()",
							"function toArray(children)",
							" function (child)",
							"function onlyChild(children)",
							"function createContext(defaultValue, calculateChangedBits)",
							"get: function ()",
							"set: function (_Provider)",
							"get: function ()",
							"set: function (_currentValue)",
							"get: function ()",
							"set: function (_currentValue2)",
							"get: function ()",
							"set: function (_threadCount)",
							"get: function ()",
							"get: function ()",
							"set: function (displayName)",
							"function lazyInitializer(payload)",
							"function (moduleObject)",
							" function (error)",
							"function lazy(ctor)",
							"get: function ()",
							"set: function (newDefaultProps)",
							"get: function ()",
							"set: function (newPropTypes)",
							"function forwardRef(render)",
							"get: function ()",
							"set: function (name)",
							"function isValidElementType(type)",
							"function memo(type, compare)",
							"get: function ()",
							"set: function (name)",
							"function resolveDispatcher()",
							"function useContext(Context, unstable_observedBits)",
							"function useState(initialState)",
							"function useReducer(reducer, initialArg, init)",
							"function useRef(initialValue)",
							"function useEffect(create, deps)",
							"function useLayoutEffect(create, deps)",
							"function useCallback(callback, deps)",
							"function useMemo(create, deps)",
							"function useImperativeHandle(ref, create, deps)",
							"function useDebugValue(value, formatterFn)",
							"function disabledLog()",
							"function disableLogs()",
							"function reenableLogs()",
							"function describeBuiltInComponentFrame(name, source, ownerFn)",
							"function describeNativeComponentFrame(fn, construct)",
							"Fake = function ()",
							"Fake",
							"set: function ()",
							"Fake",
							"function describeFunctionComponentFrame(fn, source, ownerFn)",
							"function shouldConstruct(Component)",
							"Component",
							"function describeUnknownElementTypeFrameInDEV(type, source, ownerFn)",
							"function setCurrentlyValidatingElement(element)",
							"function checkPropTypes(typeSpecs, values, location, componentName, element)",
							"function setCurrentlyValidatingElement$1(element)",
							"function getDeclarationErrorAddendum()",
							"function getSourceInfoErrorAddendum(source)",
							"function getSourceInfoErrorAddendumForProps(elementProps)",
							"function getCurrentComponentErrorInfo(parentType)",
							"function validateExplicitKey(element, parentType)",
							"function validateChildKeys(node, parentType)",
							"function validatePropTypes(element)",
							"function validateFragmentProps(fragment)",
							"function createElementWithValidation(type, props, children)",
							"function createFactoryWithValidation(type)",
							"get: function ()",
							"function cloneElementWithValidation(element, props, children)"
						]
					},
					"AQAAAAAAAAAAAAAA9Q4AAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					282,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								3491,
								3517
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay = ({svgRef}) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD1DgAAICBmdW5jdGlvbigpCiAgZ2V0SXRlcmF0b3JGbihtYXliZUl0ZXJhYmxlKQogIHNldEV4dHJhU3RhY2tGcmFtZShzdGFjaykKUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZS5zZXRFeHRyYVN0YWNrRnJhbWUgPSBmdW5jdGlvbiAoc3RhY2spClJlYWN0RGVidWdDdXJyZW50RnJhbWUuZ2V0U3RhY2tBZGRlbmR1bSA9IGZ1bmN0aW9uICgpCiAgd2Fybihmb3JtYXQpCiAgZXJyb3IoZm9ybWF0KQogIHByaW50V2FybmluZyhsZXZlbCwgZm9ybWF0LCBhcmdzKQooaXRlbSkKICB3YXJuTm9vcChwdWJsaWNJbnN0YW5jZSwgY2FsbGVyTmFtZSkKICBpc01vdW50ZWQ6IGZ1bmN0aW9uIChwdWJsaWNJbnN0YW5jZSkKICBlbnF1ZXVlRm9yY2VVcGRhdGU6IGZ1bmN0aW9uIChwdWJsaWNJbnN0YW5jZSwgY2FsbGJhY2ssIGNhbGxlck5hbWUpCiAgZW5xdWV1ZVJlcGxhY2VTdGF0ZTogZnVuY3Rpb24gKHB1YmxpY0luc3RhbmNlLCBjb21wbGV0ZVN0YXRlLCBjYWxsYmFjaywgY2FsbGVyTmFtZSkKICBlbnF1ZXVlU2V0U3RhdGU6IGZ1bmN0aW9uIChwdWJsaWNJbnN0YW5jZSwgcGFydGlhbFN0YXRlLCBjYWxsYmFjaywgY2FsbGVyTmFtZSkKQ29tcG9uZW50KHByb3BzLCBjb250ZXh0LCB1cGRhdGVyKQpDb21wb25lbnQKQ29tcG9uZW50LnByb3RvdHlwZS5zZXRTdGF0ZSA9IGZ1bmN0aW9uIChwYXJ0aWFsU3RhdGUsIGNhbGxiYWNrKQpDb21wb25lbnQucHJvdG90eXBlLmZvcmNlVXBkYXRlID0gZnVuY3Rpb24gKGNhbGxiYWNrKQogIGRlZmluZURlcHJlY2F0aW9uV2FybmluZyA9IGZ1bmN0aW9uIChtZXRob2ROYW1lLCBpbmZvKQpDb21wb25lbnQKICBnZXQ6IGZ1bmN0aW9uICgpCkNvbXBvbmVudER1bW15KCkKQ29tcG9uZW50RHVtbXkKQ29tcG9uZW50ClB1cmVDb21wb25lbnQocHJvcHMsIGNvbnRleHQsIHVwZGF0ZXIpClB1cmVDb21wb25lbnQKQ29tcG9uZW50CiAgY3JlYXRlUmVmKCkKICBnZXRXcmFwcGVkTmFtZShvdXRlclR5cGUsIGlubmVyVHlwZSwgd3JhcHBlck5hbWUpCiAgZ2V0Q29udGV4dE5hbWUodHlwZSkKICBnZXRDb21wb25lbnROYW1lKHR5cGUpCiAgaGFzVmFsaWRSZWYoY29uZmlnKQogIGhhc1ZhbGlkS2V5KGNvbmZpZykKICBkZWZpbmVLZXlQcm9wV2FybmluZ0dldHRlcihwcm9wcywgZGlzcGxheU5hbWUpCiAgd2FybkFib3V0QWNjZXNzaW5nS2V5ID0gZnVuY3Rpb24gKCkKICBkZWZpbmVSZWZQcm9wV2FybmluZ0dldHRlcihwcm9wcywgZGlzcGxheU5hbWUpCiAgd2FybkFib3V0QWNjZXNzaW5nUmVmID0gZnVuY3Rpb24gKCkKICB3YXJuSWZTdHJpbmdSZWZDYW5ub3RCZUF1dG9Db252ZXJ0ZWQoY29uZmlnKQpSZWFjdEVsZW1lbnQgPSBmdW5jdGlvbiAodHlwZSwga2V5LCByZWYsIHNlbGYsIHNvdXJjZSwgb3duZXIsIHByb3BzKQogIGNyZWF0ZUVsZW1lbnQodHlwZSwgY29uZmlnLCBjaGlsZHJlbikKICBjbG9uZUFuZFJlcGxhY2VLZXkob2xkRWxlbWVudCwgbmV3S2V5KQogIGNsb25lRWxlbWVudChlbGVtZW50LCBjb25maWcsIGNoaWxkcmVuKQogIGlzVmFsaWRFbGVtZW50KG9iamVjdCkKICBlc2NhcGUoa2V5KQoobWF0Y2gpCiAgZXNjYXBlVXNlclByb3ZpZGVkS2V5KHRleHQpCiAgZ2V0RWxlbWVudEtleShlbGVtZW50LCBpbmRleCkKICBtYXBJbnRvQXJyYXkoY2hpbGRyZW4sIGFycmF5LCBlc2NhcGVkUHJlZml4LCBuYW1lU29GYXIsIGNhbGxiYWNrKQooYykKICBtYXBDaGlsZHJlbihjaGlsZHJlbiwgZnVuYywgY29udGV4dCkKKGNoaWxkKQogIGNvdW50Q2hpbGRyZW4oY2hpbGRyZW4pCigpCiAgZm9yRWFjaENoaWxkcmVuKGNoaWxkcmVuLCBmb3JFYWNoRnVuYywgZm9yRWFjaENvbnRleHQpCigpCiAgdG9BcnJheShjaGlsZHJlbikKKGNoaWxkKQogIG9ubHlDaGlsZChjaGlsZHJlbikKICBjcmVhdGVDb250ZXh0KGRlZmF1bHRWYWx1ZSwgY2FsY3VsYXRlQ2hhbmdlZEJpdHMpCiAgZ2V0OiBmdW5jdGlvbiAoKQogIHNldDogZnVuY3Rpb24gKF9Qcm92aWRlcikKICBnZXQ6IGZ1bmN0aW9uICgpCiAgc2V0OiBmdW5jdGlvbiAoX2N1cnJlbnRWYWx1ZSkKICBnZXQ6IGZ1bmN0aW9uICgpCiAgc2V0OiBmdW5jdGlvbiAoX2N1cnJlbnRWYWx1ZTIpCiAgZ2V0OiBmdW5jdGlvbiAoKQogIHNldDogZnVuY3Rpb24gKF90aHJlYWRDb3VudCkKICBnZXQ6IGZ1bmN0aW9uICgpCiAgZ2V0OiBmdW5jdGlvbiAoKQogIHNldDogZnVuY3Rpb24gKGRpc3BsYXlOYW1lKQogIGxhenlJbml0aWFsaXplcihwYXlsb2FkKQoobW9kdWxlT2JqZWN0KQooZXJyb3IpCiAgbGF6eShjdG9yKQogIGdldDogZnVuY3Rpb24gKCkKICBzZXQ6IGZ1bmN0aW9uIChuZXdEZWZhdWx0UHJvcHMpCiAgZ2V0OiBmdW5jdGlvbiAoKQogIHNldDogZnVuY3Rpb24gKG5ld1Byb3BUeXBlcykKICBmb3J3YXJkUmVmKHJlbmRlcikKICBnZXQ6IGZ1bmN0aW9uICgpCiAgc2V0OiBmdW5jdGlvbiAobmFtZSkKICBpc1ZhbGlkRWxlbWVudFR5cGUodHlwZSkKICBtZW1vKHR5cGUsIGNvbXBhcmUpCiAgZ2V0OiBmdW5jdGlvbiAoKQogIHNldDogZnVuY3Rpb24gKG5hbWUpCiAgcmVzb2x2ZURpc3BhdGNoZXIoKQogIHVzZUNvbnRleHQoQ29udGV4dCwgdW5zdGFibGVfb2JzZXJ2ZWRCaXRzKQogIHVzZVN0YXRlKGluaXRpYWxTdGF0ZSkKICB1c2VSZWR1Y2VyKHJlZHVjZXIsIGluaXRpYWxBcmcsIGluaXQpCiAgdXNlUmVmKGluaXRpYWxWYWx1ZSkKICB1c2VFZmZlY3QoY3JlYXRlLCBkZXBzKQogIHVzZUxheW91dEVmZmVjdChjcmVhdGUsIGRlcHMpCiAgdXNlQ2FsbGJhY2soY2FsbGJhY2ssIGRlcHMpCiAgdXNlTWVtbyhjcmVhdGUsIGRlcHMpCiAgdXNlSW1wZXJhdGl2ZUhhbmRsZShyZWYsIGNyZWF0ZSwgZGVwcykKICB1c2VEZWJ1Z1ZhbHVlKHZhbHVlLCBmb3JtYXR0ZXJGbikKICBkaXNhYmxlZExvZygpCiAgZGlzYWJsZUxvZ3MoKQogIHJlZW5hYmxlTG9ncygpCiAgZGVzY3JpYmVCdWlsdEluQ29tcG9uZW50RnJhbWUobmFtZSwgc291cmNlLCBvd25lckZuKQogIGRlc2NyaWJlTmF0aXZlQ29tcG9uZW50RnJhbWUoZm4sIGNvbnN0cnVjdCkKRmFrZSA9IGZ1bmN0aW9uICgpCkZha2UKICBzZXQ6IGZ1bmN0aW9uICgpCkZha2UKICBkZXNjcmliZUZ1bmN0aW9uQ29tcG9uZW50RnJhbWUoZm4sIHNvdXJjZSwgb3duZXJGbikKICBzaG91bGRDb25zdHJ1Y3QoQ29tcG9uZW50KQpDb21wb25lbnQKICBkZXNjcmliZVVua25vd25FbGVtZW50VHlwZUZyYW1lSW5ERVYodHlwZSwgc291cmNlLCBvd25lckZuKQogIHNldEN1cnJlbnRseVZhbGlkYXRpbmdFbGVtZW50KGVsZW1lbnQpCiAgY2hlY2tQcm9wVHlwZXModHlwZVNwZWNzLCB2YWx1ZXMsIGxvY2F0aW9uLCBjb21wb25lbnROYW1lLCBlbGVtZW50KQogIHNldEN1cnJlbnRseVZhbGlkYXRpbmdFbGVtZW50JDEoZWxlbWVudCkKICBnZXREZWNsYXJhdGlvbkVycm9yQWRkZW5kdW0oKQogIGdldFNvdXJjZUluZm9FcnJvckFkZGVuZHVtKHNvdXJjZSkKICBnZXRTb3VyY2VJbmZvRXJyb3JBZGRlbmR1bUZvclByb3BzKGVsZW1lbnRQcm9wcykKICBnZXRDdXJyZW50Q29tcG9uZW50RXJyb3JJbmZvKHBhcmVudFR5cGUpCiAgdmFsaWRhdGVFeHBsaWNpdEtleShlbGVtZW50LCBwYXJlbnRUeXBlKQogIHZhbGlkYXRlQ2hpbGRLZXlzKG5vZGUsIHBhcmVudFR5cGUpCiAgdmFsaWRhdGVQcm9wVHlwZXMoZWxlbWVudCkKICB2YWxpZGF0ZUZyYWdtZW50UHJvcHMoZnJhZ21lbnQpCiAgY3JlYXRlRWxlbWVudFdpdGhWYWxpZGF0aW9uKHR5cGUsIHByb3BzLCBjaGlsZHJlbikKICBjcmVhdGVGYWN0b3J5V2l0aFZhbGlkYXRpb24odHlwZSkKICBnZXQ6IGZ1bmN0aW9uICgpCiAgY2xvbmVFbGVtZW50V2l0aFZhbGlkYXRpb24oZWxlbWVudCwgcHJvcHMsIGNoaWxkcmVuKQAAAAAAAAAAHgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQ4AAAAAAAABDgAAAAAAAAAAAAAAAPC/"
				],
				[
					283,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								3491,
								3517
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay = ({svgRef}) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAeAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpAAAAAAAAAAAeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHgAAAFN2Z1BhdGhUcmFjZXIocGF0aCkKKmVudHJpZXMoKQAAAAAAAAAAHgAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					284,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/svg/overlay.js",
						"symkeys":
						[
							[
								209,
								238
							],
							[
								519,
								529
							],
							[
								3491,
								3517
							]
						],
						"symlist":
						[
							" function SvgPathTracer(path)",
							"*entries()",
							"SvgOverlay = ({svgRef}) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAeAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpAAAAAAAAAAAeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHgAAAFN2Z1BhdGhUcmFjZXIocGF0aCkKKmVudHJpZXMoKQAAAAAAAAAAHgAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					285,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAeAAAAU3ZnUGF0aFRyYWNlcihwYXRoKQoqZW50cmllcygpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					286,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/stores/RootStore.js",
						"symkeys":
						[
							[
								884,
								893
							],
							[
								1493,
								1528
							],
							[
								2466,
								2477
							],
							[
								2487,
								2509
							],
							[
								2568,
								2579
							],
							[
								2686,
								2692
							],
							[
								2878,
								2884
							],
							[
								2916,
								2927
							],
							[
								3022,
								3041
							],
							[
								3306,
								3332
							],
							[
								3638,
								3654
							],
							[
								3737,
								3750
							],
							[
								3802,
								3820
							],
							[
								4394,
								4400
							],
							[
								4755,
								4767
							],
							[
								4856,
								4871
							],
							[
								4963,
								4980
							],
							[
								5095,
								5106
							],
							[
								5486,
								5503
							],
							[
								5606,
								5617
							],
							[
								6186,
								6204
							],
							[
								6414,
								6428
							],
							[
								6677,
								6693
							],
							[
								6786,
								6799
							],
							[
								6876,
								6884
							],
							[
								7716,
								7759
							],
							[
								7936,
								7979
							],
							[
								8084,
								8090
							],
							[
								8352,
								8356
							],
							[
								8437,
								8441
							],
							[
								8533,
								8537
							],
							[
								8593,
								8601
							],
							[
								8737,
								8759
							],
							[
								8783,
								8796
							],
							[
								8884,
								8903
							],
							[
								9285,
								9318
							],
							[
								9488,
								9496
							],
							[
								9540,
								9548
							],
							[
								9781,
								9798
							],
							[
								9862,
								9868
							],
							[
								9936,
								9942
							],
							[
								10946,
								10963
							],
							[
								11090,
								11096
							],
							[
								11483,
								11519
							],
							[
								11719,
								11735
							],
							[
								11976,
								11997
							],
							[
								12091,
								12095
							],
							[
								12177,
								12191
							]
						],
						"symlist":
						[
							"RootStore",
							"constructor(initialData, pageProps)",
							"constructor",
							".toObject = function()",
							"([k, v]) =>",
							" () =>",
							" () =>",
							"disposer =>",
							"get authenticated()",
							"setAuthentication(cookies)",
							"updateState(obj)",
							"setState(obj)",
							"newPhoto(photoObj)",
							" () =>",
							"getPhoto(id)",
							"photoExists(id)",
							"completed = () =>",
							"response =>",
							"completed = () =>",
							"response =>",
							"get currentPhoto()",
							"get rootItem()",
							"get rootItemId()",
							"newItem(item)",
							"child =>",
							"getItem(id, tr, idMap = null, depth = 1000)",
							"getTree(id, tr, idMap = null, depth = 1000)",
							" it =>",
							"i =>",
							"c =>",
							"i =>",
							"child =>",
							" function*(map = null)",
							"map = item =>",
							"notLoadedChildren()",
							"getHierarchy(item, fn = it => it)",
							"child =>",
							"child =>",
							"completed = () =>",
							" () =>",
							"res =>",
							"completed = () =>",
							"res =>",
							"addToast(title, message, ttl = 5000)",
							" function()",
							"removeToast(deadline)",
							"t =>",
							"removeToasts()"
						]
					},
					"AQAAAAAAAAAAAAAAEgIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					287,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAASAgAAUm9vdFN0b3JlCiAgY29uc3RydWN0b3IoaW5pdGlhbERhdGEsIHBhZ2VQcm9wcykKICBjb25zdHJ1Y3RvcgogIC50b09iamVjdCA9IGZ1bmN0aW9uKCkKICBnZXQgYXV0aGVudGljYXRlZCgpCiAgc2V0QXV0aGVudGljYXRpb24oY29va2llcykKICB1cGRhdGVTdGF0ZShvYmopCiAgc2V0U3RhdGUob2JqKQogIG5ld1Bob3RvKHBob3RvT2JqKQogIGdldFBob3RvKGlkKQogIHBob3RvRXhpc3RzKGlkKQogIGdldCBjdXJyZW50UGhvdG8oKQogIGdldCByb290SXRlbSgpCiAgZ2V0IHJvb3RJdGVtSWQoKQogIG5ld0l0ZW0oaXRlbSkKICBnZXRJdGVtKGlkLCB0ciwgaWRNYXAgPSBudWxsLCBkZXB0aCA9IDEwMDApCiAgZ2V0VHJlZShpZCwgdHIsIGlkTWFwID0gbnVsbCwgZGVwdGggPSAxMDAwKQogIGZ1bmN0aW9uKihtYXAgPSBudWxsKQogIG5vdExvYWRlZENoaWxkcmVuKCkKICBhZGRUb2FzdCh0aXRsZSwgbWVzc2FnZSwgdHRsID0gNTAwMCkKICBmdW5jdGlvbigpCiAgcmVtb3ZlVG9hc3QoZGVhZGxpbmUpCiAgcmVtb3ZlVG9hc3RzKCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					288,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/stores/RootStore.js",
						"symkeys":
						[
							[
								884,
								893
							],
							[
								1493,
								1528
							],
							[
								2466,
								2477
							],
							[
								2487,
								2509
							],
							[
								2568,
								2579
							],
							[
								2686,
								2692
							],
							[
								2878,
								2884
							],
							[
								2916,
								2927
							],
							[
								3022,
								3041
							],
							[
								3306,
								3332
							],
							[
								3638,
								3654
							],
							[
								3737,
								3750
							],
							[
								3802,
								3820
							],
							[
								4394,
								4400
							],
							[
								4755,
								4767
							],
							[
								4856,
								4871
							],
							[
								4963,
								4980
							],
							[
								5095,
								5106
							],
							[
								5486,
								5503
							],
							[
								5606,
								5617
							],
							[
								6186,
								6204
							],
							[
								6414,
								6428
							],
							[
								6677,
								6693
							],
							[
								6786,
								6799
							],
							[
								6876,
								6884
							],
							[
								7716,
								7759
							],
							[
								7936,
								7979
							],
							[
								8084,
								8090
							],
							[
								8352,
								8356
							],
							[
								8437,
								8441
							],
							[
								8533,
								8537
							],
							[
								8593,
								8601
							],
							[
								8737,
								8759
							],
							[
								8783,
								8796
							],
							[
								8884,
								8903
							],
							[
								9285,
								9318
							],
							[
								9488,
								9496
							],
							[
								9540,
								9548
							],
							[
								9781,
								9798
							],
							[
								9862,
								9868
							],
							[
								9936,
								9942
							],
							[
								10946,
								10963
							],
							[
								11090,
								11096
							],
							[
								11483,
								11519
							],
							[
								11719,
								11735
							],
							[
								11976,
								11997
							],
							[
								12091,
								12095
							],
							[
								12177,
								12191
							]
						],
						"symlist":
						[
							"RootStore",
							"constructor(initialData, pageProps)",
							"constructor",
							".toObject = function()",
							"([k, v]) =>",
							" () =>",
							" () =>",
							"disposer =>",
							"get authenticated()",
							"setAuthentication(cookies)",
							"updateState(obj)",
							"setState(obj)",
							"newPhoto(photoObj)",
							" () =>",
							"getPhoto(id)",
							"photoExists(id)",
							"completed = () =>",
							"response =>",
							"completed = () =>",
							"response =>",
							"get currentPhoto()",
							"get rootItem()",
							"get rootItemId()",
							"newItem(item)",
							"child =>",
							"getItem(id, tr, idMap = null, depth = 1000)",
							"getTree(id, tr, idMap = null, depth = 1000)",
							" it =>",
							"i =>",
							"c =>",
							"i =>",
							"child =>",
							" function*(map = null)",
							"map = item =>",
							"notLoadedChildren()",
							"getHierarchy(item, fn = it => it)",
							"child =>",
							"child =>",
							"completed = () =>",
							" () =>",
							"res =>",
							"completed = () =>",
							"res =>",
							"addToast(title, message, ttl = 5000)",
							" function()",
							"removeToast(deadline)",
							"t =>",
							"removeToasts()"
						]
					},
					"AQAAAAAAAAAAAAAAEgIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					289,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAASAgAAUm9vdFN0b3JlCiAgY29uc3RydWN0b3IoaW5pdGlhbERhdGEsIHBhZ2VQcm9wcykKICBjb25zdHJ1Y3RvcgogIC50b09iamVjdCA9IGZ1bmN0aW9uKCkKICBnZXQgYXV0aGVudGljYXRlZCgpCiAgc2V0QXV0aGVudGljYXRpb24oY29va2llcykKICB1cGRhdGVTdGF0ZShvYmopCiAgc2V0U3RhdGUob2JqKQogIG5ld1Bob3RvKHBob3RvT2JqKQogIGdldFBob3RvKGlkKQogIHBob3RvRXhpc3RzKGlkKQogIGdldCBjdXJyZW50UGhvdG8oKQogIGdldCByb290SXRlbSgpCiAgZ2V0IHJvb3RJdGVtSWQoKQogIG5ld0l0ZW0oaXRlbSkKICBnZXRJdGVtKGlkLCB0ciwgaWRNYXAgPSBudWxsLCBkZXB0aCA9IDEwMDApCiAgZ2V0VHJlZShpZCwgdHIsIGlkTWFwID0gbnVsbCwgZGVwdGggPSAxMDAwKQogIGZ1bmN0aW9uKihtYXAgPSBudWxsKQogIG5vdExvYWRlZENoaWxkcmVuKCkKICBhZGRUb2FzdCh0aXRsZSwgbWVzc2FnZSwgdHRsID0gNTAwMCkKICBmdW5jdGlvbigpCiAgcmVtb3ZlVG9hc3QoZGVhZGxpbmUpCiAgcmVtb3ZlVG9hc3RzKCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					290,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/wild-beauty/stores/queries.js",
						"symkeys":
						[
							[
								193,
								226
							],
							[
								354,
								363
							],
							[
								458,
								465
							],
							[
								541,
								570
							],
							[
								855,
								863
							],
							[
								988,
								1042
							],
							[
								1648,
								1676
							],
							[
								2047,
								2074
							],
							[
								2399,
								2426
							],
							[
								2890,
								2916
							],
							[
								4037,
								4081
							],
							[
								4606,
								4617
							],
							[
								4719,
								4737
							],
							[
								4900,
								4918
							],
							[
								5000,
								5021
							],
							[
								5237,
								5258
							],
							[
								5334,
								5354
							],
							[
								5659,
								5691
							]
						],
						"symlist":
						[
							"function getImageColors(colorstr)",
							"(a, b) =>",
							"Queries",
							"async fetchImages(where = {})",
							"photo =>",
							"async fetchItems(where, fields, t = transformItemData)",
							"async refreshItem(id, props)",
							"async updateItem(id, props)",
							"async loadItems(where = {})",
							"async loadItem(where = {})",
							"saveItem(values, doneHandler = result => {})",
							"response =>",
							"async findItem(id)",
							"async getDepth(id)",
							"async getSiblings(id)",
							"async getChildren(id)",
							"async getParents(id)",
							"async apiRequest(endpoint, data)"
						]
					},
					"AQAAAAAAAAAAAAAAPwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					291,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA/AQAAICBnZXRJbWFnZUNvbG9ycyhjb2xvcnN0cikKUXVlcmllcwogIGZldGNoSW1hZ2VzKHdoZXJlID0ge30pCiAgZmV0Y2hJdGVtcyh3aGVyZSwgZmllbGRzLCB0ID0gdHJhbnNmb3JtSXRlbURhdGEpCiAgcmVmcmVzaEl0ZW0oaWQsIHByb3BzKQogIHVwZGF0ZUl0ZW0oaWQsIHByb3BzKQogIGxvYWRJdGVtcyh3aGVyZSA9IHt9KQogIGxvYWRJdGVtKHdoZXJlID0ge30pCiAgZmluZEl0ZW0oaWQpCiAgZ2V0RGVwdGgoaWQpCiAgZ2V0U2libGluZ3MoaWQpCiAgZ2V0Q2hpbGRyZW4oaWQpCiAgZ2V0UGFyZW50cyhpZCkKICBhcGlSZXF1ZXN0KGVuZHBvaW50LCBkYXRhKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					292,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/server.js",
						"symkeys":
						[
							[
								1183,
								1207
							],
							[
								1389,
								1425
							],
							[
								1449,
								1453
							],
							[
								2306,
								2332
							],
							[
								2572,
								2577
							],
							[
								2642,
								2666
							],
							[
								3597,
								3621
							],
							[
								3726,
								3745
							],
							[
								4823,
								4830
							],
							[
								5062,
								5085
							],
							[
								5170,
								5207
							],
							[
								5486,
								5502
							],
							[
								5503,
								5522
							],
							[
								5917,
								5936
							],
							[
								6697,
								6716
							],
							[
								6989,
								7008
							],
							[
								7662,
								7681
							],
							[
								7930,
								7937
							],
							[
								8278,
								8297
							],
							[
								8834,
								8853
							],
							[
								9466,
								9485
							],
							[
								10527,
								10546
							],
							[
								10917,
								10925
							],
							[
								11022,
								11027
							],
							[
								11184,
								11203
							],
							[
								11487,
								11506
							],
							[
								12479,
								12498
							],
							[
								13060,
								13077
							],
							[
								13127,
								13144
							],
							[
								15219,
								15233
							],
							[
								15349,
								15363
							],
							[
								15548,
								15555
							]
						],
						"symlist":
						[
							"function logStream(file)",
							"write: (data, encoding, callback) =>",
							"o =>",
							" (worker, code, signal) =>",
							"() =>",
							"function(req, res, next)",
							"function(req, res, next)",
							"async (req, res) =>",
							" key =>",
							"getVar = (req, name) =>",
							"getUser = async function(token, prop)",
							"needAuth = fn =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"item =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"image =>",
							"im =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"([key, value]) =>",
							"([key, value]) =>",
							" (req, res) =>",
							" (req, res) =>",
							" err =>"
						]
					},
					"AQAAAAAAAAAAAAAAaQAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					293,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/node_modules/react/cjs/react.development.js",
						"symkeys":
						[
							[
								303,
								313
							],
							[
								2698,
								2735
							],
							[
								3707,
								3741
							],
							[
								3795,
								3855
							],
							[
								4025,
								4078
							],
							[
								5108,
								5129
							],
							[
								5343,
								5365
							],
							[
								5590,
								5632
							],
							[
								6001,
								6016
							],
							[
								6489,
								6534
							],
							[
								7531,
								7567
							],
							[
								8257,
								8324
							],
							[
								8973,
								9056
							],
							[
								9690,
								9768
							],
							[
								9949,
								9992
							],
							[
								10291,
								10300
							],
							[
								11499,
								11563
							],
							[
								12399,
								12452
							],
							[
								13102,
								13156
							],
							[
								13185,
								13194
							],
							[
								13226,
								13242
							],
							[
								13554,
								13579
							],
							[
								13584,
								13598
							],
							[
								13611,
								13620
							],
							[
								13711,
								13758
							],
							[
								13995,
								14008
							],
							[
								14180,
								14189
							],
							[
								14307,
								14327
							],
							[
								14434,
								14492
							],
							[
								14678,
								14707
							],
							[
								14753,
								14784
							],
							[
								16711,
								16739
							],
							[
								16988,
								17016
							],
							[
								17265,
								17320
							],
							[
								17329,
								17364
							],
							[
								17909,
								17964
							],
							[
								17973,
								18008
							],
							[
								18553,
								18606
							],
							[
								20262,
								20330
							],
							[
								22085,
								22131
							],
							[
								24043,
								24090
							],
							[
								24410,
								24458
							],
							[
								26713,
								26744
							],
							[
								27037,
								27057
							],
							[
								27193,
								27210
							],
							[
								27457,
								27493
							],
							[
								27796,
								27834
							],
							[
								28191,
								28265
							],
							[
								29367,
								29380
							],
							[
								32166,
								32211
							],
							[
								32342,
								32359
							],
							[
								32694,
								32726
							],
							[
								32765,
								32777
							],
							[
								33227,
								33290
							],
							[
								33316,
								33328
							],
							[
								33634,
								33660
							],
							[
								33693,
								33710
							],
							[
								34306,
								34334
							],
							[
								34505,
								34563
							],
							[
								36465,
								36481
							],
							[
								36842,
								36867
							],
							[
								36960,
								36976
							],
							[
								37038,
								37067
							],
							[
								37170,
								37186
							],
							[
								37249,
								37279
							],
							[
								37382,
								37398
							],
							[
								37459,
								37487
							],
							[
								37582,
								37598
							],
							[
								38000,
								38016
							],
							[
								38076,
								38103
							],
							[
								38748,
								38781
							],
							[
								39028,
								39051
							],
							[
								39684,
								39701
							],
							[
								40021,
								40040
							],
							[
								40473,
								40489
							],
							[
								40542,
								40573
							],
							[
								41078,
								41094
							],
							[
								41144,
								41172
							],
							[
								41644,
								41671
							],
							[
								42826,
								42842
							],
							[
								42884,
								42904
							],
							[
								43223,
								43256
							],
							[
								44139,
								44167
							],
							[
								44609,
								44625
							],
							[
								44667,
								44687
							],
							[
								44846,
								44874
							],
							[
								45458,
								45509
							],
							[
								46769,
								46800
							],
							[
								46889,
								46935
							],
							[
								47039,
								47068
							],
							[
								47155,
								47187
							],
							[
								47277,
								47315
							],
							[
								47411,
								47447
							],
							[
								47541,
								47571
							],
							[
								47659,
								47706
							],
							[
								47811,
								47853
							],
							[
								48363,
								48385
							],
							[
								48429,
								48451
							],
							[
								49343,
								49366
							],
							[
								50534,
								50595
							],
							[
								51149,
								51201
							],
							[
								52005,
								52023
							],
							[
								52102,
								52106
							],
							[
								52137,
								52153
							],
							[
								52811,
								52815
							],
							[
								55997,
								56057
							],
							[
								56123,
								56158
							],
							[
								56179,
								56188
							],
							[
								56257,
								56325
							],
							[
								57741,
								57788
							],
							[
								58103,
								58179
							],
							[
								60509,
								60558
							],
							[
								60905,
								60943
							],
							[
								61153,
								61196
							],
							[
								61425,
								61482
							],
							[
								61836,
								61885
							],
							[
								62652,
								62701
							],
							[
								64082,
								64126
							],
							[
								65204,
								65239
							],
							[
								66712,
								66752
							],
							[
								67397,
								67456
							],
							[
								69662,
								69704
							],
							[
								70207,
								70223
							],
							[
								70490,
								70551
							]
						],
						"symlist":
						[
							"function()",
							"function getIteratorFn(maybeIterable)",
							"function setExtraStackFrame(stack)",
							"ReactDebugCurrentFrame.setExtraStackFrame = function (stack)",
							"ReactDebugCurrentFrame.getStackAddendum = function ()",
							"function warn(format)",
							"function error(format)",
							"function printWarning(level, format, args)",
							"function (item)",
							"function warnNoop(publicInstance, callerName)",
							"isMounted: function (publicInstance)",
							"enqueueForceUpdate: function (publicInstance, callback, callerName)",
							"enqueueReplaceState: function (publicInstance, completeState, callback, callerName)",
							"enqueueSetState: function (publicInstance, partialState, callback, callerName)",
							"function Component(props, context, updater)",
							"Component",
							"Component.prototype.setState = function (partialState, callback)",
							"Component.prototype.forceUpdate = function (callback)",
							"defineDeprecationWarning = function (methodName, info)",
							"Component",
							"get: function ()",
							"function ComponentDummy()",
							"ComponentDummy",
							"Component",
							"function PureComponent(props, context, updater)",
							"PureComponent",
							"Component",
							"function createRef()",
							"function getWrappedName(outerType, innerType, wrapperName)",
							"function getContextName(type)",
							"function getComponentName(type)",
							"function hasValidRef(config)",
							"function hasValidKey(config)",
							"function defineKeyPropWarningGetter(props, displayName)",
							"warnAboutAccessingKey = function ()",
							"function defineRefPropWarningGetter(props, displayName)",
							"warnAboutAccessingRef = function ()",
							"function warnIfStringRefCannotBeAutoConverted(config)",
							"ReactElement = function (type, key, ref, self, source, owner, props)",
							"function createElement(type, config, children)",
							"function cloneAndReplaceKey(oldElement, newKey)",
							"function cloneElement(element, config, children)",
							"function isValidElement(object)",
							"function escape(key)",
							" function (match)",
							"function escapeUserProvidedKey(text)",
							"function getElementKey(element, index)",
							"function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback)",
							" function (c)",
							"function mapChildren(children, func, context)",
							" function (child)",
							"function countChildren(children)",
							" function ()",
							"function forEachChildren(children, forEachFunc, forEachContext)",
							" function ()",
							"function toArray(children)",
							" function (child)",
							"function onlyChild(children)",
							"function createContext(defaultValue, calculateChangedBits)",
							"get: function ()",
							"set: function (_Provider)",
							"get: function ()",
							"set: function (_currentValue)",
							"get: function ()",
							"set: function (_currentValue2)",
							"get: function ()",
							"set: function (_threadCount)",
							"get: function ()",
							"get: function ()",
							"set: function (displayName)",
							"function lazyInitializer(payload)",
							"function (moduleObject)",
							" function (error)",
							"function lazy(ctor)",
							"get: function ()",
							"set: function (newDefaultProps)",
							"get: function ()",
							"set: function (newPropTypes)",
							"function forwardRef(render)",
							"get: function ()",
							"set: function (name)",
							"function isValidElementType(type)",
							"function memo(type, compare)",
							"get: function ()",
							"set: function (name)",
							"function resolveDispatcher()",
							"function useContext(Context, unstable_observedBits)",
							"function useState(initialState)",
							"function useReducer(reducer, initialArg, init)",
							"function useRef(initialValue)",
							"function useEffect(create, deps)",
							"function useLayoutEffect(create, deps)",
							"function useCallback(callback, deps)",
							"function useMemo(create, deps)",
							"function useImperativeHandle(ref, create, deps)",
							"function useDebugValue(value, formatterFn)",
							"function disabledLog()",
							"function disableLogs()",
							"function reenableLogs()",
							"function describeBuiltInComponentFrame(name, source, ownerFn)",
							"function describeNativeComponentFrame(fn, construct)",
							"Fake = function ()",
							"Fake",
							"set: function ()",
							"Fake",
							"function describeFunctionComponentFrame(fn, source, ownerFn)",
							"function shouldConstruct(Component)",
							"Component",
							"function describeUnknownElementTypeFrameInDEV(type, source, ownerFn)",
							"function setCurrentlyValidatingElement(element)",
							"function checkPropTypes(typeSpecs, values, location, componentName, element)",
							"function setCurrentlyValidatingElement$1(element)",
							"function getDeclarationErrorAddendum()",
							"function getSourceInfoErrorAddendum(source)",
							"function getSourceInfoErrorAddendumForProps(elementProps)",
							"function getCurrentComponentErrorInfo(parentType)",
							"function validateExplicitKey(element, parentType)",
							"function validateChildKeys(node, parentType)",
							"function validatePropTypes(element)",
							"function validateFragmentProps(fragment)",
							"function createElementWithValidation(type, props, children)",
							"function createFactoryWithValidation(type)",
							"get: function ()",
							"function cloneElementWithValidation(element, props, children)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABpAAAAICBsb2dTdHJlYW0oZmlsZSkKICBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkKICBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkKICBnZXRVc2VyID0gZnVuY3Rpb24odG9rZW4sIHByb3ApAAAAAAAAAAD1DgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					294,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/package.json",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD1DgAAICBmdW5jdGlvbigpCiAgZ2V0SXRlcmF0b3JGbihtYXliZUl0ZXJhYmxlKQogIHNldEV4dHJhU3RhY2tGcmFtZShzdGFjaykKUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZS5zZXRFeHRyYVN0YWNrRnJhbWUgPSBmdW5jdGlvbiAoc3RhY2spClJlYWN0RGVidWdDdXJyZW50RnJhbWUuZ2V0U3RhY2tBZGRlbmR1bSA9IGZ1bmN0aW9uICgpCiAgd2Fybihmb3JtYXQpCiAgZXJyb3IoZm9ybWF0KQogIHByaW50V2FybmluZyhsZXZlbCwgZm9ybWF0LCBhcmdzKQooaXRlbSkKICB3YXJuTm9vcChwdWJsaWNJbnN0YW5jZSwgY2FsbGVyTmFtZSkKICBpc01vdW50ZWQ6IGZ1bmN0aW9uIChwdWJsaWNJbnN0YW5jZSkKICBlbnF1ZXVlRm9yY2VVcGRhdGU6IGZ1bmN0aW9uIChwdWJsaWNJbnN0YW5jZSwgY2FsbGJhY2ssIGNhbGxlck5hbWUpCiAgZW5xdWV1ZVJlcGxhY2VTdGF0ZTogZnVuY3Rpb24gKHB1YmxpY0luc3RhbmNlLCBjb21wbGV0ZVN0YXRlLCBjYWxsYmFjaywgY2FsbGVyTmFtZSkKICBlbnF1ZXVlU2V0U3RhdGU6IGZ1bmN0aW9uIChwdWJsaWNJbnN0YW5jZSwgcGFydGlhbFN0YXRlLCBjYWxsYmFjaywgY2FsbGVyTmFtZSkKQ29tcG9uZW50KHByb3BzLCBjb250ZXh0LCB1cGRhdGVyKQpDb21wb25lbnQKQ29tcG9uZW50LnByb3RvdHlwZS5zZXRTdGF0ZSA9IGZ1bmN0aW9uIChwYXJ0aWFsU3RhdGUsIGNhbGxiYWNrKQpDb21wb25lbnQucHJvdG90eXBlLmZvcmNlVXBkYXRlID0gZnVuY3Rpb24gKGNhbGxiYWNrKQogIGRlZmluZURlcHJlY2F0aW9uV2FybmluZyA9IGZ1bmN0aW9uIChtZXRob2ROYW1lLCBpbmZvKQpDb21wb25lbnQKICBnZXQ6IGZ1bmN0aW9uICgpCkNvbXBvbmVudER1bW15KCkKQ29tcG9uZW50RHVtbXkKQ29tcG9uZW50ClB1cmVDb21wb25lbnQocHJvcHMsIGNvbnRleHQsIHVwZGF0ZXIpClB1cmVDb21wb25lbnQKQ29tcG9uZW50CiAgY3JlYXRlUmVmKCkKICBnZXRXcmFwcGVkTmFtZShvdXRlclR5cGUsIGlubmVyVHlwZSwgd3JhcHBlck5hbWUpCiAgZ2V0Q29udGV4dE5hbWUodHlwZSkKICBnZXRDb21wb25lbnROYW1lKHR5cGUpCiAgaGFzVmFsaWRSZWYoY29uZmlnKQogIGhhc1ZhbGlkS2V5KGNvbmZpZykKICBkZWZpbmVLZXlQcm9wV2FybmluZ0dldHRlcihwcm9wcywgZGlzcGxheU5hbWUpCiAgd2FybkFib3V0QWNjZXNzaW5nS2V5ID0gZnVuY3Rpb24gKCkKICBkZWZpbmVSZWZQcm9wV2FybmluZ0dldHRlcihwcm9wcywgZGlzcGxheU5hbWUpCiAgd2FybkFib3V0QWNjZXNzaW5nUmVmID0gZnVuY3Rpb24gKCkKICB3YXJuSWZTdHJpbmdSZWZDYW5ub3RCZUF1dG9Db252ZXJ0ZWQoY29uZmlnKQpSZWFjdEVsZW1lbnQgPSBmdW5jdGlvbiAodHlwZSwga2V5LCByZWYsIHNlbGYsIHNvdXJjZSwgb3duZXIsIHByb3BzKQogIGNyZWF0ZUVsZW1lbnQodHlwZSwgY29uZmlnLCBjaGlsZHJlbikKICBjbG9uZUFuZFJlcGxhY2VLZXkob2xkRWxlbWVudCwgbmV3S2V5KQogIGNsb25lRWxlbWVudChlbGVtZW50LCBjb25maWcsIGNoaWxkcmVuKQogIGlzVmFsaWRFbGVtZW50KG9iamVjdCkKICBlc2NhcGUoa2V5KQoobWF0Y2gpCiAgZXNjYXBlVXNlclByb3ZpZGVkS2V5KHRleHQpCiAgZ2V0RWxlbWVudEtleShlbGVtZW50LCBpbmRleCkKICBtYXBJbnRvQXJyYXkoY2hpbGRyZW4sIGFycmF5LCBlc2NhcGVkUHJlZml4LCBuYW1lU29GYXIsIGNhbGxiYWNrKQooYykKICBtYXBDaGlsZHJlbihjaGlsZHJlbiwgZnVuYywgY29udGV4dCkKKGNoaWxkKQogIGNvdW50Q2hpbGRyZW4oY2hpbGRyZW4pCigpCiAgZm9yRWFjaENoaWxkcmVuKGNoaWxkcmVuLCBmb3JFYWNoRnVuYywgZm9yRWFjaENvbnRleHQpCigpCiAgdG9BcnJheShjaGlsZHJlbikKKGNoaWxkKQogIG9ubHlDaGlsZChjaGlsZHJlbikKICBjcmVhdGVDb250ZXh0KGRlZmF1bHRWYWx1ZSwgY2FsY3VsYXRlQ2hhbmdlZEJpdHMpCiAgZ2V0OiBmdW5jdGlvbiAoKQogIHNldDogZnVuY3Rpb24gKF9Qcm92aWRlcikKICBnZXQ6IGZ1bmN0aW9uICgpCiAgc2V0OiBmdW5jdGlvbiAoX2N1cnJlbnRWYWx1ZSkKICBnZXQ6IGZ1bmN0aW9uICgpCiAgc2V0OiBmdW5jdGlvbiAoX2N1cnJlbnRWYWx1ZTIpCiAgZ2V0OiBmdW5jdGlvbiAoKQogIHNldDogZnVuY3Rpb24gKF90aHJlYWRDb3VudCkKICBnZXQ6IGZ1bmN0aW9uICgpCiAgZ2V0OiBmdW5jdGlvbiAoKQogIHNldDogZnVuY3Rpb24gKGRpc3BsYXlOYW1lKQogIGxhenlJbml0aWFsaXplcihwYXlsb2FkKQoobW9kdWxlT2JqZWN0KQooZXJyb3IpCiAgbGF6eShjdG9yKQogIGdldDogZnVuY3Rpb24gKCkKICBzZXQ6IGZ1bmN0aW9uIChuZXdEZWZhdWx0UHJvcHMpCiAgZ2V0OiBmdW5jdGlvbiAoKQogIHNldDogZnVuY3Rpb24gKG5ld1Byb3BUeXBlcykKICBmb3J3YXJkUmVmKHJlbmRlcikKICBnZXQ6IGZ1bmN0aW9uICgpCiAgc2V0OiBmdW5jdGlvbiAobmFtZSkKICBpc1ZhbGlkRWxlbWVudFR5cGUodHlwZSkKICBtZW1vKHR5cGUsIGNvbXBhcmUpCiAgZ2V0OiBmdW5jdGlvbiAoKQogIHNldDogZnVuY3Rpb24gKG5hbWUpCiAgcmVzb2x2ZURpc3BhdGNoZXIoKQogIHVzZUNvbnRleHQoQ29udGV4dCwgdW5zdGFibGVfb2JzZXJ2ZWRCaXRzKQogIHVzZVN0YXRlKGluaXRpYWxTdGF0ZSkKICB1c2VSZWR1Y2VyKHJlZHVjZXIsIGluaXRpYWxBcmcsIGluaXQpCiAgdXNlUmVmKGluaXRpYWxWYWx1ZSkKICB1c2VFZmZlY3QoY3JlYXRlLCBkZXBzKQogIHVzZUxheW91dEVmZmVjdChjcmVhdGUsIGRlcHMpCiAgdXNlQ2FsbGJhY2soY2FsbGJhY2ssIGRlcHMpCiAgdXNlTWVtbyhjcmVhdGUsIGRlcHMpCiAgdXNlSW1wZXJhdGl2ZUhhbmRsZShyZWYsIGNyZWF0ZSwgZGVwcykKICB1c2VEZWJ1Z1ZhbHVlKHZhbHVlLCBmb3JtYXR0ZXJGbikKICBkaXNhYmxlZExvZygpCiAgZGlzYWJsZUxvZ3MoKQogIHJlZW5hYmxlTG9ncygpCiAgZGVzY3JpYmVCdWlsdEluQ29tcG9uZW50RnJhbWUobmFtZSwgc291cmNlLCBvd25lckZuKQogIGRlc2NyaWJlTmF0aXZlQ29tcG9uZW50RnJhbWUoZm4sIGNvbnN0cnVjdCkKRmFrZSA9IGZ1bmN0aW9uICgpCkZha2UKICBzZXQ6IGZ1bmN0aW9uICgpCkZha2UKICBkZXNjcmliZUZ1bmN0aW9uQ29tcG9uZW50RnJhbWUoZm4sIHNvdXJjZSwgb3duZXJGbikKICBzaG91bGRDb25zdHJ1Y3QoQ29tcG9uZW50KQpDb21wb25lbnQKICBkZXNjcmliZVVua25vd25FbGVtZW50VHlwZUZyYW1lSW5ERVYodHlwZSwgc291cmNlLCBvd25lckZuKQogIHNldEN1cnJlbnRseVZhbGlkYXRpbmdFbGVtZW50KGVsZW1lbnQpCiAgY2hlY2tQcm9wVHlwZXModHlwZVNwZWNzLCB2YWx1ZXMsIGxvY2F0aW9uLCBjb21wb25lbnROYW1lLCBlbGVtZW50KQogIHNldEN1cnJlbnRseVZhbGlkYXRpbmdFbGVtZW50JDEoZWxlbWVudCkKICBnZXREZWNsYXJhdGlvbkVycm9yQWRkZW5kdW0oKQogIGdldFNvdXJjZUluZm9FcnJvckFkZGVuZHVtKHNvdXJjZSkKICBnZXRTb3VyY2VJbmZvRXJyb3JBZGRlbmR1bUZvclByb3BzKGVsZW1lbnRQcm9wcykKICBnZXRDdXJyZW50Q29tcG9uZW50RXJyb3JJbmZvKHBhcmVudFR5cGUpCiAgdmFsaWRhdGVFeHBsaWNpdEtleShlbGVtZW50LCBwYXJlbnRUeXBlKQogIHZhbGlkYXRlQ2hpbGRLZXlzKG5vZGUsIHBhcmVudFR5cGUpCiAgdmFsaWRhdGVQcm9wVHlwZXMoZWxlbWVudCkKICB2YWxpZGF0ZUZyYWdtZW50UHJvcHMoZnJhZ21lbnQpCiAgY3JlYXRlRWxlbWVudFdpdGhWYWxpZGF0aW9uKHR5cGUsIHByb3BzLCBjaGlsZHJlbikKICBjcmVhdGVGYWN0b3J5V2l0aFZhbGlkYXRpb24odHlwZSkKICBnZXQ6IGZ1bmN0aW9uICgpCiAgY2xvbmVFbGVtZW50V2l0aFZhbGlkYXRpb24oZWxlbWVudCwgcHJvcHMsIGNoaWxkcmVuKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					295,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/wild-beauty/stores/queries.js",
						"symkeys":
						[
							[
								193,
								226
							],
							[
								354,
								363
							],
							[
								458,
								465
							],
							[
								541,
								570
							],
							[
								855,
								863
							],
							[
								988,
								1042
							],
							[
								1648,
								1676
							],
							[
								2047,
								2074
							],
							[
								2399,
								2426
							],
							[
								2892,
								2918
							],
							[
								4039,
								4083
							],
							[
								4608,
								4619
							],
							[
								4721,
								4739
							],
							[
								4902,
								4920
							],
							[
								5002,
								5023
							],
							[
								5239,
								5260
							],
							[
								5336,
								5356
							],
							[
								5661,
								5693
							]
						],
						"symlist":
						[
							"function getImageColors(colorstr)",
							"(a, b) =>",
							"Queries",
							"async fetchImages(where = {})",
							"photo =>",
							"async fetchItems(where, fields, t = transformItemData)",
							"async refreshItem(id, props)",
							"async updateItem(id, props)",
							"async loadItems(where = {})",
							"async loadItem(where = {})",
							"saveItem(values, doneHandler = result => {})",
							"response =>",
							"async findItem(id)",
							"async getDepth(id)",
							"async getSiblings(id)",
							"async getChildren(id)",
							"async getParents(id)",
							"async apiRequest(endpoint, data)"
						]
					},
					"AQAAAAAAAAAAAAAAPwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					296,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/rsenn/wild-beauty/lib/geom/point.js",
						"symkeys":
						[
							[
								65,
								72
							],
							[
								81,
								89
							],
							[
								111,
								124
							],
							[
								287,
								311
							],
							[
								1670,
								1688
							],
							[
								1818,
								1823
							],
							[
								1848,
								1853
							],
							[
								1899,
								1904
							],
							[
								1943,
								1980
							],
							[
								2031,
								2070
							],
							[
								2119,
								2157
							],
							[
								2206,
								2240
							],
							[
								2367,
								2401
							],
							[
								2526,
								2565
							],
							[
								2680,
								2719
							],
							[
								2818,
								2854
							],
							[
								2886,
								2906
							],
							[
								3010,
								3049
							],
							[
								3148,
								3182
							],
							[
								3281,
								3314
							],
							[
								3414,
								3452
							],
							[
								3573,
								3610
							],
							[
								3732,
								3765
							],
							[
								3819,
								3851
							],
							[
								3904,
								3970
							],
							[
								4068,
								4127
							],
							[
								4149,
								4154
							],
							[
								4211,
								4251
							],
							[
								4323,
								4388
							],
							[
								4614,
								4647
							],
							[
								4741,
								4775
							],
							[
								4872,
								4909
							],
							[
								4962,
								4997
							],
							[
								5030,
								5085
							],
							[
								5176,
								5223
							],
							[
								5294,
								5346
							],
							[
								5393,
								5398
							],
							[
								5449,
								5514
							],
							[
								5759,
								5764
							],
							[
								5792,
								5803
							],
							[
								5996,
								6042
							],
							[
								6507,
								6512
							],
							[
								6554,
								6600
							],
							[
								6648,
								6658
							],
							[
								6772,
								6780
							],
							[
								7162,
								7222
							],
							[
								7328,
								7404
							],
							[
								7537,
								7579
							],
							[
								7655,
								7690
							],
							[
								7733,
								7772
							],
							[
								7890,
								7943
							],
							[
								8263,
								8268
							],
							[
								8327,
								8369
							],
							[
								8511,
								8549
							],
							[
								8562,
								8567
							],
							[
								8608,
								8613
							],
							[
								8659,
								8694
							],
							[
								8707,
								8712
							],
							[
								8802,
								8827
							],
							[
								8869,
								8873
							],
							[
								8880,
								8909
							],
							[
								8910,
								8915
							],
							[
								8950,
								8994
							],
							[
								8995,
								9000
							],
							[
								9042,
								9073
							],
							[
								9074,
								9079
							],
							[
								9116,
								9145
							],
							[
								9146,
								9151
							],
							[
								9186,
								9208
							],
							[
								9209,
								9214
							],
							[
								9242,
								9264
							],
							[
								9265,
								9270
							],
							[
								9298,
								9322
							],
							[
								9323,
								9328
							],
							[
								9358,
								9402
							],
							[
								9403,
								9408
							],
							[
								9458,
								9489
							],
							[
								9709,
								9729
							],
							[
								9730,
								9735
							],
							[
								9783,
								9817
							],
							[
								9929,
								10005
							],
							[
								10098,
								10112
							],
							[
								10365,
								10370
							],
							[
								10402,
								10427
							],
							[
								10526,
								10551
							],
							[
								10725,
								10742
							],
							[
								10854,
								10859
							],
							[
								10938,
								10949
							],
							[
								11079,
								11085
							]
						],
						"symlist":
						[
							" () =>",
							" sym =>",
							"CTOR = obj =>",
							" function Point(...args)",
							"getOther = args =>",
							"Point",
							"get()",
							"get()",
							"Point.prototype.move = function(x, y)",
							"Point.prototype.moveTo = function(x, y)",
							"Point.prototype.clear = function(x, y)",
							"Point.prototype.set = function(fn)",
							"Point.prototype.clone = function()",
							"Point.prototype.sum = function(...args)",
							"Point.prototype.add = function(...args)",
							"Point.prototype.diff = function(arg)",
							"fn = function(other)",
							"Point.prototype.sub = function(...args)",
							"Point.prototype.prod = function(f)",
							"Point.prototype.mul = function(f)",
							"Point.prototype.quot = function(other)",
							"Point.prototype.div = function(other)",
							"Point.prototype.comp = function()",
							"Point.prototype.neg = function()",
							"Point.prototype.distanceSquared = function(other = { x: 0, y: 0 })",
							"Point.prototype.distance = function(other = { x: 0, y: 0 })",
							"Point",
							"Point.prototype.equals = function(other)",
							"Point.prototype.round = function(precision = 0.001, digits, type)",
							"Point.prototype.ceil = function()",
							"Point.prototype.floor = function()",
							"Point.prototype.dot = function(other)",
							"Point.prototype.values = function()",
							"Point.prototype.fromAngle = function(angle, dist = 1.0)",
							"Point.prototype.toAngle = function(deg = false)",
							"Point.prototype.angle = function(other, deg = false)",
							"Point",
							"Point.prototype.rotate = function(angle, origin = { x: 0, y: 0 })",
							"Point",
							" function()",
							"Point.prototype.toString = function(opts = {})",
							"Point",
							"Point.prototype.toSource = function(opts = {})",
							"pad = a =>",
							"c = t =>",
							"Point.prototype.toObject = function(proto = Point.prototype)",
							"Point.prototype.toCSS = function(precision = 0.001, edges = ['left', 'top'])",
							"Point.prototype.toFixed = function(digits)",
							"Point.prototype.isNull = function()",
							"Point.prototype.inside = function(rect)",
							"Point.prototype.transform = function(m, round = true)",
							"Point",
							"Point.prototype.scaleTo = function(minmax)",
							"Point.prototype.normalize = function()",
							"Point",
							"Point",
							"Point.prototype.normal = function()",
							"Point",
							"Point.fromString = str =>",
							"n =>",
							"Point.move = (point, x, y) =>",
							"Point",
							"Point.angle = (point, other, deg = false) =>",
							"Point",
							"Point.inside = (point, rect) =>",
							"Point",
							"Point.sub = (point, other) =>",
							"Point",
							"Point.prod = (a, b) =>",
							"Point",
							"Point.quot = (a, b) =>",
							"Point",
							"Point.equals = (a, b) =>",
							"Point",
							"Point.round = (point, prec, digits, type) =>",
							"Point",
							"Point.fromAngle = (angle, f) =>",
							" (point, ...args) =>",
							"Point",
							"Point.interpolate = (p1, p2, a) =>",
							"Point.toSource = (point, { space = ' ', padding = ' ', separator = ',' }) =>",
							"isPoint = o =>",
							"Point",
							" function(depth, options)",
							"Point.bind = (...args) =>",
							"(acc, name, i) =>",
							"Point",
							" function()",
							" () =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA/AQAAICBnZXRJbWFnZUNvbG9ycyhjb2xvcnN0cikKUXVlcmllcwogIGZldGNoSW1hZ2VzKHdoZXJlID0ge30pCiAgZmV0Y2hJdGVtcyh3aGVyZSwgZmllbGRzLCB0ID0gdHJhbnNmb3JtSXRlbURhdGEpCiAgcmVmcmVzaEl0ZW0oaWQsIHByb3BzKQogIHVwZGF0ZUl0ZW0oaWQsIHByb3BzKQogIGxvYWRJdGVtcyh3aGVyZSA9IHt9KQogIGxvYWRJdGVtKHdoZXJlID0ge30pCiAgZmluZEl0ZW0oaWQpCiAgZ2V0RGVwdGgoaWQpCiAgZ2V0U2libGluZ3MoaWQpCiAgZ2V0Q2hpbGRyZW4oaWQpCiAgZ2V0UGFyZW50cyhpZCkKICBhcGlSZXF1ZXN0KGVuZHBvaW50LCBkYXRhKQAAAAAAAAAAcgcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					297,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/wild-beauty/pages/tree.js",
						"symkeys":
						[
							[
								1295,
								1333
							],
							[
								1469,
								1514
							],
							[
								4566,
								4574
							],
							[
								5103,
								5108
							],
							[
								5378,
								5411
							],
							[
								6668,
								6677
							],
							[
								6788,
								6795
							],
							[
								7057,
								7067
							],
							[
								7261,
								7307
							],
							[
								7873,
								7878
							],
							[
								8017,
								8023
							],
							[
								8174,
								8182
							],
							[
								9555,
								9570
							],
							[
								9577,
								9592
							],
							[
								10163,
								10170
							],
							[
								10280,
								10298
							],
							[
								11127,
								11132
							],
							[
								11785,
								11801
							],
							[
								11950,
								11955
							],
							[
								12013,
								12019
							],
							[
								12062,
								12070
							],
							[
								12228,
								12247
							],
							[
								12330,
								12350
							],
							[
								12399,
								12408
							],
							[
								12428,
								12437
							],
							[
								12657,
								12664
							],
							[
								13509,
								13540
							],
							[
								13599,
								13623
							],
							[
								13731,
								13747
							],
							[
								13817,
								13825
							],
							[
								13884,
								13907
							],
							[
								14028,
								14036
							],
							[
								14368,
								14377
							],
							[
								14640,
								14645
							],
							[
								14706,
								14715
							],
							[
								15341,
								15345
							],
							[
								15814,
								15818
							],
							[
								15962,
								15966
							],
							[
								17195,
								17206
							],
							[
								17667,
								17675
							],
							[
								17826,
								17844
							],
							[
								17859,
								17877
							],
							[
								18034,
								18043
							],
							[
								18121,
								18156
							],
							[
								18396,
								18400
							]
						],
						"symlist":
						[
							"insertParent = (element, newParent) =>",
							"removeParent = (element, pred = e => true) =>",
							"TreePage",
							"() =>",
							"static async getInitialProps(ctx)",
							"(a, b) =>",
							"item =>",
							"function()",
							"({ photos, children, users, key, ...item }) =>",
							"id =>",
							" it =>",
							" item =>",
							" item =>",
							" item =>",
							"item =>",
							"constructor(props)",
							" i =>",
							"checkTagRemove()",
							" e =>",
							" () =>",
							" node =>",
							"componentDidMount()",
							"componentDidUpdate()",
							" event =>",
							" event =>",
							"rect =>",
							" function getNum(elem, name)",
							" function getId(elem)",
							"selectNode(item)",
							"child =>",
							"treeSelEvent(type, arg)",
							" item =>",
							" event =>",
							" e =>",
							" event =>",
							"e =>",
							"p =>",
							"p =>",
							"tend = e =>",
							"render()",
							"onError = event =>",
							"onImage = event =>",
							" event =>",
							"makeTreeSelEvent = name => event =>",
							"e =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAByBwAAUG9pbnQoLi4uYXJncykKUG9pbnQKICBnZXQoKQogIGdldCgpClBvaW50LnByb3RvdHlwZS5tb3ZlID0gZnVuY3Rpb24oeCwgeSkKUG9pbnQucHJvdG90eXBlLm1vdmVUbyA9IGZ1bmN0aW9uKHgsIHkpClBvaW50LnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uKHgsIHkpClBvaW50LnByb3RvdHlwZS5zZXQgPSBmdW5jdGlvbihmbikKUG9pbnQucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24oKQpQb2ludC5wcm90b3R5cGUuc3VtID0gZnVuY3Rpb24oLi4uYXJncykKUG9pbnQucHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uKC4uLmFyZ3MpClBvaW50LnByb3RvdHlwZS5kaWZmID0gZnVuY3Rpb24oYXJnKQogIGZuID0gZnVuY3Rpb24ob3RoZXIpClBvaW50LnByb3RvdHlwZS5zdWIgPSBmdW5jdGlvbiguLi5hcmdzKQpQb2ludC5wcm90b3R5cGUucHJvZCA9IGZ1bmN0aW9uKGYpClBvaW50LnByb3RvdHlwZS5tdWwgPSBmdW5jdGlvbihmKQpQb2ludC5wcm90b3R5cGUucXVvdCA9IGZ1bmN0aW9uKG90aGVyKQpQb2ludC5wcm90b3R5cGUuZGl2ID0gZnVuY3Rpb24ob3RoZXIpClBvaW50LnByb3RvdHlwZS5jb21wID0gZnVuY3Rpb24oKQpQb2ludC5wcm90b3R5cGUubmVnID0gZnVuY3Rpb24oKQpQb2ludC5wcm90b3R5cGUuZGlzdGFuY2VTcXVhcmVkID0gZnVuY3Rpb24ob3RoZXIgPSB7IHg6IDAsIHk6IDAgfSkKUG9pbnQucHJvdG90eXBlLmRpc3RhbmNlID0gZnVuY3Rpb24ob3RoZXIgPSB7IHg6IDAsIHk6IDAgfSkKUG9pbnQKUG9pbnQucHJvdG90eXBlLmVxdWFscyA9IGZ1bmN0aW9uKG90aGVyKQpQb2ludC5wcm90b3R5cGUucm91bmQgPSBmdW5jdGlvbihwcmVjaXNpb24gPSAwLjAwMSwgZGlnaXRzLCB0eXBlKQpQb2ludC5wcm90b3R5cGUuY2VpbCA9IGZ1bmN0aW9uKCkKUG9pbnQucHJvdG90eXBlLmZsb29yID0gZnVuY3Rpb24oKQpQb2ludC5wcm90b3R5cGUuZG90ID0gZnVuY3Rpb24ob3RoZXIpClBvaW50LnByb3RvdHlwZS52YWx1ZXMgPSBmdW5jdGlvbigpClBvaW50LnByb3RvdHlwZS5mcm9tQW5nbGUgPSBmdW5jdGlvbihhbmdsZSwgZGlzdCA9IDEuMCkKUG9pbnQucHJvdG90eXBlLnRvQW5nbGUgPSBmdW5jdGlvbihkZWcgPSBmYWxzZSkKUG9pbnQucHJvdG90eXBlLmFuZ2xlID0gZnVuY3Rpb24ob3RoZXIsIGRlZyA9IGZhbHNlKQpQb2ludApQb2ludC5wcm90b3R5cGUucm90YXRlID0gZnVuY3Rpb24oYW5nbGUsIG9yaWdpbiA9IHsgeDogMCwgeTogMCB9KQpQb2ludAogIGZ1bmN0aW9uKCkKUG9pbnQucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24ob3B0cyA9IHt9KQpQb2ludApQb2ludC5wcm90b3R5cGUudG9Tb3VyY2UgPSBmdW5jdGlvbihvcHRzID0ge30pClBvaW50LnByb3RvdHlwZS50b09iamVjdCA9IGZ1bmN0aW9uKHByb3RvID0gUG9pbnQucHJvdG90eXBlKQpQb2ludC5wcm90b3R5cGUudG9DU1MgPSBmdW5jdGlvbihwcmVjaXNpb24gPSAwLjAwMSwgZWRnZXMgPSBbJ2xlZnQnLCAndG9wJ10pClBvaW50LnByb3RvdHlwZS50b0ZpeGVkID0gZnVuY3Rpb24oZGlnaXRzKQpQb2ludC5wcm90b3R5cGUuaXNOdWxsID0gZnVuY3Rpb24oKQpQb2ludC5wcm90b3R5cGUuaW5zaWRlID0gZnVuY3Rpb24ocmVjdCkKUG9pbnQucHJvdG90eXBlLnRyYW5zZm9ybSA9IGZ1bmN0aW9uKG0sIHJvdW5kID0gdHJ1ZSkKUG9pbnQKUG9pbnQucHJvdG90eXBlLnNjYWxlVG8gPSBmdW5jdGlvbihtaW5tYXgpClBvaW50LnByb3RvdHlwZS5ub3JtYWxpemUgPSBmdW5jdGlvbigpClBvaW50ClBvaW50ClBvaW50LnByb3RvdHlwZS5ub3JtYWwgPSBmdW5jdGlvbigpClBvaW50ClBvaW50ClBvaW50ClBvaW50ClBvaW50ClBvaW50ClBvaW50ClBvaW50ClBvaW50ClBvaW50ClBvaW50CiAgZnVuY3Rpb24oZGVwdGgsIG9wdGlvbnMpClBvaW50CiAgZnVuY3Rpb24oKQAAAAAAAAAA4wAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "/home/roman/wild-beauty/pages/tree.js",
			"settings":
			{
				"buffer_size": 25520,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAABSQAAAAAAAAJJAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAANQiAAAAAAAA1SIAAAAAAAAAAAAA1SIAAAAAAADWIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1CIAAAAAAADUIgAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"left_delete",
					null,
					"AQAAAM8iAAAAAAAAzyIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA0CIAAAAAAADQIgAAAAAAAAAAAAAAgEZA"
				],
				[
					28,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAANAfAAAAAAAA0h8AAAAAAAAAAAAAkx8AAAAAAACVHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0B8AAAAAAACTHwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/geom/point.js",
			"settings":
			{
				"buffer_size": 11103,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					14,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAPUoAAAAAAAA9ygAAAAAAAAAAAAA4CgAAAAAAADiKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4CgAAAAAAAD1KAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAABMpAAAAAAAAFSkAAAAAAAAAAAAAAikAAAAAAAAEKQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAikAAAAAAAATKQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "pages/tree.js",
			"settings":
			{
				"buffer_size": 25520,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					12,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAHwqAAAAAAAAfSoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfCoAAAAAAAB8KgAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAfSoAAAAAAAB9KgAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACsYwAAaW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgRWxlbWVudCwgUG9pbnQsIFJlY3QsIE1hdHJpeCwgVGltZXIsIFNWRywgVFJCTCwgQWxpZ24sIFBvaW50TGlzdCB9IGZyb20gIi4uL2xpYi9kb20uanMiOwppbXBvcnQgeyBnZXRBUEkgfSBmcm9tICIuLi9zdG9yZXMvYXBpLmpzIjsKaW1wb3J0IFV0aWwgZnJvbSAiLi4vbGliL3V0aWwuanMiOwppbXBvcnQgeyBTdmdPdmVybGF5IH0gZnJvbSAiLi4vbGliL3N2Zy9vdmVybGF5LmpzIjsKaW1wb3J0IHsgdG9KUyB9IGZyb20gIm1vYngiOwppbXBvcnQgeyBpbmplY3QsIG9ic2VydmVyIH0gZnJvbSAibW9ieC1yZWFjdCI7CmltcG9ydCB7IFNpemVkQXNwZWN0UmF0aW9Cb3ggfSBmcm9tICIuLi9jb21wb25lbnRzL3NpbXBsZS9hc3BlY3RCb3guanMiOwppbXBvcnQgeyBJdGVtVmlldyB9IGZyb20gIi4uL2NvbXBvbmVudHMvdmlld3MvaXRlbVZpZXcuanMiOwppbXBvcnQgeyBUcmVlVmlldyB9IGZyb20gIi4uL2NvbXBvbmVudHMvdmlld3MvdHJlZVZpZXcuanMiOwppbXBvcnQgeyBMYXlvdXQgfSBmcm9tICIuLi9jb21wb25lbnRzL2xheW91dC5qcyI7CmltcG9ydCB7IGFjdGlvbiB9IGZyb20gIm1vYngiOwppbXBvcnQgeyBnZXRPckNyZWF0ZVN0b3JlIH0gZnJvbSAiLi4vc3RvcmVzL2NyZWF0ZVN0b3JlLmpzIjsKaW1wb3J0IHsgdHJrbCB9IGZyb20gIi4uL2xpYi90cmtsLmpzIjsKaW1wb3J0IHsgR3JhcGggfSBmcm9tICIuLi9saWIvZmQtZ3JhcGguanMiOwppbXBvcnQgeyBtYWtlSXRlbVRvT3B0aW9uLCBmaW5kSW5UcmVlLCB0cmVlVG9HcmFwaCB9IGZyb20gIi4uL3N0b3Jlcy9mdW5jdGlvbnMuanMiOwppbXBvcnQgeyBsYXp5SW5pdGlhbGl6ZXIgfSBmcm9tICIuLi9saWIvbGF6eUluaXRpYWxpemVyLmpzIjsKaW1wb3J0IERyb3Bkb3duVHJlZVNlbGVjdCBmcm9tICJyZWFjdC1kcm9wZG93bi10cmVlLXNlbGVjdCI7CmltcG9ydCB7IFRyZWVHcmFwaCB9IGZyb20gIi4uL2NvbXBvbmVudHMvdmlld3MvdHJlZUdyYXBoLmpzIjsKaW1wb3J0IEFsZWEgZnJvbSAiLi4vbGliL2FsZWEuanMiOwoKLyoKY29uc3QgcHJuZyA9IChzZWVkKSA9PiBmdW5jdGlvbigpIHsKICB2YXIgcm5nID0gbmV3IEFsZWEoc2VlZCk7CiAgdmFyIG4gPSAwOwogICAgY29uc29sZS5sb2coYG5ldyBBbGVhKHNlZWQpOmAscm5nKTsKCnJldHVybiBybmc7CiAgcmV0dXJuIGZ1bmN0aW9uKCkgewogICAgbGV0IHIgPSBybmcoKTsKICAgIGNvbnNvbGUubG9nKGBhbGVhWyR7bisrfV06YCxyKTsKICAgIHJldHVybiByOwogIH0KfSgpOwoqLwpjb25zdCBpbnNlcnRQYXJlbnQgPSAoZWxlbWVudCwgbmV3UGFyZW50KSA9PiB7CiAgY29uc3QgcCA9IGVsZW1lbnQucGFyZW50RWxlbWVudDsKICBwLnJlbW92ZUNoaWxkKGVsZW1lbnQpOwogIHAuYXBwZW5kQ2hpbGQobmV3UGFyZW50KTsKICBuZXdQYXJlbnQuYXBwZW5kQ2hpbGQoZWxlbWVudCk7Cn07Cgpjb25zdCByZW1vdmVQYXJlbnQgPSAoZWxlbWVudCwgcHJlZCA9IGUgPT4gdHJ1ZSkgPT4gewogIGNvbnN0IHAgPSBlbGVtZW50LnBhcmVudEVsZW1lbnQ7CiAgY29uc3QgcHAgPSBwLnBhcmVudEVsZW1lbnQ7CiAgaWYocHJlZChwKSkgewogICAgcHAucmVtb3ZlQ2hpbGQocCk7CiAgICBwcC5hcHBlbmRDaGlsZChlbGVtZW50KTsKICB9Cn07Ci8qCmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVHcmFwaChzdmcsIG5vZGVUeXBlID0gU1ZHKSB7CiAgbGV0IGQgPSBub2RlVHlwZS5jcmVhdGUoImRlZnMiLCB7fSwgc3ZnKTsKICBsZXQgbGcgPSBub2RlVHlwZS5jcmVhdGUoImxpbmVhckdyYWRpZW50IiwgeyBpZDogImxnMSIsIHgxOiAwLCB5MTogMCwgeDI6IDAsIHkyOiAxMDAsIHNwcmVhZE1ldGhvZDogInBhZCIgfSwgZCk7CiAgbm9kZVR5cGUuY3JlYXRlKCJzdG9wIiwgeyBvZmZzZXQ6IDAsIHN0b3BDb2xvcjogIiMwMGNjMDAiLCBzdG9wT3BhY2l0eTogMSB9LCBsZyk7CiAgbm9kZVR5cGUuY3JlYXRlKCJzdG9wIiwgeyBvZmZzZXQ6IDEwMCwgc3RvcENvbG9yOiAiIzAwNjYwMCIsIHN0b3BPcGFjaXR5OiAxIH0sIGxnKTsKCiAgc3ZnID0gbm9kZVR5cGUuY3JlYXRlKCJnIiwge30sIHN2Zyk7CgogIGxldCBzdHJva2VXaWR0aCA9IDEuMTsKCiAgbGV0IGcgPSBuZXcgR3JhcGgoewogICAgb3JpZ2luOiBuZXcgUG9pbnQoMCwgMCksCiAgICBncmF2aXRhdGVfdG9fb3JpZ2luOiB0cnVlLAogICAgc3BhY2luZzogMTIsCiAgICB0aW1lc3RlcDogMzAwLAogICAgcHJuZzogcHJuZygxMzM5KSwKICAgIG9uUmVuZGVyR3JhcGg6IGdyYXBoID0+IHsKICAgICAgbGV0IGJiID0gbmV3IFJlY3Qoc3ZnLmdldEJCb3goKSkucm91bmQoKTsKICAgICAgbGV0IGNsaWVudCA9IG5vZGVUeXBlLnJlY3Qoc3ZnLnBhcmVudEVsZW1lbnQpOwogICAgICBsZXQgdHJibCA9IG5ldyBUUkJMKDUwLCAyMCwgNTAsIDIwKTsKICAgICAgbGV0IGFzcGVjdCA9IGJiLmFzcGVjdCgpOwoKICAgICAgY2xpZW50ID0gY2xpZW50Lmluc2V0KDIwMCk7CgogICAgICBsZXQgbSA9IE1hdHJpeC5nZXRBZmZpbmVUcmFuc2Zvcm0oYmIsIGNsaWVudCk7CgogICAgICBpZihtLnh4ID4gbS55eSkgbS5zY2FsZShtLnl5IC8gbS54eCwgMSk7CiAgICAgIGxldCB0ID0gbS50b1NWRygpOwogICAgICBub2RlVHlwZS5hdHRyKHN2ZywgeyB0cmFuc2Zvcm06IHQgfSk7CiAgICAgIGJiID0gbmV3IFJlY3Qoc3ZnLmdldEJCb3goKSk7CiAgICAgIGxldCBnY2VudGVyID0gYmIuY2VudGVyOwogICAgICBsZXQgbW92ZSA9IFBvaW50LmRpZmYobm9kZVR5cGUucmVjdChzdmcucGFyZW50RWxlbWVudCkuY2VudGVyLCBnY2VudGVyKTsKCiAgICAgIG0udHJhbnNsYXRlKG1vdmUueCAvIG0ueHgsIDApOwogICAgICBub2RlVHlwZS5hdHRyKHN2ZywgeyB0cmFuc2Zvcm06IG0udG9TVkcoKSB9KTsKICAgICAgdCA9IGAgdHJhbnNsYXRlKCR7bW92ZS54fSwke21vdmUueX0pIGAgKyB0OwoKICAgICAgbGV0IGdiYiA9IGdyYXBoLmdldEJCb3goKTsKICAgICAgbGV0IHJiYiA9IG5ldyBSZWN0KGdiYik7CiAgICAgIGxldCBuYmIgPSBuZXcgUmVjdChyYmIpOwoKICAgICAgUmVjdC5hbGlnbihuYmIsIGNsaWVudCwgQWxpZ24uQ0VOVEVSIHwgQWxpZ24uTUlERExFKTsKICAgICAgY29uc29sZS5sb2coIm5iYjoiLCBuYmIpOwogICAgICBub2RlVHlwZS5jcmVhdGUoImNpcmNsZSIsIHsgY3g6IHJiYi5jZW50ZXIueCwgY3k6IHJiYi5jZW50ZXIueSwgcjogMzAsIHN0cm9rZTogIiNmMDAiLCBzdHJva2VXaWR0aDogMiwgZmlsbDogIm5vbmUiIH0sIHN2Zyk7CiAgICB9LAogICAgb25VcGRhdGVOb2RlOiAobm9kZSwgaSkgPT4gewogICAgICBpZighbm9kZS5lbGVtZW50KSB7CiAgICAgICAgbm9kZS5lbGVtZW50ID0gbm9kZVR5cGUuY3JlYXRlKAogICAgICAgICAgImciLAogICAgICAgICAgewogICAgICAgICAgICBpZDogYG5vZGUtJHtpfWAsCiAgICAgICAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZSgke25vZGUueH0sJHtub2RlLnl9KWAsCiAgICAgICAgICAgIGZpbGw6ICIjMDBmIiwKICAgICAgICAgICAgc3Ryb2tlOiAiIzAwMCIsCiAgICAgICAgICAgIHN0cm9rZVdpZHRoOiAxCiAgICAgICAgICB9LAogICAgICAgICAgc3ZnCiAgICAgICAgKTsKICAgICAgICBub2RlVHlwZS5jcmVhdGUoCiAgICAgICAgICAicmVjdCIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHg6IC0xNiwKICAgICAgICAgICAgeTogLTE3LAogICAgICAgICAgICB3aWR0aDogMzIsCiAgICAgICAgICAgIGhlaWdodDogMzIsCiAgICAgICAgICAgIHJ4OiAxLjUsCiAgICAgICAgICAgIHJ5OiAxLjUsCiAgICAgICAgICAgIGZpbGw6ICIjZmZkZDAwIiwKICAgICAgICAgICAgc3Ryb2tlOiAiIzAwMCIsCiAgICAgICAgICAgIHN0cm9rZVdpZHRoCiAgICAgICAgICB9LAogICAgICAgICAgbm9kZS5lbGVtZW50CiAgICAgICAgKTsKICAgICAgICBub2RlVHlwZS5jcmVhdGUoInRzcGFuIiwgeyBhbGlnbm1lbnRCYXNlbGluZTogIm1pZGRsZSIsIHRleHQ6IG5vZGUubGFiZWwgfSwgbm9kZVR5cGUuY3JlYXRlKCJ0ZXh0IiwgeyBmb250U2l6ZTogMTAsIGZpbGw6ICIjMDAwIiwgc3Ryb2tlOiAibm9uZSIsIHRleHRBbmNob3I6ICJtaWRkbGUiIH0sIG5vZGUuZWxlbWVudCkpOwogICAgICB9IGVsc2Ugbm9kZVR5cGUuYXR0cihub2RlLmVsZW1lbnQsIHsgdHJhbnNmb3JtOiBgdHJhbnNsYXRlKCR7bm9kZS54fSwke25vZGUueX0pYCB9KTsKICAgIH0sCiAgICBvblVwZGF0ZUVkZ2U6IChlZGdlLCBpKSA9PiB7CiAgICAgIGNvbnN0IHsgeDEsIHkxLCB4MiwgeTIgfSA9IGVkZ2U7CiAgICAgIGlmKCFlZGdlLmVsZW1lbnQpIGVkZ2UuZWxlbWVudCA9IG5vZGVUeXBlLmNyZWF0ZSgibGluZSIsIHsgaWQ6IGBlZGdlLSR7aX1gLCB4MSwgeTEsIHgyLCB5Miwgc3Ryb2tlOiAiIzAwMCIsIHN0cm9rZVdpZHRoIH0sIHN2Zyk7CiAgICAgIGVsc2Ugbm9kZVR5cGUuYXR0cihlZGdlLmVsZW1lbnQsIHsgeDEsIHkxLCB4MiwgeTIgfSk7CiAgICB9CiAgfSk7CgogIHRyZWVUb0dyYXBoKGcsIGhpZXIpOwoKICByZXR1cm4gZzsKfSovCgpAaW5qZWN0KCJyb290U3RvcmUiKQpAb2JzZXJ2ZXIKY2xhc3MgVHJlZVBhZ2UgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQgewogIHN0YXRlID0gewogICAgekluZGV4OiA5OTk5OSwKICAgIHRyZWU6IHt9LAogICAgcGFyZW50SWRzOiBbXSwKICAgIHZpZXc6ICJsaXN0IiwKICAgIGN1cnJlbnRJdGVtOiBudWxsCiAgfTsKICBzdGF0aWMgQVBJID0gZ2V0QVBJKCJodHRwOi8vd2lsZC1iZWF1dHkuaGVyb2t1YXBwLmNvbS92MS9ncmFwaHFsIiwgewogICAgc2VjcmV0OiAiUlVDWE9aWmp3V1hlTnhPT3pOWkJwdFB4Q05sMThIIgogIH0pOwoKICBzdGF0aWMgZmllbGRzID0gWyJpZCIsICJ0eXBlIiwgInBhcmVudF9pZCIsICJwYXJlbnQgeyBpZCB0eXBlIGRhdGEgfSIsICJjaGlsZHJlbiB7IGlkIHR5cGUgZGF0YSB9IiwgImRhdGEiLCAicGhvdG9zIHsgcGhvdG8geyBpZCB3aWR0aCBoZWlnaHQgZmlsZXNpemUgY29sb3JzIG9yaWdpbmFsX25hbWUgfSB9IiwgInVzZXJzIHsgdXNlciB7IGlkIHVzZXJuYW1lIGxhc3Rfc2VlbiB9IH0iXTsKCiAgc3ZnUmVmID0gdHJrbCgpOwoKICBzdmcgPSBsYXp5SW5pdGlhbGl6ZXIoKCkgPT4KICAgIFNWRy5jcmVhdGUoCiAgICAgICJzdmciLAogICAgICB7CiAgICAgICAgaWQ6ICJncmFwaC1zdmciLAogICAgICAgIHdpZHRoOiB3aW5kb3cuaW5uZXJXaWR0aCwKICAgICAgICBoZWlnaHQ6IHdpbmRvdy5pbm5lckhlaWdodCwKICAgICAgICBzdHlsZTogInBvc2l0aW9uOiBhYnNvbHV0ZTsgbGVmdDogMDsgdG9wOiAwOyB6LWluZGV4OiAxMDAwMDAxOyBwb2ludGVyLWV2ZW50czogbm9uZTsiCiAgICAgIH0sCiAgICAgIGRvY3VtZW50LmJvZHkKICAgICkKICApOwoKICBzdGF0aWMgYXN5bmMgZ2V0SW5pdGlhbFByb3BzKGN0eCkgewogICAgY29uc3QgeyBxdWVyeSwgcGFyYW1zIH0gPSAoY3R4ICYmIGN0eC5yZXEpIHx8IHt9OwogICAgY29uc29sZS5sb2coIlRyZWVQYWdlLmdldEluaXRpYWxQcm9wcyAiLCB7IHF1ZXJ5LCBwYXJhbXMgfSk7CiAgICBjb25zdCByb290U3RvcmUgPSBjdHgubW9ieFN0b3JlWyJSb290U3RvcmUiXTsKCiAgICBsZXQgZmllbGRzID0gWyJpZCIsICJuYW1lIiwgInR5cGUiLCAicGFyZW50X2lkIiwgInBhcmVudCB7IGlkIH0iLCAib3JkZXIiLCAiY2hpbGRyZW4ob3JkZXJfYnk6IHtvcmRlcjogYXNjfSkgeyBpZCBuYW1lIHR5cGUgfSIsICJkYXRhIiwgInBob3RvcyB7IHBob3RvIHsgaWQgY29sb3JzIH0gfSIsICJ1c2VycyB7IHVzZXIgeyBpZCB9IH0iLCAiY2hpbGRyZW5fYWdncmVnYXRlIHsgYWdncmVnYXRlIHtjb3VudCB9IH0iXTsKICAgIGxldCBpdGVtcyA9IGF3YWl0IHJvb3RTdG9yZS5hcGkubGlzdCgiaXRlbXMiLCBmaWVsZHMsIHsgd2hlcmU6ICJ7dmlzaWJsZToge19lcTogdHJ1ZX19LG9yZGVyX2J5OntwYXJlbnQ6IHtpZDogYXNjfSwgb3JkZXI6IGFzYywgY3JlYXRlZDogYXNjfSIgfSk7CgogICAgLy8gICBjb25zb2xlLmxvZygnVHJlZS5nZXRJbml0aWFsUHJvcHMgaXRlbXM9JywgaXRlbXMpOwogICAgLyogICAgICBsZXQgaXRlbXM7CiAgICBpZihwYXJhbXMgJiYgcGFyYW1zLmlkICE9PSB1bmRlZmluZWQpIHsKICAgICAgbGV0IGlkID0gcGFyc2VJbnQocGFyYW1zLmlkKTsKICAgICAgY29uc3QgbmFtZSA9IHBhcmFtcy5pZDsKICAgICAgaWYoaXNOYU4oaWQpIHx8IHR5cGVvZiBpZCAhPSAibnVtYmVyIikgaWQgPSAtMTsKICAgICAgY29uc3QgcSA9IGBxdWVyeSBNeVF1ZXJ5IHsgaXRlbXMod2hlcmU6IHsgX29yOiBbIHtpZDoge19lcTogJHtpZH19fSwge25hbWU6e19lcToiJHtuYW1lfSJ9fV0gfSkgeyBpZCBkYXRhIHBob3RvcyB7IHBob3RvIHsgZmlsZXNpemUgY29sb3JzIGhlaWdodCB3aWR0aCBpZCBvZmZzZXQgdXBsb2FkZWQgb3JpZ2luYWxfbmFtZSB9IH0gcGFyZW50X2lkIH0gfWA7CiAgICAgIGxldCByZXNwb25zZSA9IGF3YWl0IFRyZWVQYWdlLkFQSShxKTsKICAgICAgaXRlbXMgPSByZXNwb25zZS5pdGVtcyB8fCBbXTsKICAgICAgY29uc29sZS5sb2coIml0ZW06ICIsIGl0ZW1zWzBdKTsKICAgIH0gZWxzZSB7CiAgICAgIGl0ZW1zID0gYXdhaXQgVHJlZVBhZ2UuQVBJLmxpc3QoIml0ZW1zIiwgVHJlZVBhZ2UuZmllbGRzKTsKICAgIH0KKi8KICAgIGl0ZW1zID0gaXRlbXMuc29ydCgoYSwgYikgPT4gYS5pZCAtIGIuaWQpOwogICAgaWYocm9vdFN0b3JlLml0ZW1zICYmIHJvb3RTdG9yZS5pdGVtcy5jbGVhcikgcm9vdFN0b3JlLml0ZW1zLmNsZWFyKCk7CiAgICBpdGVtcyA9IGl0ZW1zLm1hcChpdGVtID0+IHJvb3RTdG9yZS5uZXdJdGVtKGl0ZW0pKTsKCiAgICBsZXQgcm9vdEl0ZW0gPSByb290U3RvcmUuZ2V0VHJlZSgxKTsKCiAgICAvLyAgbGV0IHJvb3QgPSByb290U3RvcmUuZ2V0SXRlbShyb290SXRlbS5pZCk7CiAgICBsZXQgZyA9IG5ldyBHcmFwaCh7CiAgICAgIG9yaWdpbjogbmV3IFBvaW50KDAsIDApLAogICAgICBncmF2aXRhdGVfdG9fb3JpZ2luOiB0cnVlLAogICAgICBzcGFjaW5nOiAxMiwKICAgICAgdGltZXN0ZXA6IDMwMCwKICAgICAgcHJuZzogKGZ1bmN0aW9uKCkgewogICAgICAgIHZhciBybmcgPSBuZXcgQWxlYShxdWVyeSA/IHF1ZXJ5LnNlZWQgOiAxMzQxKTsKICAgICAgICBjb25zb2xlLmxvZygicm5nOiIsIHJuZyk7CiAgICAgICAgcmV0dXJuIHJuZzsKICAgICAgfSkoKQogICAgfSk7CiAgICBsZXQgaXRlciA9IE9iamVjdC5mcm9tRW50cmllcyhbCiAgICAgIC4uLnJvb3RTdG9yZS5lbnRyaWVzKCh7IHBob3RvcywgY2hpbGRyZW4sIHVzZXJzLCBrZXksIC4uLml0ZW0gfSkgPT4gewogICAgICAgIGl0ZW0gPSB0b0pTKGl0ZW0pOwogICAgICAgIGlmKCFpdGVtLnR5cGUpIGRlbGV0ZSBpdGVtLnR5cGU7CiAgICAgICAgaWYoIVV0aWwuaXNFbXB0eShpdGVtLmRhdGEpKSBkZWxldGUgaXRlbS5kYXRhOwogICAgICAgIHJldHVybiBpdGVtOwogICAgICB9KQogICAgXSk7CiAgICBmb3IobGV0IGtleSBpbiBpdGVyKSB7CiAgICAgIGxldCB7IHBhcmVudCwgY2hpbGRJZHMsIGNoaWxkcmVuLCAuLi5pdGVtIH0gPSBpdGVyW2tleV07CiAgICAgIGxldCBwYXJlbnRfaWQgPSBwYXJlbnQgJiYgcGFyZW50LmlkOwogICAgICBsZXQgZGVwdGggPSAoKGl0ZXJbcGFyZW50X2lkXSAmJiBpdGVyW3BhcmVudF9pZF0uZGVwdGgpIHx8IDApICsgMTsKICAgICAgbGV0IHA7CiAgICAgIGlmKHBhcmVudF9pZCA+IDApIHsKICAgICAgICBpdGVyW2tleV0ucGFyZW50ID0gaXRlcltwYXJlbnRfaWRdOwogICAgICB9CiAgICAgIGl0ZW0gPSBpdGVyW2tleV07CiAgICAgIGl0ZW0uZGVwdGggPSBkZXB0aDsKICAgICAgaWYoY2hpbGRJZHMubGVuZ3RoKSBpdGVtLmNoaWxkcmVuID0gY2hpbGRJZHMubWFwKGlkID0+IGl0ZXJbaWRdKTsKCiAgICAgIGlmKGl0ZW0uZGF0YSA9PT0gbnVsbCB8fCBVdGlsLmlzRW1wdHkoaXRlbS5kYXRhKSkgZGVsZXRlIGl0ZW0uZGF0YTsKICAgIH0KCiAgICBsZXQgcm9vdCA9IHJvb3RTdG9yZS5nZXRUcmVlKHJvb3RJdGVtLmlkLCBpdCA9PiBVdGlsLmZpbHRlck91dEtleXModG9KUyhpdCksIFsiY2hpbGRJZHMiLCAidXNlcnMiXSkpOwoKICAgICBjb25zb2xlLmxvZygiZzoiLCBnKTsKICAgICBjb25zb2xlLmxvZygicm9vdDoiLCB0b0pTKHJvb3QpKTsKCiAgICB0cmVlVG9HcmFwaChnLCByb290LCBpdGVtID0+IHsKICAgICAgbGV0IHsgY2hpbGRyZW4sIHBhcmVudCwgdXNlcnMsIHBob3RvcywgLi4ucmVzdE9mSXRlbSB9ID0gaXRlbTsKICAgICAgbGV0IHBhcmVudF9pZCA9IHBhcmVudCAmJiBwYXJlbnQuaWQ7CiAgICAgIGlmKHBhcmVudF9pZCAhPT0gdW5kZWZpbmVkKSBpdGVtLnBhcmVudF9pZCA9IHBhcmVudF9pZDsKICAgICAgbGV0IG51bUNoaWxkcmVuID0gY2hpbGRyZW4gPyBjaGlsZHJlbi5sZW5ndGggOiAwOwogICAgICBsZXQgb3V0cHV0ID0geyBpdGVtS2V5czogT2JqZWN0LmtleXMoaXRlbSksIHBhcmVudF9pZCwgcmVzdE9mSXRlbSB9OwogICAgICBpZihudW1DaGlsZHJlbikgaXRlbS5udW1fY2hpbGRyZW4gPSBudW1DaGlsZHJlbjsKICAgICAgaWYoaXRlbS5waG90b3MgJiYgaXRlbS5waG90b3NbMF0gJiYgaXRlbS5waG90b3NbMF0ucGhvdG8pIHsKICAgICAgICBsZXQgcGhvdG8gPSBpdGVtLnBob3Rvc1swXS5waG90bzsKICAgICAgICBsZXQgY29sb3JzID0gVXRpbC5qc29uVG9PYmplY3QocGhvdG8uY29sb3JzKTsKICAgICAgICBsZXQgY29sb3IgPSBPYmplY3Qua2V5cyhjb2xvcnMpWzBdOwogICAgICAgIGNvbnNvbGUubG9nKCJjb2xvcjoiLCBjb2xvcik7CiAgICAgICAgaXRlbS5jb2xvciA9IGNvbG9yOwogICAgICB9CgogICAgICAvLyBpZighbnVtQ2hpbGRyZW4gJiYgIShpdGVtLnR5cGUgJiYgaXRlbS50eXBlLmVuZHNXaXRoKCJjYXRlZ29yeSIpKSkgcmV0dXJuIGZhbHNlOwogICAvL2NvbnNvbGUubG9nKCJpdGVtOiAiLCBVdGlsLmZpbHRlck91dEtleXMoaXRlbSwgWyJjaGlsZHJlbiIsICJudW1fY2hpbGRyZW4iLCAicGFyZW50Il0pKTsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9KTsKCiAgICB3aGlsZSghZy5kb25lX3JlbmRlcmluZykgZy5jaGVja1JlZHJhdygpOwoKICAgIGcucm91bmRBbGwoMC4wMDMpOwoKICAgIC8vY29uc29sZS5sb2coImc6IiwgZyk7CgogICAgbGV0IGJib3ggPSBQb2ludExpc3QuYmJveChnLm5vZGVzKTsKICAgIGxldCByZWN0ID0gbmV3IFJlY3QoYmJveCk7CiAgICBsZXQgY2VudGVyID0gcmVjdC5jZW50ZXI7CgogICAgZy50cmFuc2xhdGUoLWNlbnRlci54LCAtY2VudGVyLnkpOwoKICAgIGNvbnNvbGUubG9nKCJnLmJib3g6ICIsIGJib3gpOwogICAgY29uc29sZS5sb2coImcucmVjdDogIiwgcmVjdCk7CiAgICBjb25zb2xlLmxvZygiY2VudGVyOiAiLCBjZW50ZXIpOwogICAgLy9jb25zb2xlLmxvZygiZzogIiwgZy5zZXJpYWxpemUoKSk7CgogICAgLyogbGV0IHBsID0gZy5wb2ludHM7CgoKCgoqLwogICAgLy8gY29uc29sZS5sb2coInJvb3Q6ICIsIHJvb3QpOwoKICAgIGxldCBub2RlcyA9IFsKICAgICAgLi4uVXRpbC53YWxrVHJlZSgKICAgICAgICByb290LAogICAgICAgIGl0ZW0gPT4gdHJ1ZSwKICAgICAgICBpdGVtID0+IHsKICAgICAgICAgIGRlbGV0ZSBpdGVtLnBhcmVudDsKICAgICAgICAgIHJldHVybiBpdGVtOwogICAgICAgIH0KICAgICAgKQogICAgXTsKCiAgICBmb3IobGV0IG4gb2Ygbm9kZXMpIHsKICAgICAgbGV0IG5vZGUgPSBVdGlsLmZpbHRlck91dEtleXMobiwgWyJjaGlsZHJlbiIsICJwYXJlbnQiXSk7CiAgICAgIGNvbnNvbGUubG9nKCJ3YWxrVHJlZSBub2RlPSIsIFV0aWwuaW5zcGVjdChub2RlLCB7IG5ld2xpbmU6ICIiLCBpbmRlbnQ6ICIiLCBzcGFjaW5nOiAiICIgfSkpOwogICAgfQoKICAgIC8vICBsZXQgbm9kZXMgPSBUcmVlVmlldyh7IHRyZWU6IHJvb3QgfSwgZmFsc2UpOwogICAgLyoKICAgIGZvcihsZXQgbm9kZSBvZiBVdGlsLndhbGtUcmVlKG5vZGVzWzBdKSkgewogICAgICAvL2NvbnNvbGUubG9nKCJUcmVlLmNvbnN0cnVjdG9yIG5vZGU6ICIsIFV0aWwuaW5zcGVjdChVdGlsLmZpbHRlck91dEtleXMobm9kZSwgWyJjaGlsZHJlbiIsICJrZXkiXSksIHsgbmV3bGluZTogIiIsIGluZGVudDogIiIsIHNwYWNpbmc6ICIgIiB9KSk7CiAgICB9Ki8KICAgIGl0ZW1zID0gaXRlbXMuZmlsdGVyKGl0ZW0gPT4gaXRlbS5waG90b3MubGVuZ3RoID4gMCk7CgogICAgcmV0dXJuIHsgcGFyYW1zLCBpdGVtcyAvKiwgdHJlZTogcm9vdCwgbm9kZXMqLywgZ3JhcGg6IGcuc2VyaWFsaXplKCkgfTsKICB9CgogIGNvbnN0cnVjdG9yKHByb3BzKSB7CiAgICBzdXBlcihwcm9wcyk7CiAgICB0aGlzLmFwaSA9IGdldEFQSShnbG9iYWwud2luZG93ICYmIC8xOTJcLjE2OC8udGVzdCh3aW5kb3cubG9jYXRpb24uaHJlZikgPyAiaHR0cDovL3dpbGQtYmVhdXR5Lmhlcm9rdWFwcC5jb20vdjEvZ3JhcGhxbCIgOiAiL3YxL2dyYXBocWwiLCB7IHNlY3JldDogIlJVQ1hPWlpqd1dYZU54T096TlpCcHRQeENObDE4SCIgfSk7CiAgICBjb25zdCB7IHJvb3RTdG9yZSB9ID0gdGhpcy5wcm9wczsKCiAgICAvKiAgICB0aGlzLnRyZWUgPSB0aGlzLnByb3BzLnRyZWU7CiAgICAgKi8KCiAgICBpZihnbG9iYWwud2luZG93KSB7CiAgICAgIHdpbmRvdy5hcGkgPSB0aGlzLmFwaTsKICAgICAgd2luZG93LnBhZ2UgPSB0aGlzOwogICAgICB3aW5kb3cucnMgPSByb290U3RvcmU7CiAgICAgIHdpbmRvdy5zdG9yZXMgPSBnZXRPckNyZWF0ZVN0b3JlKCk7CiAgICB9CiAgICByb290U3RvcmUuaXRlbXMuY2xlYXIoKTsKICAgIHRoaXMudHJlZSA9IHJvb3RTdG9yZS5nZXRJdGVtKHJvb3RTdG9yZS5yb290SXRlbUlkLCBtYWtlSXRlbVRvT3B0aW9uKCkpOwogICAgaWYodGhpcy5wcm9wcy5wYXJhbXM/LmlkICE9PSB1bmRlZmluZWQpIHsKICAgICAgdGhpcy5zdGF0ZS52aWV3ID0gIml0ZW0iOwogICAgICB0aGlzLnN0YXRlLml0ZW1JZCA9IHBhcnNlSW50KHRoaXMucHJvcHMucGFyYW1zLmlkKTsKICAgIH0gZWxzZSBpZih0aGlzLnRyZWUpIHsKICAgICAgdmFyIGl0ZW0gPSBmaW5kSW5UcmVlKHRoaXMudHJlZSwgIk9iamVjdHMiKTsKICAgICAgaXRlbS5jaGVja2VkID0gdHJ1ZTsKICAgICAgVXRpbC50cmF2ZXJzZVRyZWUoaXRlbSwgaSA9PiB0aGlzLnN0YXRlLnBhcmVudElkcy5wdXNoKGkuaWQpKTsKICAgIH0KICAgIGxldCBhID0gbmV3IFJlY3QoMTAsIDEwLCAxMDAsIDUwKTsKICAgIGxldCBiID0gbmV3IFJlY3QoMjAwLCAyMDAsIDIwMCwgMTAwKTsKICAgIGxldCBiYyA9IGIuY2VudGVyOwoKICAgIGxldCByID0gbmV3IE1hdHJpeCgpOwoKICAgIHIudHJhbnNsYXRlKGJjLngsIGJjLnkpOwoKICAgIHIucm90YXRlKCgtMTUgKiBNYXRoLlBJKSAvIDE4MCk7CiAgICByLnRyYW5zbGF0ZSgtYmMueCwgLWJjLnkpOwoKICAgIGxldCBkciA9IG51bGw7CiAgICBpZihnbG9iYWwud2luZG93KSB7CiAgICAgIGRyID0gbmV3IERPTU1hdHJpeCgpOwogICAgICBkci50cmFuc2xhdGVTZWxmKGJjLngsIGJjLnkpOwoKICAgICAgZHIucm90YXRlU2VsZigtMTUpOwoKICAgICAgZHIudHJhbnNsYXRlU2VsZigtYmMueCwgLWJjLnkpOwogICAgfQoKICAgIGxldCBtID0gTWF0cml4LmdldEFmZmluZVRyYW5zZm9ybShhLCBiKTsKICAgIGxldCBjID0gbmV3IFJlY3QoYik7CiAgICBsZXQgYzIgPSBjLnRvUG9pbnRzKCk7CiAgICBjID0gYy50b1BvaW50cygpOwogICAgci50cmFuc2Zvcm1fcG9pbnRzKGMpOwogICAgdGhpcy5iID0gYjsKICAgIHRoaXMuYyA9IGM7CiAgICB0aGlzLmEgPSBhOwogIH0KCiAgY2hlY2tUYWdSZW1vdmUoKSB7CiAgICBpZihnbG9iYWwud2luZG93KSB7CiAgICAgIGxldCB0YWdSZW1vdmUgPSBFbGVtZW50LmZpbmQoImJ1dHRvbi50YWctcmVtb3ZlIik7CiAgICAgIGlmKHRhZ1JlbW92ZSkgewogICAgICAgIHRhZ1JlbW92ZS5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIGUgPT4gewogICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgVGltZXIub25jZSgxMDAsICgpID0+IHsKICAgICAgICAgICAgVXRpbC50cmF2ZXJzZVRyZWUodGhpcy50cmVlLCBub2RlID0+IHsKICAgICAgICAgICAgICBub2RlLmNoZWNrZWQgPSBmYWxzZTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHRoaXMuZm9yY2VVcGRhdGUoKTsKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9CiAgICAgIHJldHVybiB0YWdSZW1vdmU7CiAgICB9CiAgfQoKICBjb21wb25lbnREaWRNb3VudCgpIHsKICAgIGNvbnN0IHsgcm9vdFN0b3JlLCByb3V0ZXIgfSA9IHRoaXMucHJvcHM7CiAgICB0aGlzLmNoZWNrVGFnUmVtb3ZlKCk7CiAgfQoKICBjb21wb25lbnREaWRVcGRhdGUoKSB7CiAgICB0aGlzLmNoZWNrVGFnUmVtb3ZlKCk7CiAgfQoKICB0b3VjaEV2ZW50ID0gZXZlbnQgPT4ge307CgogIG1vdXNlRXZlbnQgPSBldmVudCA9PiB7CiAgICBjb25zdCB7IHRhcmdldCwgbmF0aXZlRXZlbnQgfSA9IGV2ZW50OwogICAgY29uc3QgeyB0eXBlLCBjbGllbnRYLCBjbGllbnRZLCBwYWdlWDogeCwgcGFnZVk6IHkgfSA9IG5hdGl2ZUV2ZW50OwogICAgaWYoIXRoaXMucmVjdHMpIHsKICAgICAgdGhpcy5yZWN0cyA9IEVsZW1lbnQuZmluZEFsbCgicmVjdCIpOwogICAgfQogICAgdmFyIHIgPSB0aGlzLnJlY3RzLmZpbHRlcihyZWN0ID0+IFJlY3QuaW5zaWRlKEVsZW1lbnQucmVjdChyZWN0KSwgeyB4LCB5IH0pKTsKCiAgICBpZih0eXBlLmVuZHNXaXRoKCJtb3ZlIikpIHsKICAgICAgdmFyIGVsZW0gPSByWzBdICYmIHJbMF0ucGFyZW50RWxlbWVudDsKICAgICAgdmFyIGhvdmVyID0gLTE7CgogICAgICBpZighZWxlbSkgcmV0dXJuOwoKICAgICAgaWYodGhpcy5wcmV2RWxlbSAmJiB0aGlzLnByZXZFbGVtLnN0eWxlKSB7CiAgICAgICAgaWYodGhpcy5wcmV2RWxlbSA9PSBlbGVtKSByZXR1cm47CiAgICAgICAgdGhpcy5wcmV2RWxlbS5zdHlsZS5yZW1vdmVQcm9wZXJ0eSgidHJhbnNmb3JtIik7CiAgICAgICAgaG92ZXIgPSAtMTsKICAgICAgfQogICAgICBpZihlbGVtICYmIGVsZW0uc3R5bGUpIHsKICAgICAgICBjb25zdCB0ID0gYCBzY2FsZSgxLjQsMS40KWA7CgogICAgICAgIHZhciBwYXJlbnQgPSBlbGVtLnBhcmVudEVsZW1lbnQ7CiAgICAgICAgZWxlbS5zdHlsZS5zZXRQcm9wZXJ0eSgidHJhbnNpdGlvbiIsICJ0cmFuc2Zvcm0gMXMgY3ViaWMtYmV6aWVyKDAuMTksIDEsIDAuMjIsIDEpIik7CiAgICAgICAgZWxlbS5zdHlsZS5zZXRQcm9wZXJ0eSgidHJhbnNmb3JtIiwgdCk7CiAgICAgICAgdGhpcy5wcmV2RWxlbSA9IGVsZW07CiAgICAgICAgaG92ZXIgPSBnZXRJZChlbGVtKTsKICAgICAgfQogICAgfSBlbHNlIGlmKHR5cGUuZW5kc1dpdGgoImRvd24iKSkgewogICAgICB2YXIgZWxlbSA9IHJbMF07CgogICAgICBpZihlbGVtKSB7CiAgICAgICAgY29uc3QgaWQgPSBnZXRJZChlbGVtLnBhcmVudEVsZW1lbnQpOwoKICAgICAgICB0aGlzLnNldFN0YXRlKHsgYWN0aXZlOiBpZCB9KTsKICAgICAgfQogICAgfQogICAgZnVuY3Rpb24gZ2V0TnVtKGVsZW0sIG5hbWUpIHsKICAgICAgcmV0dXJuIHBhcnNlRmxvYXQoZWxlbS5nZXRBdHRyaWJ1dGUobmFtZSkpOwogICAgfQogICAgZnVuY3Rpb24gZ2V0SWQoZWxlbSkgewogICAgICByZXR1cm4gcGFyc2VJbnQoKCIiICsgZWxlbS5nZXRBdHRyaWJ1dGUoImlkIikpLnJlcGxhY2UoLy4qXC4vLCAiIikpOwogICAgfQogIH07CgogIEBhY3Rpb24uYm91bmQKICBzZWxlY3ROb2RlKGl0ZW0pIHsKICAgIHZhciBjaGlsZHJlbiA9IFV0aWwuZmxhdFRyZWUoaXRlbSk7CiAgICB2YXIgaWRzID0gY2hpbGRyZW4ubWFwKGNoaWxkID0+IGNoaWxkLmlkKTsKCiAgICB0aGlzLnNldFN0YXRlKHsgcGFyZW50SWRzOiBpZHMgfSk7CiAgfQoKICB0cmVlU2VsRXZlbnQodHlwZSwgYXJnKSB7CiAgICBjb25zdCB7IHJvb3RTdG9yZSB9ID0gdGhpcy5wcm9wczsKCiAgICBzd2l0Y2ggKHR5cGUpIHsKICAgICAgY2FzZSAiY2hhbmdlIjogewogICAgICAgIFV0aWwudHJhdmVyc2VUcmVlKHRoaXMudHJlZSwgaXRlbSA9PiB7CiAgICAgICAgICBpdGVtLmNoZWNrZWQgPSBmYWxzZTsKICAgICAgICB9KTsKICAgICAgICBjb25zdCBpdGVtID0gZmluZEluVHJlZSh0aGlzLnRyZWUsIGFyZy52YWx1ZSk7CiAgICAgICAgaWYoaXRlbSkgewogICAgICAgICAgaXRlbS5jaGVja2VkID0gdHJ1ZTsKICAgICAgICAgIHRoaXMuc3RhdGUubm9kZSA9IGl0ZW0udmFsdWU7CiAgICAgICAgICB0aGlzLnNlbGVjdE5vZGUoaXRlbSk7CiAgICAgICAgfQogICAgICAgIGJyZWFrOwogICAgICB9CiAgICAgIGRlZmF1bHQ6IHsKICAgICAgICBicmVhazsKICAgICAgfQogICAgfQogIH0KCiAgaGFuZGxlVHJhbnNpdGlvbkVuZCA9IGV2ZW50ID0+IHsKICAgIGNvbnN0IHsgbmF0aXZlRXZlbnQsIHRhcmdldCwgY3VycmVudFRhcmdldCB9ID0gZXZlbnQ7CgogICAgaWYodGhpcy5lbGVtZW50KSB7CiAgICAgIGluc2VydFBhcmVudCh0aGlzLmVsZW1lbnQsIEVsZW1lbnQuY3JlYXRlKCJhIiwgeyBocmVmOiBgL3Nob3cvJHt0aGlzLnN0YXRlLmN1cnJlbnRJdGVtfWAgfSkpOwogICAgfSBlbHNlIGlmKHRoaXMucHJldmlvdXNFbGVtZW50KSB7CiAgICAgIHJlbW92ZVBhcmVudCh0aGlzLnByZXZpb3VzRWxlbWVudCwgZSA9PiBlLnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PSAiYSIpOwogICAgfQogIH07CgogIGhhbmRsZUNsaWNrID0gZXZlbnQgPT4gewogICAgY29uc3QgeyBuYXRpdmVFdmVudCwgdGFyZ2V0LCBjdXJyZW50VGFyZ2V0IH0gPSBldmVudDsKICAgIGxldCBlID0gZXZlbnQuY3VycmVudFRhcmdldDsKICAgIGxldCBpZCA9IEVsZW1lbnQuYXR0cihjdXJyZW50VGFyZ2V0LCAiaWQiKS5yZXBsYWNlKC9eaXRlbS0vLCAiIik7CgogICAgaWYodGhpcy5lbGVtZW50ID09PSBlKSB7CiAgICAgIHRoaXMuZ3JpZC5zdHlsZS50cmFuc2l0aW9uID0gYHRyYW5zZm9ybSAke3RoaXMuc3BlZWR9cyBlYXNlLWluLW91dGA7CiAgICAgIHRoaXMuZ3JpZC5zdHlsZS50cmFuc2Zvcm0gPSAiIjsKICAgICAgdGhpcy5wcmV2aW91c0VsZW1lbnQgPSB0aGlzLmVsZW1lbnQ7CiAgICAgIHRoaXMuZWxlbWVudCA9IG51bGw7CiAgICAgIGlmKHRoaXMuYmFjaykgewogICAgICAgIHRoaXMuYmFjay5wYXJlbnRFbGVtZW50LnJlbW92ZUNoaWxkKHRoaXMuYmFjayk7CiAgICAgICAgdGhpcy5iYWNrID0gbnVsbDsKICAgICAgfQogICAgICB0aGlzLnN0YXRlLmN1cnJlbnRJdGVtID0gbnVsbDsKICAgICAgcmV0dXJuOwogICAgfQogICAgdGhpcy5zdGF0ZS5jdXJyZW50SXRlbSA9IHBhcnNlSW50KGlkKTsKICAgIEVsZW1lbnQuZmluZEFsbCgiLnRpbGUiKS5mb3JFYWNoKGUgPT4gewogICAgICBpZihlICE9PSBldmVudC5jdXJyZW50VGFyZ2V0KSBFbGVtZW50LnNldENTUyhlLCB7IHRyYW5zaXRpb246ICJ0cmFuc2Zvcm0gMC4ycyBlYXNlLWluIiwgdHJhbnNmb3JtOiAiIiwgekluZGV4OiA4IH0pOwogICAgICBlLnN0eWxlLnNldFByb3BlcnR5KCJ0cmFuc2Zvcm0iLCAibm9uZSIpOwogICAgfSk7CiAgICB3aGlsZShlLnBhcmVudEVsZW1lbnQgJiYgIWUuY2xhc3NMaXN0LmNvbnRhaW5zKCJ0aWxlIikpIHsKICAgICAgZSA9IGUucGFyZW50RWxlbWVudDsKICAgIH0KICAgIGxldCBncmlkID0gRWxlbWVudC5maW5kKCIjaXRlbS1ncmlkIik7CiAgICBsZXQgYiA9IEVsZW1lbnQuZmluZCgiLnBhZ2UtbGF5b3V0Iik7CiAgICBsZXQgYnJlY3QgPSBFbGVtZW50LnJlY3QoImJvZHkiKTsKICAgIGxldCByZWN0ID0gRWxlbWVudC5yZWN0KGUpOwogICAgbGV0IHBvaW50cyA9IHJlY3QudG9Qb2ludHMoKS5tYXAocCA9PiBbcC54LCBwLnldKTsKICAgIGxldCByZWN0MiA9IEVsZW1lbnQucmVjdCgiI2l0ZW0tZ3JpZCIpOwogICAgbGV0IGxyZWN0ID0gRWxlbWVudC5yZWN0KCIuc2hvdy1sYXlvdXQyIik7CiAgICBsZXQgcG9pbnRzMiA9IHJlY3QyLnRvUG9pbnRzKCkubWFwKHAgPT4gW3AueCwgcC55XSk7CgogICAgdmFyIHNyZWN0ID0gbmV3IFJlY3QoeyB4OiAwLCB5OiAwLCB3aWR0aDogd2luZG93LmlubmVyV2lkdGgsIGhlaWdodDogd2luZG93LmlubmVySGVpZ2h0IH0pOwogICAgdmFyIHNpemUgPSBNYXRoLm1pbihyZWN0Mi53aWR0aCwgd2luZG93LmlubmVySGVpZ2h0IC0gMjAsIHdpbmRvdy5pbm5lcldpZHRoIC0gMjApOwogICAgdmFyIHB0ID0gbmV3IFBvaW50KHNyZWN0LmNlbnRlcik7CiAgICBwdC55ICs9IHdpbmRvdy5zY3JvbGxZOwogICAgdmFyIHQgPSBQb2ludC5kaWZmKHB0LCByZWN0LmNlbnRlcik7CiAgICB2YXIgb3JpZ2luID0gUG9pbnQuZGlmZihyZWN0LmNlbnRlciwgcmVjdDIpOwogICAgdmFyIGRpc3RhbmNlID0gTWF0aC5zcXJ0KHQueCAqIHQueCArIHQueSAqIHQueSk7CiAgICB0aGlzLnNwZWVkID0gZGlzdGFuY2UgKiAwLjAwMjsKICAgIHZhciBnbSA9IE1hdHJpeC5pbml0X3RyYW5zbGF0ZSh0LngsIHQueSk7CgogICAgdmFyIHNjYWxlID0gWyhzaXplIC8gcmVjdC53aWR0aCkgKiAxLCAoc2l6ZSAvIHJlY3QuaGVpZ2h0KSAqIDFdOwogICAgdmFyIG0gPSBNYXRyaXguaW5pdF9pZGVudGl0eSgpOwogICAgbSA9IE1hdHJpeC50cmFuc2xhdGUobSwgLXJlY3QuY2VudGVyLngsIC1yZWN0LmNlbnRlci55KTsKICAgIG0gPSBNYXRyaXgudHJhbnNsYXRlKG0sIHJlY3QyLmNlbnRlci54LCByZWN0Mi5jZW50ZXIueCk7CiAgICBtID0gTWF0cml4LnRyYW5zbGF0ZShtLCAwLCB3aW5kb3cuc2Nyb2xsWSArIHJlY3QyLnkgLyAyKTsKICAgIG0ueHggKj0gc2NhbGVbMF07CiAgICBtLnl5ICo9IHNjYWxlWzFdOwogICAgdmFyIGRtID0gbmV3IERPTU1hdHJpeCgpOwogICAgZG0udHJhbnNsYXRlU2VsZih0LngsIHQueSk7CiAgICBkbS5zY2FsZVNlbGYoc2NhbGVbMF0sIHNjYWxlWzFdKTsKICAgIHZhciBkbXMgPSBkbS50b1N0cmluZygpOwoKICAgIHRoaXMuZWxlbWVudCA9IGU7CiAgICB0aGlzLmdyaWQgPSBncmlkOwogICAgZSA9IHRoaXMuZ3JpZDsKICAgIHRoaXMuZ3JpZC5zdHlsZS5zZXRQcm9wZXJ0eSgidHJhbnNmb3JtLW9yaWdpbiIsIGAke29yaWdpbi54fXB4ICR7b3JpZ2luLnl9cHhgKTsKICAgIHRoaXMuZ3JpZC5zdHlsZS5zZXRQcm9wZXJ0eSgidHJhbnNmb3JtIiwgIiIpOwogICAgdGhpcy5ncmlkLnN0eWxlLnNldFByb3BlcnR5KCJ0cmFuc2l0aW9uIiwgYHRyYW5zZm9ybSAwLjVzIGxpbmVhcmApOwogICAgdmFyIHRlbmQgPSBlID0+IHsKICAgICAgZS50YXJnZXQuc3R5bGUudHJhbnNpdGlvbiA9IGB0cmFuc2Zvcm0gMC41cyBlYXNlLW91dGA7CiAgICAgIGUudGFyZ2V0LnN0eWxlLnRyYW5zZm9ybSA9IGRtLnRvU3RyaW5nKCk7CiAgICAgIGUudGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoInRyYW5zaXRpb25lbmQiLCB0ZW5kKTsKICAgIH07CiAgICBlLmFkZEV2ZW50TGlzdGVuZXIoInRyYW5zaXRpb25lbmQiLCB0ZW5kKTsKCiAgICBlLnN0eWxlLnNldFByb3BlcnR5KCJ0cmFuc2l0aW9uIiwgYHRyYW5zZm9ybSAke3RoaXMuc3BlZWR9IGVhc2Utb3V0YCk7CiAgICBlLnN0eWxlLnNldFByb3BlcnR5KCJ0cmFuc2Zvcm0iLCBkbXMpOwogICAgZS5zdHlsZS5zZXRQcm9wZXJ0eSgiei1pbmRleCIsIDkpOwogICAgaWYoZ2xvYmFsLndpbmRvdykgewogICAgICB3aW5kb3cudCA9IGU7CiAgICAgIHdpbmRvdy5tID0gbTsKICAgIH0KICB9OwoKICByZW5kZXIoKSB7CiAgICBjb25zdCB7IHJvb3RTdG9yZSB9ID0gdGhpcy5wcm9wczsKICAgIGxldCBzd2lwZUV2ZW50cyA9IHt9OwogICAgdmFyIGUgPSBudWxsOwogICAgaWYoZ2xvYmFsLndpbmRvdyAhPT0gdW5kZWZpbmVkKSB3aW5kb3cucGFnZSA9IHRoaXM7CiAgICBjb25zdCBvbkVycm9yID0gZXZlbnQgPT4ge307CiAgICBjb25zdCBvbkltYWdlID0gZXZlbnQgPT4gewogICAgICBjb25zdCB7IHZhbHVlIH0gPSBldmVudC5uYXRpdmVFdmVudC50YXJnZXQ7CiAgICAgIGRvY3VtZW50LmZvcm1zWzBdLnN1Ym1pdCgpOwogICAgfTsKICAgIGlmKGdsb2JhbC53aW5kb3cpIHsKICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoInJlc2l6ZSIsIGV2ZW50ID0+IHsKICAgICAgICBjb25zdCB7IGN1cnJlbnRUYXJnZXQsIHRhcmdldCB9ID0gZXZlbnQ7CiAgICAgIH0pOwogICAgfQogICAgY29uc3QgbWFrZVRyZWVTZWxFdmVudCA9IG5hbWUgPT4gZXZlbnQgPT4gdGhpcy50cmVlU2VsRXZlbnQobmFtZSwgZXZlbnQpOwogICAgbGV0IHRyZWUgPSB0aGlzLnRyZWU7CiAgICBjb25zdCBpdGVtcyA9IFtdOwogICAgY29uc3QgaXNTZXJ2ZXIgPSBVdGlsLmlzU2VydmVyKCk7CiAgICBjb25zb2xlLmxvZygiVHJlZVBhZ2UucmVuZGVyIiwgeyBpc1NlcnZlciB9KTsKICAgIHJldHVybiAoCiAgICAgIDxMYXlvdXQKICAgICAgICB0aXRsZT17IlRyZWUifQogICAgICAgIG9uTW91c2VNb3ZlPXtlID0+IHsKICAgICAgICAgIC8qdGhpcy5tb3VzZUV2ZW50Ki8KICAgICAgICB9fQogICAgICAgIG9uTW91c2VEb3duPXt0aGlzLm1vdXNlRXZlbnR9CiAgICAgICAgb25UcmFuc2l0aW9uRW5kPXt0aGlzLmhhbmRsZVRyYW5zaXRpb25FbmR9CiAgICAgID4KICAgICAgICA8VHJlZUdyYXBoCiAgICAgICAgICBzdHlsZT17CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAvKiB3aWR0aDogIjEwMHZ3IiwgaGVpZ2h0OiAiYXV0byIqLwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgICBncmFwaD17dGhpcy5wcm9wcy5ncmFwaH0KICAgICAgICAvPgogICAgICAgIDxiciAvPgogICAgICAgIHt0aGlzLnN0YXRlLnZpZXcgPT0gIml0ZW0iID8gKAogICAgICAgICAgPEl0ZW1WaWV3IGlkPXt0aGlzLnN0YXRlLml0ZW1JZH0gLz4KICAgICAgICApIDogKAogICAgICAgICAgPGRpdiBjbGFzc05hbWU9eyJzaG93LWxheW91dDIifT4KICAgICAgICAgICAge3RyZWUgPyA8RHJvcGRvd25UcmVlU2VsZWN0IGRhdGE9e3RyZWV9IG9uQ2hhbmdlPXttYWtlVHJlZVNlbEV2ZW50KCJjaGFuZ2UiKX0gb25Ob2RlVG9nZ2xlPXttYWtlVHJlZVNlbEV2ZW50KCJub2RlLXRvZ2dsZSIpfSBvbkZvY3VzPXttYWtlVHJlZVNlbEV2ZW50KCJmb2N1cyIpfSBvbkJsdXI9e21ha2VUcmVlU2VsRXZlbnQoImJsdXIiKX0gY2xhc3NOYW1lPXsiZHJvcGRvd24tdHJlZSJ9IG1vZGU9eyJyYWRpb1NlbGVjdCJ9IHRleHRzPXt7IHBsYWNlaG9sZGVyOiAicGFyZW50IGl0ZW0iIH19IC8+IDogdW5kZWZpbmVkfQogICAgICAgICAgICB7fQogICAgICAgICAgICA8ZGl2IGlkPXsiaXRlbS1ncmlkIn0gc3R5bGU9e3sgbWFyZ2luOiAiMCAwIiB9fT4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17ImdyaWQtY29sIGdyaWQtZ2FwLTIwIn0+CiAgICAgICAgICAgICAgICB7aXRlbXMubWFwKGl0ZW0gPT4gewogICAgICAgICAgICAgICAgICBjb25zdCBwaG90b19pZCA9IGl0ZW0ucGhvdG9zLmxlbmd0aCA+IDAgPyBpdGVtLnBob3Rvc1swXS5waG90by5pZCA6IC0xOwogICAgICAgICAgICAgICAgICBjb25zdCBoYXZlSW1hZ2UgPSBwaG90b19pZCA+PSAwOwogICAgICAgICAgICAgICAgICBsZXQgcGhvdG8gPSBoYXZlSW1hZ2UgPyBpdGVtLnBob3Rvc1swXS5waG90byA6IG51bGw7CiAgICAgICAgICAgICAgICAgIGNvbnN0IHBhdGggPSBoYXZlSW1hZ2UgPyBgL2FwaS9waG90by9nZXQvJHtwaG90b19pZH1gIDogInN0YXRpYy9pbWcvbm8taW1hZ2Uuc3ZnIjsKICAgICAgICAgICAgICAgICAgY29uc3Qgb3BhY2l0eSA9IHBob3RvX2lkID49IDAgPyAxIDogMC4zOwogICAgICAgICAgICAgICAgICBpZihwaG90byAhPT0gbnVsbCkgcGhvdG8ubGFuZHNjYXBlID0gcGhvdG8ud2lkdGggPiBwaG90by5oZWlnaHQ7CiAgICAgICAgICAgICAgICAgIGxldCB7IGRhdGEsIG5hbWUsIHBhcmVudCwgdHlwZSwgY2hpbGRyZW4sIHVzZXJzIH0gPSBpdGVtOwogICAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICAgIGRhdGEgPSBpdGVtLmRhdGEgJiYgaXRlbS5kYXRhLmxlbmd0aCAmJiBKU09OLnBhcnNlKGl0ZW0uZGF0YSk7CiAgICAgICAgICAgICAgICAgIH0gY2F0Y2goZXJyKSB7CiAgICAgICAgICAgICAgICAgICAgZGF0YSA9IGl0ZW0uZGF0YTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICBpZih0eXBlb2YgZGF0YSAhPSAib2JqZWN0IiB8fCBkYXRhID09PSBudWxsKSBkYXRhID0ge307CiAgICAgICAgICAgICAgICAgIGlmKCFoYXZlSW1hZ2UpIHJldHVybiB1bmRlZmluZWQ7CiAgICAgICAgICAgICAgICAgIHJldHVybiAoCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9eyJ0aWxlIn0gaWQ9e2BpdGVtLSR7aXRlbS5pZH1gfSBvbkNsaWNrPXt0aGlzLmhhbmRsZUNsaWNrfT4KICAgICAgICAgICAgICAgICAgICAgIDxTaXplZEFzcGVjdFJhdGlvQm94CiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246ICJyZWxhdGl2ZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgYm94U2hhZG93OiAiMHB4IDBweCA0cHggMHB4IHJnYmEoMCwgMCwgMCwgMC43NSkiLAogICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJmbG93OiAiaGlkZGVuIgogICAgICAgICAgICAgICAgICAgICAgICB9fQogICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9eyJsYXllciBnYWxsZXJ5LWFzcGVjdC1ib3gifQogICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICB7aGF2ZUltYWdlID8gKAogICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz17cGF0aH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoPXtwaG90by53aWR0aH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodD17cGhvdG8uaGVpZ2h0fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3sKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IHBob3RvLmxhbmRzY2FwZSA/IChwaG90by53aWR0aCAqIDEwMCkgLyBwaG90by5oZWlnaHQgKyAiJSIgOiAiMTAwJSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogImF1dG8iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGFjaXR5CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSdnYWxsZXJ5LWltYWdlJwogICAgICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICkgOiAoCiAgICAgICAgICAgICAgICAgICAgICAgICAgdW5kZWZpbmVkCiAgICAgICAgICAgICAgICAgICAgICAgICl9CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246ICJhYnNvbHV0ZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAiMnB4IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGhhdmVJbWFnZSA/ICJub25lIiA6ICJsaW5lYXItZ3JhZGllbnQoMGRlZywgaHNsYSg1MSwgOTElLCA4MCUsIDAuNSkgMCUsIGhzbGEoNTEsIDk1JSwgOTAlLCAwLjIpIDEwMCUpIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHRBbGlnbjogImxlZnQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiAiMHB4IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6ICIwcHgiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6ICIxNXB4IgogICAgICAgICAgICAgICAgICAgICAgICAgIH19CiAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICBJZDoge2l0ZW0uaWR9CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGJyIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAge2NoaWxkcmVuLmxlbmd0aCA+IDAgPyAoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2hpbGRyZW5be2NoaWxkcmVuLmxlbmd0aH1dOiB7Y2hpbGRyZW4ubWFwKGNoID0+IGNoLmlkKS5qb2luKCIsIil9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiciAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICkgOiAoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bmRlZmluZWQKICAgICAgICAgICAgICAgICAgICAgICAgICApfQogICAgICAgICAgICAgICAgICAgICAgICAgIFBhcmVudDoge3BhcmVudCA/IHBhcmVudC5pZCA6IC0xfSA8YnIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICB7ISF0eXBlID8gYFR5cGU6ICR7dHlwZX1gIDogdW5kZWZpbmVkfQogICAgICAgICAgICAgICAgICAgICAgICAgIHshIW5hbWUgPyBgTmFtZTogJHtuYW1lfWAgOiB1bmRlZmluZWR9CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGJyIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGJyIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHByZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3sKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udEZhbWlseTogIkZpeGVkc3lzLE1vbm9zcGFjZSwnVWJ1bnR1IE1vbm8nLCdDb3VyaWVyIE5ldycsRml4ZWQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogIjE2cHgiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fQogICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtbLi4uT2JqZWN0LmVudHJpZXMoZGF0YSldLm1hcCgoW2tleSwgdmFsdWVdKSA9PiAoa2V5ID09ICJ0aXRsZSIgPyB2YWx1ZSA6IGAke1V0aWwudWNmaXJzdChrZXkpfTogJHt2YWx1ZX1gKSkuam9pbigiXG4iKX0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3ByZT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICA8L1NpemVkQXNwZWN0UmF0aW9Cb3g+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICB9KX0KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICApfQogICAgICAgIDxTdmdPdmVybGF5IHN2Z1JlZj17dGhpcy5zdmdSZWZ9PgogICAgICAgICAgPHVzZSBocmVmPScjdHJlZScgLz4KICAgICAgICA8L1N2Z092ZXJsYXk+CiAgICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+e2AKICAgICAgICAgIC5zaG93LWxheW91dCB7CiAgICAgICAgICAgIHBhZGRpbmc6IDBweCAyMHB4OwogICAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogICAgICAgICAgICBvdmVyZmxvdzogdmlzaWJsZTsKICAgICAgICAgICAgbWluLWhlaWdodDogNjB2aDsKICAgICAgICAgIH0KICAgICAgICAgIC5zaG93LWxheW91dDIgewogICAgICAgICAgICBwYWRkaW5nOiAwcHggMjBweDsKICAgICAgICAgICAgd2lkdGg6IDEwMHZ3OwogICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0OwogICAgICAgICAgfQogICAgICAgICAgI2l0ZW0tZ3JpZCB7CiAgICAgICAgICAgIHBhZGRpbmc6IDIwcHggMDsKICAgICAgICAgIH0KICAgICAgICAgIC5nYWxsZXJ5LWltYWdlIHsKICAgICAgICAgICAgaGVpZ2h0OiBhdXRvOwogICAgICAgICAgfQogICAgICAgICAgLnBhbmVscyB7CiAgICAgICAgICAgIG1hcmdpbjogNDBweGYgYXV0byAwIGF1dG87CiAgICAgICAgICAgIG92ZXJmbG93OiB2aXNpYmxlOwogICAgICAgICAgfQogICAgICAgICAgaW1nIHsKICAgICAgICAgICAgYm9yZGVyOiAwcHg7CiAgICAgICAgICAgIG91dGxpbmU6IDBweDsKICAgICAgICAgICAgcGFkZGluZzogMHB4OwogICAgICAgICAgICBtYXJnaW46IDBweDsKICAgICAgICAgIH0KICAgICAgICAgIC5wYW5lbHMgLmxheWVyIHsKICAgICAgICAgICAgbWFyZ2luOiAwcHg7CiAgICAgICAgICAgIHBhZGRpbmc6IDBweDsKICAgICAgICAgIH0KICAgICAgICAgIC5sYXlvdXQgewogICAgICAgICAgICBtYXJnaW46IDBweDsKICAgICAgICAgICAgcGFkZGluZzogMHB4OwogICAgICAgICAgICBvdmVyZmxvdzogdmlzaWJsZTsKICAgICAgICAgIH0KICAgICAgICAgIC5wYW5lbHMgPiBkaXYgewogICAgICAgICAgICBmbGV4OiAxIDEgYXV0bzsKICAgICAgICAgIH0KICAgICAgICAgIC5sYXllciA+IGRpdiB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgICAgICBoZWlnaHQ6IDEwMCU7CiAgICAgICAgICB9CiAgICAgICAgICAubGF5ZXIgPiBkaXYgewogICAgICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgICAgaGVpZ2h0OiAxMDAlOwogICAgICAgICAgfQogICAgICAgICAgLmxheWVyLmRyYWdnaW5nIHsKICAgICAgICAgICAgb3BhY2l0eTogNTAlOwogICAgICAgICAgfQogICAgICAgICAgLnRpdGxlIHsKICAgICAgICAgICAgbWFyZ2luOiAwOwogICAgICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgICAgcGFkZGluZy10b3A6IDgwcHg7CiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjE1OwogICAgICAgICAgICBmb250LXNpemU6IDQ4cHg7CiAgICAgICAgICB9CiAgICAgICAgICAudGl0bGUsCiAgICAgICAgICAuZGVzY3JpcHRpb24gewogICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgICAgICB9CiAgICAgICAgICAucm93IHsKICAgICAgICAgICAgbWF4LXdpZHRoOiA4ODBweDsKICAgICAgICAgICAgbWFyZ2luOiA4MHB4IGF1dG8gNDBweDsKICAgICAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdzsKICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7CiAgICAgICAgICB9CiAgICAgICAgICAudGlsZSB7CiAgICAgICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAxcyBlYXNlLWluLW91dDsKICAgICAgICAgIH0KICAgICAgICAgIC5kcm9wZG93bi1jb250ZW50IHsKICAgICAgICAgICAgei1pbmRleDogMTI7CiAgICAgICAgICB9CiAgICAgICAgICBidXR0b24udGFnLXJlbW92ZSB7CiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtM3B4KTsKICAgICAgICAgICAgbWluLWhlaWdodDogMjEuNXB4OwogICAgICAgICAgICBtaW4td2lkdGg6IDIxLjVweDsKICAgICAgICAgICAgcGFkZGluZzogMnB4OwogICAgICAgICAgICBtYXJnaW46IDAgM3B4OwogICAgICAgICAgICBib3JkZXItd2lkdGg6IDFweDsKICAgICAgICAgICAgY29sb3I6IHJlZDsKICAgICAgICAgIH0KICAgICAgICAgIHNwYW4udGFnLAogICAgICAgICAgc3Bhbi5ub2RlLWxhYmVsIHsKICAgICAgICAgICAgZm9udC1zaXplOiAxNXB4OwogICAgICAgICAgfQogICAgICAgIGB9PC9zdHlsZT4KICAgICAgPC9MYXlvdXQ+CiAgICApOwogIH0KfQoKZXhwb3J0IGRlZmF1bHQgVHJlZVBhZ2U7CgAAAAAAAAAAsGMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfSoAAAAAAAB9KgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/dom/svg.js",
			"settings":
			{
				"buffer_size": 17256,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					22,
					1,
					"paste",
					null,
					"AQAAACAIAAAAAAAANwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAgAAAAAAAAgCAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAADcIAAAAAAAAOAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwgAAAAAAAA3CAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "call/"
					},
					"BQAAADgIAAAAAAAAOQgAAAAAAAAAAAAAOQgAAAAAAAA6CAAAAAAAAAAAAAA6CAAAAAAAADsIAAAAAAAAAAAAADsIAAAAAAAAPAgAAAAAAAAAAAAAPAgAAAAAAAA9CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAgAAAAAAAA4CAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"left_delete",
					null,
					"AQAAADwIAAAAAAAAPAgAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAPQgAAAAAAAA9CAAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAADwIAAAAAAAAPQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAgAAAAAAAA8CAAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"left_delete",
					null,
					"AQAAADwIAAAAAAAAPAgAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAPQgAAAAAAAA9CAAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "(parent,"
					},
					"CAAAADwIAAAAAAAAPQgAAAAAAAAAAAAAPQgAAAAAAAA+CAAAAAAAAAAAAAA+CAAAAAAAAD8IAAAAAAAAAAAAAD8IAAAAAAAAQAgAAAAAAAAAAAAAQAgAAAAAAABBCAAAAAAAAAAAAABBCAAAAAAAAEIIAAAAAAAAAAAAAEIIAAAAAAAAQwgAAAAAAAAAAAAAQwgAAAAAAABECAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAgAAAAAAAA8CAAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEQIAAAAAAAARQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAgAAAAAAABECAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"left_delete",
					null,
					"AQAAAEUIAAAAAAAARQgAAAAAAAAMAAAAcGFyZW50LmNhbGwo",
					"AQAAAAAAAAABAAAARQgAAAAAAABRCAAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": " ??"
					},
					"AwAAAEQGAAAAAAAARQYAAAAAAAAAAAAARQYAAAAAAABGBgAAAAAAAAAAAABGBgAAAAAAAEcGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAYAAAAAAABEBgAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " this.root"
					},
					"CgAAAEcGAAAAAAAASAYAAAAAAAAAAAAASAYAAAAAAABJBgAAAAAAAAAAAABJBgAAAAAAAEoGAAAAAAAAAAAAAEoGAAAAAAAASwYAAAAAAAAAAAAASwYAAAAAAABMBgAAAAAAAAAAAABMBgAAAAAAAE0GAAAAAAAAAAAAAE0GAAAAAAAATgYAAAAAAAAAAAAATgYAAAAAAABPBgAAAAAAAAAAAABPBgAAAAAAAFAGAAAAAAAAAAAAAFAGAAAAAAAAUQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwYAAAAAAABHBgAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": " ??"
					},
					"AwAAAFEGAAAAAAAAUgYAAAAAAAAAAAAAUgYAAAAAAABTBgAAAAAAAAAAAABTBgAAAAAAAFQGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQYAAAAAAABRBgAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFQGAAAAAAAAVQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAYAAAAAAABUBgAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"right_delete",
					null,
					"AQAAAFUGAAAAAAAAVQYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAVQYAAAAAAABVBgAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFUGAAAAAAAAVgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQYAAAAAAABVBgAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					2,
					"right_delete",
					null,
					"AgAAAFYGAAAAAAAAVgYAAAAAAAABAAAAfFYGAAAAAAAAVgYAAAAAAAABAAAAfA",
					"AQAAAAAAAAABAAAAVgYAAAAAAABWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFYGAAAAAAAAVwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgYAAAAAAABWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"right_delete",
					null,
					"AQAAAFcGAAAAAAAAVwYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAVwYAAAAAAABXBgAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					2,
					"left_delete",
					null,
					"AgAAAFYGAAAAAAAAVgYAAAAAAAABAAAAIFUGAAAAAAAAVQYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAVwYAAAAAAABXBgAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"left_delete",
					null,
					"AQAAABoGAAAAAAAAGgYAAAAAAAAUAAAAID0gdGhpcyAmJiB0aGlzLnJvb3Q",
					"AQAAAAAAAAABAAAAGgYAAAAAAAAuBgAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": "(this"
					},
					"BQAAADQGAAAAAAAANQYAAAAAAAAAAAAANQYAAAAAAAA2BgAAAAAAAAAAAAA2BgAAAAAAADcGAAAAAAAAAAAAADcGAAAAAAAAOAYAAAAAAAAAAAAAOAYAAAAAAAA5BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAYAAAAAAAA0BgAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAADkGAAAAAAAAOgYAAAAAAAAAAAAAOgYAAAAAAAA7BgAAAAAAAAAAAAA7BgAAAAAAADwGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQYAAAAAAAA5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADwGAAAAAAAAPQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAYAAAAAAAA8BgAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAEYGAAAAAAAARwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgYAAAAAAABGBgAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "?="
					},
					"AgAAAFIGAAAAAAAAUwYAAAAAAAAAAAAAUwYAAAAAAABUBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgYAAAAAAABSBgAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"left_delete",
					null,
					"AQAAAFMGAAAAAAAAUwYAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAVAYAAAAAAABUBgAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"left_delete",
					null,
					"AQAAAFIGAAAAAAAAUgYAAAAAAAABAAAAPw",
					"AQAAAAAAAAABAAAAUwYAAAAAAABTBgAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": "\n\nfor"
					},
					"CAAAAOUCAAAAAAAA5gIAAAAAAAAAAAAA5gIAAAAAAADqAgAAAAAAAAAAAADqAgAAAAAAAOsCAAAAAAAAAAAAAOsCAAAAAAAA7wIAAAAAAAAAAAAA5gIAAAAAAADmAgAAAAAAAAQAAAAgICAg6wIAAAAAAADsAgAAAAAAAAAAAADsAgAAAAAAAO0CAAAAAAAAAAAAAO0CAAAAAAAA7gIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QIAAAAAAADlAgAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAO4CAAAAAAAA8AIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gIAAAAAAADuAgAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAO8CAAAAAAAA8AIAAAAAAAAAAAAA8AIAAAAAAADxAgAAAAAAAAAAAADxAgAAAAAAAPICAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wIAAAAAAADvAgAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": " name"
					},
					"BQAAAPICAAAAAAAA8wIAAAAAAAAAAAAA8wIAAAAAAAD0AgAAAAAAAAAAAAD0AgAAAAAAAPUCAAAAAAAAAAAAAPUCAAAAAAAA9gIAAAAAAAAAAAAA9gIAAAAAAAD3AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gIAAAAAAADyAgAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPcCAAAAAAAA+AIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wIAAAAAAAD3AgAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					5,
					"left_delete",
					null,
					"BQAAAPcCAAAAAAAA9wIAAAAAAAABAAAAIPYCAAAAAAAA9gIAAAAAAAABAAAAZfUCAAAAAAAA9QIAAAAAAAABAAAAbfQCAAAAAAAA9AIAAAAAAAABAAAAYfMCAAAAAAAA8wIAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAA+AIAAAAAAAD4AgAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": "attrName"
					},
					"CAAAAPMCAAAAAAAA9AIAAAAAAAAAAAAA9AIAAAAAAAD1AgAAAAAAAAAAAAD1AgAAAAAAAPYCAAAAAAAAAAAAAPYCAAAAAAAA9wIAAAAAAAAAAAAA9wIAAAAAAAD4AgAAAAAAAAAAAAD4AgAAAAAAAPkCAAAAAAAAAAAAAPkCAAAAAAAA+gIAAAAAAAAAAAAA+gIAAAAAAAD7AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wIAAAAAAADzAgAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAPsCAAAAAAAA/AIAAAAAAAAAAAAA/AIAAAAAAAD9AgAAAAAAAAAAAAD9AgAAAAAAAP4CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wIAAAAAAAD7AgAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": " attr"
					},
					"BQAAAP4CAAAAAAAA/wIAAAAAAAAAAAAA/wIAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAEDAAAAAAAAAAAAAAEDAAAAAAAAAgMAAAAAAAAAAAAAAgMAAAAAAAADAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gIAAAAAAAD+AgAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAQDAAAAAAAABQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAMAAAAAAAAEAwAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAUDAAAAAAAABwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQMAAAAAAAAFAwAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAAYDAAAAAAAABwMAAAAAAAAAAAAABwMAAAAAAAALAwAAAAAAAAAAAAALAwAAAAAAAAwDAAAAAAAAAAAAAAwDAAAAAAAAEAMAAAAAAAAAAAAABwMAAAAAAAAHAwAAAAAAAAQAAAAgICAgBwMAAAAAAAANAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgMAAAAAAAAGAwAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"cut",
					null,
					"AQAAADwDAAAAAAAAPAMAAAAAAAAqAAAAc3ZnLnNldEF0dHJpYnV0ZShhdHRyZm4obmFtZSwgJy0nKSwgdmFsdWUp",
					"AQAAAAAAAAABAAAAPAMAAAAAAABmAwAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"paste",
					null,
					"AQAAADwDAAAAAAAAZgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAMAAAAAAAA8AwAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"paste",
					null,
					"AQAAAA0DAAAAAAAANwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQMAAAAAAAANAwAAAAAAAAAAAAAAAPC/"
				],
				[
					220,
					1,
					"insert",
					{
						"characters": "attrName"
					},
					"CQAAACUDAAAAAAAAJgMAAAAAAAAAAAAAJgMAAAAAAAAmAwAAAAAAAAQAAABuYW1lJgMAAAAAAAAnAwAAAAAAAAAAAAAnAwAAAAAAACgDAAAAAAAAAAAAACgDAAAAAAAAKQMAAAAAAAAAAAAAKQMAAAAAAAAqAwAAAAAAAAAAAAAqAwAAAAAAACsDAAAAAAAAAAAAACsDAAAAAAAALAMAAAAAAAAAAAAALAMAAAAAAAAtAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQMAAAAAAAApAwAAAAAAAAAAAAAAAPC/"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": "atrt"
					},
					"BQAAADUDAAAAAAAANgMAAAAAAAAAAAAANgMAAAAAAAA2AwAAAAAAAAUAAAB2YWx1ZTYDAAAAAAAANwMAAAAAAAAAAAAANwMAAAAAAAA4AwAAAAAAAAAAAAA4AwAAAAAAADkDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQMAAAAAAAA6AwAAAAAAAAAAAAAAAPC/"
				],
				[
					225,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAADkDAAAAAAAAOwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQMAAAAAAAA5AwAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": "attr"
					},
					"BAAAADoDAAAAAAAAOwMAAAAAAAAAAAAAOwMAAAAAAAA8AwAAAAAAAAAAAAA8AwAAAAAAAD0DAAAAAAAAAAAAAD0DAAAAAAAAPgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgMAAAAAAAA6AwAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					4,
					"left_delete",
					null,
					"BAAAAD0DAAAAAAAAPQMAAAAAAAABAAAAcjwDAAAAAAAAPAMAAAAAAAABAAAAdDsDAAAAAAAAOwMAAAAAAAABAAAAdDoDAAAAAAAAOgMAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAPgMAAAAAAAA+AwAAAAAAAAAAAAAAAPC/"
				],
				[
					228,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAADkDAAAAAAAAOQMAAAAAAAABAAAAWzkDAAAAAAAAOQMAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAOgMAAAAAAAA6AwAAAAAAAAAAAAAAAPC/"
				],
				[
					229,
					2,
					"left_delete",
					null,
					"AgAAADgDAAAAAAAAOAMAAAAAAAABAAAAdDcDAAAAAAAANwMAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAOQMAAAAAAAA5AwAAAAAAAAAAAAAAAPC/"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": "tr"
					},
					"AgAAADcDAAAAAAAAOAMAAAAAAAAAAAAAOAMAAAAAAAA5AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwMAAAAAAAA3AwAAAAAAAAAAAAAAAPC/"
				],
				[
					231,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAADkDAAAAAAAAOwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQMAAAAAAAA5AwAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": "attrn"
					},
					"BQAAADoDAAAAAAAAOwMAAAAAAAAAAAAAOwMAAAAAAAA8AwAAAAAAAAAAAAA8AwAAAAAAAD0DAAAAAAAAAAAAAD0DAAAAAAAAPgMAAAAAAAAAAAAAPgMAAAAAAAA/AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgMAAAAAAAA6AwAAAAAAAAAAAAAAAPC/"
				],
				[
					233,
					1,
					"left_delete",
					null,
					"AQAAAD4DAAAAAAAAPgMAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAPwMAAAAAAAA/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					234,
					1,
					"insert",
					{
						"characters": "Namne"
					},
					"BQAAAD4DAAAAAAAAPwMAAAAAAAAAAAAAPwMAAAAAAABAAwAAAAAAAAAAAABAAwAAAAAAAEEDAAAAAAAAAAAAAEEDAAAAAAAAQgMAAAAAAAAAAAAAQgMAAAAAAABDAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgMAAAAAAAA+AwAAAAAAAAAAAAAAAPC/"
				],
				[
					236,
					4,
					"left_delete",
					null,
					"BAAAAEMDAAAAAAAAQwMAAAAAAAABAAAAXUIDAAAAAAAAQgMAAAAAAAABAAAAZUEDAAAAAAAAQQMAAAAAAAABAAAAbkADAAAAAAAAQAMAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAARAMAAAAAAABEAwAAAAAAAAAAAAAAAPC/"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": "me]"
					},
					"AwAAAEADAAAAAAAAQQMAAAAAAAAAAAAAQQMAAAAAAABCAwAAAAAAAAAAAABCAwAAAAAAAEMDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAMAAAAAAABAAwAAAAAAAAAAAAAAAPC/"
				],
				[
					239,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEQDAAAAAAAARQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAMAAAAAAABEAwAAAAAAAAAAAAAAAPC/"
				],
				[
					243,
					1,
					"left_delete",
					null,
					"AQAAAEwDAAAAAAAATAMAAAAAAABVAAAAICAgIFV0aWwuZm9yZWFjaChhdHRyLCAodmFsdWUsIG5hbWUpID0+IHN2Zy5zZXRBdHRyaWJ1dGUoYXR0cmZuKG5hbWUsICctJyksIHZhbHVlKSk7Cg",
					"AQAAAAAAAAABAAAATAMAAAAAAAChAwAAAAAAAAAAAAAAAAAA"
				],
				[
					361,
					1,
					"cut",
					null,
					"AQAAAFkGAAAAAAAAWQYAAAAAAAAJAAAAPz8gcGFyZW50",
					"AQAAAAAAAAABAAAAWQYAAAAAAABiBgAAAAAAAAAAAAAAAPC/"
				],
				[
					366,
					1,
					"paste",
					null,
					"AQAAAEIGAAAAAAAASwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgYAAAAAAABCBgAAAAAAAAAAAAAAAPC/"
				],
				[
					367,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEsGAAAAAAAATAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwYAAAAAAABLBgAAAAAAAAAAAAAAAPC/"
				],
				[
					375,
					1,
					"insert",
					{
						"characters": "dee"
					},
					"BAAAAFAGAAAAAAAAUQYAAAAAAAAAAAAAUQYAAAAAAABRBgAAAAAAAAQAAAB0aGlzUQYAAAAAAABSBgAAAAAAAAAAAABSBgAAAAAAAFMGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAYAAAAAAABUBgAAAAAAAAAAAAAAAPC/"
				],
				[
					376,
					1,
					"left_delete",
					null,
					"AQAAAFIGAAAAAAAAUgYAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAUwYAAAAAAABTBgAAAAAAAAAAAAAAAPC/"
				],
				[
					377,
					1,
					"insert",
					{
						"characters": "le"
					},
					"AgAAAFIGAAAAAAAAUwYAAAAAAAAAAAAAUwYAAAAAAABUBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgYAAAAAAABSBgAAAAAAAAAAAAAAAPC/"
				],
				[
					378,
					1,
					"insert_completion",
					{
						"completion": "delegate",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "delegate"
					},
					"AgAAAFAGAAAAAAAAUAYAAAAAAAAEAAAAZGVsZVAGAAAAAAAAWAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAYAAAAAAABUBgAAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					1,
					"paste",
					null,
					"AgAAAFwGAAAAAAAAZAYAAAAAAAAAAAAAZAYAAAAAAABkBgAAAAAAAAQAAAB0aGlz",
					"AQAAAAAAAAABAAAAXAYAAAAAAABgBgAAAAAAAAAAAAAAAPC/"
				],
				[
					391,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAZAYAAAAAAABkBgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/svg/overlay.js",
			"settings":
			{
				"buffer_size": 3575,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					17,
					1,
					"insert",
					{
						"characters": "{},"
					},
					"AwAAAFYGAAAAAAAAVwYAAAAAAAAAAAAAVwYAAAAAAABYBgAAAAAAAAAAAABYBgAAAAAAAFkGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgYAAAAAAABWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFkGAAAAAAAAWgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQYAAAAAAABZBgAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " root:"
					},
					"BwAAAFcGAAAAAAAAWAYAAAAAAAAAAAAAWAYAAAAAAABYBgAAAAAAAAMAAAB9LCBYBgAAAAAAAFkGAAAAAAAAAAAAAFkGAAAAAAAAWgYAAAAAAAAAAAAAWgYAAAAAAABbBgAAAAAAAAAAAABbBgAAAAAAAFwGAAAAAAAAAAAAAFwGAAAAAAAAXQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwYAAAAAAABaBgAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAF0GAAAAAAAAXgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQYAAAAAAABdBgAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAAHAGAAAAAAAAcQYAAAAAAAAAAAAAcQYAAAAAAAByBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAYAAAAAAABwBgAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAEoGAAAAAAAASwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgYAAAAAAABKBgAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "\n\nreturn"
					},
					"DQAAAEsGAAAAAAAATAYAAAAAAAAAAAAATAYAAAAAAABOBgAAAAAAAAAAAABMBgAAAAAAAEwGAAAAAAAAAgAAACAgTAYAAAAAAABQBgAAAAAAAAAAAABQBgAAAAAAAFEGAAAAAAAAAAAAAFEGAAAAAAAAVQYAAAAAAAAAAAAATAYAAAAAAABMBgAAAAAAAAQAAAAgICAgUQYAAAAAAABSBgAAAAAAAAAAAABSBgAAAAAAAFMGAAAAAAAAAAAAAFMGAAAAAAAAVAYAAAAAAAAAAAAAVAYAAAAAAABVBgAAAAAAAAAAAABVBgAAAAAAAFYGAAAAAAAAAAAAAFYGAAAAAAAAVwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwYAAAAAAABLBgAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFcGAAAAAAAAWAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwYAAAAAAABXBgAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "M"
					},
					"AQAAAIEGAAAAAAAAggYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQYAAAAAAACBBgAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"left_delete",
					null,
					"AQAAAIEGAAAAAAAAgQYAAAAAAAABAAAATQ",
					"AQAAAAAAAAABAAAAggYAAAAAAACCBgAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIEGAAAAAAAAggYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQYAAAAAAACBBgAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAIIGAAAAAAAAgwYAAAAAAAAAAAAAgwYAAAAAAACHBgAAAAAAAAAAAACHBgAAAAAAAIgGAAAAAAAAAAAAAIMGAAAAAAAAgwYAAAAAAAAEAAAAICAgIIMGAAAAAAAAhQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggYAAAAAAACCBgAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "console.log"
					},
					"CwAAAEwGAAAAAAAATQYAAAAAAAAAAAAATQYAAAAAAABOBgAAAAAAAAAAAABOBgAAAAAAAE8GAAAAAAAAAAAAAE8GAAAAAAAAUAYAAAAAAAAAAAAAUAYAAAAAAABRBgAAAAAAAAAAAABRBgAAAAAAAFIGAAAAAAAAAAAAAFIGAAAAAAAAUwYAAAAAAAAAAAAAUwYAAAAAAABUBgAAAAAAAAAAAABUBgAAAAAAAFUGAAAAAAAAAAAAAFUGAAAAAAAAVgYAAAAAAAAAAAAAVgYAAAAAAABXBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAYAAAAAAABMBgAAAAAAAAAAAAAAADtA"
				],
				[
					59,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFcGAAAAAAAAWQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwYAAAAAAABXBgAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAFgGAAAAAAAAWQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAYAAAAAAABYBgAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"left_delete",
					null,
					"AQAAAFgGAAAAAAAAWAYAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAWQYAAAAAAABZBgAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAFgGAAAAAAAAWgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAYAAAAAAABYBgAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "root"
					},
					"BAAAAFkGAAAAAAAAWgYAAAAAAAAAAAAAWgYAAAAAAABbBgAAAAAAAAAAAABbBgAAAAAAAFwGAAAAAAAAAAAAAFwGAAAAAAAAXQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQYAAAAAAABZBgAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAF4GAAAAAAAAXwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgYAAAAAAABeBgAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": " root"
					},
					"BQAAAF8GAAAAAAAAYAYAAAAAAAAAAAAAYAYAAAAAAABhBgAAAAAAAAAAAABhBgAAAAAAAGIGAAAAAAAAAAAAAGIGAAAAAAAAYwYAAAAAAAAAAAAAYwYAAAAAAABkBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwYAAAAAAABfBgAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGUGAAAAAAAAZgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQYAAAAAAABlBgAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "\nroot"
					},
					"BwAAAEsGAAAAAAAATAYAAAAAAAAAAAAATAYAAAAAAABOBgAAAAAAAAAAAABOBgAAAAAAAFAGAAAAAAAAAAAAAFAGAAAAAAAAUQYAAAAAAAAAAAAAUQYAAAAAAABSBgAAAAAAAAAAAABSBgAAAAAAAFMGAAAAAAAAAAAAAFMGAAAAAAAAVAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwYAAAAAAABLBgAAAAAAAP///////+9/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": " ??="
					},
					"BAAAAFQGAAAAAAAAVQYAAAAAAAAAAAAAVQYAAAAAAABWBgAAAAAAAAAAAABWBgAAAAAAAFcGAAAAAAAAAAAAAFcGAAAAAAAAWAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAYAAAAAAABUBgAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": " this.svg"
					},
					"CQAAAFgGAAAAAAAAWQYAAAAAAAAAAAAAWQYAAAAAAABaBgAAAAAAAAAAAABaBgAAAAAAAFsGAAAAAAAAAAAAAFsGAAAAAAAAXAYAAAAAAAAAAAAAXAYAAAAAAABdBgAAAAAAAAAAAABdBgAAAAAAAF4GAAAAAAAAAAAAAF4GAAAAAAAAXwYAAAAAAAAAAAAAXwYAAAAAAABgBgAAAAAAAAAAAABgBgAAAAAAAGEGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAYAAAAAAABYBgAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGEGAAAAAAAAYwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQYAAAAAAABhBgAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGMGAAAAAAAAZAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYwYAAAAAAABjBgAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					2,
					"left_delete",
					null,
					"AgAAAJ4GAAAAAAAAngYAAAAAAAATAAAAIHJvb3QgfHwgdGhpcy5zdmcoKZ0GAAAAAAAAnQYAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAngYAAAAAAACxBgAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"cut",
					null,
					"AQAAAGUGAAAAAAAAZQYAAAAAAAAbAAAAY29uc29sZS5sb2coJ3Jvb3QnLCByb290KTsK",
					"AQAAAAAAAAABAAAAZQYAAAAAAACABgAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"paste",
					null,
					"AQAAAFAGAAAAAAAAawYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAYAAAAAAABQBgAAAAAAAAAAAAAAAEJA"
				],
				[
					114,
					2,
					"left_delete",
					null,
					"AgAAAHEGAAAAAAAAcQYAAAAAAAABAAAAP3AGAAAAAAAAcAYAAAAAAAABAAAAPw",
					"AQAAAAAAAAABAAAAcgYAAAAAAAByBgAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"cut",
					null,
					"AQAAAFAGAAAAAAAAUAYAAAAAAAAaAAAAY29uc29sZS5sb2coJ3Jvb3QnLCByb290KTs",
					"AQAAAAAAAAABAAAAUAYAAAAAAABqBgAAAAAAAP///////+9/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGMGAAAAAAAAZAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYwYAAAAAAABjBgAAAAAAAP///////+9/"
				],
				[
					122,
					1,
					"paste",
					null,
					"AQAAAGQGAAAAAAAAfgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAYAAAAAAABkBgAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AgAAAD0EAAAAAAAAPgQAAAAAAAAAAAAAPgQAAAAAAAA+BAAAAAAAAAQAAAAgLy9j",
					"AQAAAAAAAAABAAAAQQQAAAAAAAA9BAAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAD0EAAAAAAAAPgQAAAAAAAAAAAAAPgQAAAAAAAA/BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQQAAAAAAAA9BAAAAAAAAAAAAAAAAPC/"
				],
				[
					317,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAADwEAAAAAAAAPQQAAAAAAAAAAAAAPQQAAAAAAAA9BAAAAAAAAAMAAAAgLy8",
					"AQAAAAAAAAABAAAAPwQAAAAAAAA8BAAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAAGoEAAAAAAAAawQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagQAAAAAAABqBAAAAAAAAAAAAAAAAPC/"
				],
				[
					340,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAGsEAAAAAAAAbQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawQAAAAAAABrBAAAAAAAAAAAAAAAAPC/"
				],
				[
					344,
					1,
					"cut",
					null,
					"AQAAAGoEAAAAAAAAagQAAAAAAAADAAAAKycn",
					"AQAAAAAAAAABAAAAbQQAAAAAAABqBAAAAAAAAAAAAAAAAPC/"
				],
				[
					350,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAGQEAAAAAAAAZQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAQAAAAAAABkBAAAAAAAAAAAAAAAAPC/"
				],
				[
					351,
					1,
					"insert",
					{
						"characters": " rect"
					},
					"BQAAAGUEAAAAAAAAZgQAAAAAAAAAAAAAZgQAAAAAAABnBAAAAAAAAAAAAABnBAAAAAAAAGgEAAAAAAAAAAAAAGgEAAAAAAAAaQQAAAAAAAAAAAAAaQQAAAAAAABqBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQQAAAAAAABlBAAAAAAAAAAAAAAAAPC/"
				],
				[
					352,
					1,
					"paste",
					null,
					"AQAAAGoEAAAAAAAAbQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagQAAAAAAABqBAAAAAAAAAAAAAAAAPC/"
				],
				[
					381,
					1,
					"paste",
					null,
					"AQAAAFEKAAAAAAAAdwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQoAAAAAAABRCgAAAAAAAAAAAAAAAPC/"
				],
				[
					384,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFMKAAAAAAAAVAoAAAAAAAAAAAAAVAoAAAAAAABUCgAAAAAAAAQAAAAgIC8v",
					"AQAAAAAAAAABAAAAVwoAAAAAAABTCgAAAAAAAAAAAAAAAPC/"
				],
				[
					388,
					1,
					"insert",
					{
						"characters": "svg"
					},
					"BAAAAGEKAAAAAAAAYgoAAAAAAAAAAAAAYgoAAAAAAABiCgAAAAAAAAgAAABsYXllclJlZmIKAAAAAAAAYwoAAAAAAAAAAAAAYwoAAAAAAABkCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQoAAAAAAABhCgAAAAAAAAAAAAAAAPC/"
				],
				[
					391,
					7,
					"left_delete",
					null,
					"BwAAAGsKAAAAAAAAawoAAAAAAAACAAAAZilqCgAAAAAAAGoKAAAAAAAAAQAAAGVpCgAAAAAAAGkKAAAAAAAAAQAAAHJoCgAAAAAAAGgKAAAAAAAAAQAAACBnCgAAAAAAAGcKAAAAAAAAAQAAACxmCgAAAAAAAGYKAAAAAAAAAQAAACJlCgAAAAAAAGUKAAAAAAAAAQAAACA",
					"AQAAAAAAAAABAAAAawoAAAAAAABtCgAAAAAAAAAAAAAAAPC/"
				],
				[
					392,
					1,
					"insert",
					{
						"characters": "\",svg)"
					},
					"BgAAAGUKAAAAAAAAZgoAAAAAAAAAAAAAZgoAAAAAAABnCgAAAAAAAAAAAABnCgAAAAAAAGgKAAAAAAAAAAAAAGgKAAAAAAAAaQoAAAAAAAAAAAAAaQoAAAAAAABqCgAAAAAAAAAAAABqCgAAAAAAAGsKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQoAAAAAAABlCgAAAAAAAAAAAAAAAPC/"
				],
				[
					402,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAADwEAAAAAAAAPQQAAAAAAAAAAAAAPQQAAAAAAAA+BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAQAAAAAAAA8BAAAAAAAAAAAAAAAAPC/"
				],
				[
					431,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAFkGAAAAAAAAWgYAAAAAAAAAAAAAWgYAAAAAAABbBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQYAAAAAAABZBgAAAAAAAAAAAAAAAPC/"
				],
				[
					449,
					1,
					"left_delete",
					null,
					"AQAAAKIGAAAAAAAAogYAAAAAAAAEAAAAcm9vdA",
					"AQAAAAAAAAABAAAAogYAAAAAAACmBgAAAAAAAAAAAAAAAPC/"
				],
				[
					451,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKQGAAAAAAAApQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAYAAAAAAACkBgAAAAAAAAAAAAAAAPC/"
				],
				[
					452,
					1,
					"insert",
					{
						"characters": " rot"
					},
					"BAAAAKUGAAAAAAAApgYAAAAAAAAAAAAApgYAAAAAAACnBgAAAAAAAAAAAACnBgAAAAAAAKgGAAAAAAAAAAAAAKgGAAAAAAAAqQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQYAAAAAAAClBgAAAAAAAAAAAAAAAPC/"
				],
				[
					453,
					1,
					"left_delete",
					null,
					"AQAAAKgGAAAAAAAAqAYAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAqQYAAAAAAACpBgAAAAAAAAAAAAAAAPC/"
				],
				[
					454,
					1,
					"insert",
					{
						"characters": "ot"
					},
					"AgAAAKgGAAAAAAAAqQYAAAAAAAAAAAAAqQYAAAAAAACqBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAYAAAAAAACoBgAAAAAAAAAAAAAAAPC/"
				],
				[
					501,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAHUKAAAAAAAAdgoAAAAAAAAAAAAAdgoAAAAAAAB3CgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQoAAAAAAAB1CgAAAAAAAAAAAAAAADJA"
				],
				[
					505,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAKEKAAAAAAAAowoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQoAAAAAAAChCgAAAAAAAAAAAAAAAPC/"
				],
				[
					507,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKMKAAAAAAAApAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowoAAAAAAACjCgAAAAAAAAAAAAAAAPC/"
				],
				[
					508,
					1,
					"insert",
					{
						"characters": " svg"
					},
					"BAAAAKQKAAAAAAAApQoAAAAAAAAAAAAApQoAAAAAAACmCgAAAAAAAAAAAACmCgAAAAAAAKcKAAAAAAAAAAAAAKcKAAAAAAAAqAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAoAAAAAAACkCgAAAAAAAAAAAAAAAPC/"
				],
				[
					512,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAKsKAAAAAAAArAoAAAAAAAAAAAAArAoAAAAAAACtCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwoAAAAAAACrCgAAAAAAAAAAAAAAAPC/"
				],
				[
					517,
					1,
					"insert",
					{
						"characters": " root:"
					},
					"BgAAAKIKAAAAAAAAowoAAAAAAAAAAAAAowoAAAAAAACkCgAAAAAAAAAAAACkCgAAAAAAAKUKAAAAAAAAAAAAAKUKAAAAAAAApgoAAAAAAAAAAAAApgoAAAAAAACnCgAAAAAAAAAAAACnCgAAAAAAAKgKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogoAAAAAAACiCgAAAAAAAAAAAAAAAPC/"
				],
				[
					518,
					1,
					"insert",
					{
						"characters": " svg"
					},
					"BAAAAKgKAAAAAAAAqQoAAAAAAAAAAAAAqQoAAAAAAACqCgAAAAAAAAAAAACqCgAAAAAAAKsKAAAAAAAAAAAAAKsKAAAAAAAArAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAoAAAAAAACoCgAAAAAAAAAAAAAAAPC/"
				],
				[
					519,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKwKAAAAAAAArQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAoAAAAAAACsCgAAAAAAAAAAAAAAAPC/"
				],
				[
					522,
					1,
					"left_delete",
					null,
					"AQAAAK4KAAAAAAAArgoAAAAAAAAFAAAALCBzdmc",
					"AQAAAAAAAAABAAAArgoAAAAAAACzCgAAAAAAAAAAAAAAAPC/"
				],
				[
					533,
					1,
					"paste",
					null,
					"AQAAAKIGAAAAAAAApgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogYAAAAAAACiBgAAAAAAAAAAAAAAAPC/"
				],
				[
					549,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAL4FAAAAAAAAwAUAAAAAAAAAAAAAiwUAAAAAAACNBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgUAAAAAAACLBQAAAAAAAAAAAAAAAPC/"
				],
				[
					575,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAF0GAAAAAAAAXgYAAAAAAAAAAAAAXgYAAAAAAABeBgAAAAAAAAIAAAAvLw",
					"AQAAAAAAAAABAAAAXwYAAAAAAABdBgAAAAAAAAAAAAAAAPC/"
				],
				[
					588,
					1,
					"cut",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAbAAAAaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsK",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					589,
					2,
					"paste",
					null,
					"AgAAAAAAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAA2AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					592,
					1,
					"insert",
					{
						"characters": "DOM"
					},
					"AwAAACcAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAACoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwAAAAAAAAAnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					595,
					1,
					"insert",
					{
						"characters": "-dom"
					},
					"BAAAADYAAAAAAAAANwAAAAAAAAAAAAAANwAAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADkAAAAAAAAAAAAAADkAAAAAAAAAOgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgAAAAAAAAA2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					610,
					1,
					"cut",
					null,
					"AQAAAMsEAAAAAAAAywQAAAAAAAAWAAAAICAgICAgICBwYXJlbnQ6IHJvb3QsCg",
					"AQAAAAAAAAABAAAAywQAAAAAAADhBAAAAAAAAAAAAAAAAPC/"
				],
				[
					643,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMEKAAAAAAAAwgoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQoAAAAAAADBCgAAAAAAAAAAAAAAAPC/"
				],
				[
					644,
					1,
					"insert",
					{
						"characters": " svg"
					},
					"BAAAAMIKAAAAAAAAwwoAAAAAAAAAAAAAwwoAAAAAAADECgAAAAAAAAAAAADECgAAAAAAAMUKAAAAAAAAAAAAAMUKAAAAAAAAxgoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgoAAAAAAADCCgAAAAAAAAAAAAAAAPC/"
				],
				[
					648,
					1,
					"left_delete",
					null,
					"AQAAALQKAAAAAAAAtAoAAAAAAAAOAAAAeyByb290OiBzdmcgfSw",
					"AQAAAAAAAAABAAAAtAoAAAAAAADCCgAAAAAAAAAAAAAAAPC/"
				],
				[
					649,
					1,
					"right_delete",
					null,
					"AQAAALQKAAAAAAAAtAoAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAtAoAAAAAAAC0CgAAAAAAAAAAAAAAAPC/"
				],
				[
					660,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAIsHAAAAAAAAjAcAAAAAAAAAAAAAjAcAAAAAAACOBwAAAAAAAAAAAACOBwAAAAAAAI8HAAAAAAAAAAAAAI8HAAAAAAAAkQcAAAAAAAAAAAAAjAcAAAAAAACMBwAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAAiwcAAAAAAACLBwAAAAAAAAAAAAAAAPC/"
				],
				[
					684,
					2,
					"left_delete",
					null,
					"AwAAAI0KAAAAAAAAjQoAAAAAAAABAAAAL40HAAAAAAAAjQcAAAAAAAACAAAAICCKCgAAAAAAAIoKAAAAAAAAAQAAAC8",
					"AQAAAAAAAAABAAAAjgoAAAAAAACNCgAAAAAAAAAAAAAAAPC/"
				],
				[
					687,
					3,
					"left_delete",
					null,
					"AwAAAJUKAAAAAAAAlQoAAAAAAAABAAAAZ5QKAAAAAAAAlAoAAAAAAAABAAAAdpMKAAAAAAAAkwoAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAlgoAAAAAAACWCgAAAAAAAAAAAAAAAPC/"
				],
				[
					688,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BAAAAJMKAAAAAAAAlAoAAAAAAAAAAAAAlAoAAAAAAACVCgAAAAAAAAAAAACVCgAAAAAAAJYKAAAAAAAAAAAAAJYKAAAAAAAAlwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwoAAAAAAACTCgAAAAAAAAAAAAAAAPC/"
				],
				[
					697,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAG0KAAAAAAAAbgoAAAAAAAAAAAAAbgoAAAAAAABvCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQoAAAAAAABtCgAAAAAAAAAAAAAAAPC/"
				],
				[
					703,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAG8JAAAAAAAAcQkAAAAAAAAAAAAAWwgAAAAAAABdCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwkAAAAAAABbCAAAAAAAAAAAAAAAAPC/"
				],
				[
					707,
					1,
					"insert",
					{
						"characters": "löet"
					},
					"BAAAAJAKAAAAAAAAkQoAAAAAAAAAAAAAkQoAAAAAAACSCgAAAAAAAAAAAACSCgAAAAAAAJMKAAAAAAAAAAAAAJMKAAAAAAAAlAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAoAAAAAAACQCgAAAAAAAAAAAAAAAPC/"
				],
				[
					708,
					3,
					"left_delete",
					null,
					"AwAAAJMKAAAAAAAAkwoAAAAAAAABAAAAdJIKAAAAAAAAkgoAAAAAAAABAAAAZZEKAAAAAAAAkQoAAAAAAAACAAAAw7Y",
					"AQAAAAAAAAABAAAAlAoAAAAAAACUCgAAAAAAAAAAAAAAAPC/"
				],
				[
					709,
					1,
					"insert",
					{
						"characters": "et"
					},
					"AgAAAJEKAAAAAAAAkgoAAAAAAAAAAAAAkgoAAAAAAACTCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQoAAAAAAACRCgAAAAAAAAAAAAAAAPC/"
				],
				[
					710,
					1,
					"insert",
					{
						"characters": " svg="
					},
					"BQAAAJMKAAAAAAAAlAoAAAAAAAAAAAAAlAoAAAAAAACVCgAAAAAAAAAAAACVCgAAAAAAAJYKAAAAAAAAAAAAAJYKAAAAAAAAlwoAAAAAAAAAAAAAlwoAAAAAAACYCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwoAAAAAAACTCgAAAAAAAAAAAAAAAPC/"
				],
				[
					711,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJgKAAAAAAAAmQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAoAAAAAAACYCgAAAAAAAAAAAAAAAPC/"
				],
				[
					719,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AgAAABAIAAAAAAAAEQgAAAAAAAAAAAAAEQgAAAAAAAARCAAAAAAAAAYAAAAgICAvL2M",
					"AQAAAAAAAAABAAAAFggAAAAAAAAQCAAAAAAAAAAAAAAAAPC/"
				],
				[
					751,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AgAAAFwEAAAAAAAAXQQAAAAAAAAAAAAAXQQAAAAAAABdBAAAAAAAAAYAAAAgIC8vIGM",
					"AQAAAAAAAAABAAAAYgQAAAAAAABcBAAAAAAAAAAAAAAAAPC/"
				],
				[
					756,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAIMEAAAAAAAAhAQAAAAAAAAAAAAAhAQAAAAAAACEBAAAAAAAAAkAAAA6IHJlY3QrJyc",
					"AQAAAAAAAAABAAAAgwQAAAAAAACMBAAAAAAAAAAAAAAAAPC/"
				],
				[
					763,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUDgAAaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7CmltcG9ydCB7IFBvaW50LCBFbGVtZW50LCBTVkcgfSBmcm9tICcuLi9kb20uanMnOwppbXBvcnQgeyB0cmtsIH0gZnJvbSAnLi4vdHJrbC5qcyc7CmltcG9ydCB7IGxhenlJbml0aWFsaXplciB9IGZyb20gJy4uL2xhenlJbml0aWFsaXplci5qcyc7CgpleHBvcnQgZnVuY3Rpb24gU3ZnUGF0aFRyYWNlcihwYXRoKSB7CiAgbGV0IGJib3ggPSBTVkcuYmJveChwYXRoKTsKICBsZXQgcmVjdCA9IEVsZW1lbnQucmVjdChTVkcub3duZXIocGF0aCkuZWxlbWVudCk7CiAgbGV0IGxlbmd0aCA9IHBhdGguZ2V0VG90YWxMZW5ndGgoKTsKICBsZXQgc3RlcHMgPSAxMDA7CiAgbGV0IGNlbnRlciA9IGJib3guY2VudGVyOwoKICAvL2NvbnNvbGUubG9nKCJTdmdQYXRoVHJhY2VyICIsIHsgY2VudGVyLCBiYm94LCByZWN0LCBsZW5ndGggfSk7CgogIGxldCBzZWxmID0gewogICAgbGVuZ3RoLAogICAgY2VudGVyLAogICAgKmVudHJpZXMoKSB7fSwKICAgICpbU3ltYm9sLml0ZXJhdG9yXSgpIHsKICAgICAgZm9yKGxldCBpID0gMDsgaSA8IHN0ZXBzOyBpKyspIHsKICAgICAgICBjb25zdCBvZmZzZXQgPSAoaSAqIGxlbmd0aCkgLyBzdGVwczsKICAgICAgICBsZXQgcG9pbnQgPSBuZXcgUG9pbnQocGF0aC5nZXRQb2ludEF0TGVuZ3RoKG9mZnNldCkpOwogICAgICAgIGxldCByZWxhdGl2ZSA9IFBvaW50LmRpZmYocG9pbnQsIGNlbnRlcik7CiAgICAgICAgbGV0IGFuZ2xlID0gUG9pbnQudG9BbmdsZShyZWxhdGl2ZSk7CiAgICAgICAgbGV0IGRpc3RhbmNlID0gUG9pbnQuZGlzdGFuY2UocmVsYXRpdmUpOwogICAgICAgIHlpZWxkIFtvZmZzZXQsIHBvaW50XTsKICAgICAgfQogICAgfQogIH07CiAgcmV0dXJuIHNlbGY7Cn0KCmV4cG9ydCBjbGFzcyBTdmdPdmVybGF5IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHsKICAvL2xheWVyID0gbGF6eUluaXRpYWxpemVyKCgpID0+IEVsZW1lbnQuY3JlYXRlKCdkaXYnLCB7IGlkOiAnc3ZnLW92ZXJsYXknLCBwYXJlbnQ6IGRvY3VtZW50LmJvZHkgfSkpOwoKICBzdmcgPSBsYXp5SW5pdGlhbGl6ZXIoKHJlY3QsIHJvb3QpID0+IHsKY29uc29sZS5sb2coImxhenlJbml0aWFsaXplcjogIiwgeyByZWN0ICwgcm9vdCB9KTsKICAgIGxldCBzdmcgPSBTVkcuY3JlYXRlKAogICAgICAnc3ZnJywKICAgICAgewogICAgICAgIHdpZHRoOiByZWN0LndpZHRoLAogICAgICAgIGhlaWdodDogcmVjdC5oZWlnaHQsCiAgICAgICAgdmlld0JveDogYDAgMCAke3JlY3Qud2lkdGh9ICR7cmVjdC5oZWlnaHR9YCwKICAgICAgICBzdHlsZTogYHdpZHRoOiAke3JlY3Qud2lkdGh9cHg7IGhlaWdodDogJHtyZWN0LmhlaWdodH1weGAKICAgICAgfSwKICAgICAgcm9vdAogICAgKTsKICAvKiAgY29uc3QgZiA9IHRoaXMuZmFjdG9yeSgpOwogICAgaWYoZikgZi5yb290ID0gc3ZnOyovCiAgICBTVkcuY3JlYXRlKCdkZWZzJywge30sIHN2Zyk7CgogICAgUmVhY3RET00ucmVuZGVyKHRoaXMucHJvcHMuY2hpbGRyZW4sIHN2Zyk7CiAgICAvLwogICAgcmV0dXJuIHN2ZzsKICB9KTsKCiAgZmFjdG9yeSA9IGxhenlJbml0aWFsaXplcihyb290ID0+IHsKICAgIAogcm9vdCA9IHRoaXMuc3ZnKCk7CmNvbnNvbGUubG9nKCdyb290Jywgcm9vdCk7CiAgICByZXR1cm4gU1ZHLmZhY3RvcnkoeyByb290IH0sIHJvb3QpOwogIH0pOwogIHBhdGhzID0gW107CgogIGNvbnN0cnVjdG9yKHByb3BzKSB7CiAgICBzdXBlcihwcm9wcyk7CiAgICB0aGlzLmxheWVyUmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7CgogICAgY29uc3QgeyBzdmdSZWYgfSA9IHRoaXMucHJvcHM7CgogICAgaWYoZ2xvYmFsLndpbmRvdykgewogICAgICB3aW5kb3cuc3ZnT3ZlcmxheSA9IHRoaXM7CiAgICB9CiAgfQoKCiAgY29tcG9uZW50RGlkTW91bnQoKSB7CiAgICBjb25zdCByZWYgPSB0aGlzLmxheWVyUmVmLmN1cnJlbnQ7CgogICAgLy90cmtsLnByb3BlcnR5KHRoaXMubGF5ZXJSZWYsICdjdXJyZW50Jykuc3Vic2NyaWJlKHJlZiA9PiB7CiBjb25zb2xlLmxvZygibGF5ZXJSZWY6ICIsIHJlZik7CiAgICBsZXQgcmVjdCA9IEVsZW1lbnQucmVjdChyZWYpOwogICAgLypsZXQgc3ZnID0gU1ZHLmNyZWF0ZSgKICAgICAgJ3N2ZycsCiAgICAgIHsKICAgICAgICB3aWR0aDogcmVjdC53aWR0aCwKICAgICAgICBoZWlnaHQ6IHJlY3QuaGVpZ2h0LAogICAgICAgIHZpZXdCb3g6IGAwIDAgJHtyZWN0LndpZHRofSAke3JlY3QuaGVpZ2h0fWAsCiAgICAgICAgc3R5bGU6IGB3aWR0aDogJHtyZWN0LndpZHRofXB4OyBoZWlnaHQ6ICR7cmVjdC5oZWlnaHR9cHhgCiAgICAgIH0sCiAgICAgIHJlZgogICAgKTsKICAgIFNWRy5jcmVhdGUoJ2RlZnMnLCB7fSwgc3ZnKTsqLwoKICAgIC8qIFNWRy5jcmVhdGUoInJlY3QiLCB7CiAgICAgICAgICB4OiAxMDAsCiAgICAgICAgICB5OiAxMDAsCiAgICAgICAgICB3aWR0aDogMTAwLAogICAgICAgICAgaGVpZ2h0OiAxMDAsCiAgICAgICAgICBzdHJva2U6ICIjMDAwIiwKICAgICAgICAgIHN0cm9rZVdpZHRoOiAyLAogICAgICAgICAgZmlsbDogInJnYigwLDI1NSwwKSIsCiAgICAgICAgICAiZmlsbC1vcGFjaXR5IjogMC41CiAgICAgICAgfSwgc3ZnCiAgICAgICk7Ki8KICAgLy8gIGNvbnNvbGUubG9nKCJzdmc6IixzdmcpOwogIGxldCBzdmc9IHRoaXMuc3ZnKHJlY3QpOwogICAgY29uc3QgZiA9IHRoaXMuZmFjdG9yeShzdmcpOwovLyAgICBmLnJvb3QgPSBzdmc7CiAgICBpZih0eXBlb2Ygc3ZnUmVmID09ICdmdW5jdGlvbicpIHN2Z1JlZih7IHN2ZywgZmFjdG9yeTogZiAvKihuYW1lLHByb3BzKSA9PiBmKG5hbWUscHJvcHMsIHN2ZykgKi8gfSk7CiAgICAvL2NvbnNvbGUubG9nKCJTdmdPdmVybGF5OiAiLCB7IHN2ZywgcmVjdCB9KTsKCiAgICAvL3RoaXMuY3JlYXRlUGF0aHMoKTsKICAgIC8vfSk7CiAgfQoKICBjcmVhdGVQYXRocyA9ICgpID0+IHsKICAgIGNvbnN0IGYgPSB0aGlzLmZhY3RvcnkoKTsKCiAgICBpZih0eXBlb2YgZiA9PSAnZnVuY3Rpb24nKQogICAgICBmKCdyZWN0JywgewogICAgICAgIHdpZHRoOiAxMDAsCiAgICAgICAgaGVpZ2h0OiAxMDAsCiAgICAgICAgeDogNTAsCiAgICAgICAgeTogNTAsCiAgICAgICAgc3Ryb2tlOiAncmVkJywKICAgICAgICBzdHJva2VXaWR0aDogJzQnCiAgICAgIH0pOwogIH07CgogIHJlbmRlcigpIHsKICAgIGlmKGdsb2JhbC53aW5kb3cpIHRoaXMuY3JlYXRlUGF0aHMoKTsKCiAgICByZXR1cm4gKAogICAgICA8ZGl2CiAgICAgICAgY2xhc3NOYW1lPXsnc3ZnLW92ZXJsYXknfQogICAgICAgIHJlZj17dGhpcy5sYXllclJlZn0KICAgICAgICBzdHlsZT17ewogICAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsCiAgICAgICAgICBsZWZ0OiAwLAogICAgICAgICAgdG9wOiAwLAogICAgICAgICAgd2lkdGg6ICcxMDB2dycsCiAgICAgICAgICBoZWlnaHQ6ICcxMDAlJywKICAgICAgICAgIHBvaW50ZXJFdmVudHM6ICdub25lJywKICAgICAgICAgIC4uLnRoaXMucHJvcHMuc3R5bGUKICAgICAgICB9fQogICAgICAvPgogICAgKTsKICB9Cn0KCmV4cG9ydCBkZWZhdWx0IFN2Z092ZXJsYXk7CgAAAAAAAAAAig0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAUAAAAAAADCBQAAAAAAAAAAAAAAAPC/"
				],
				[
					766,
					1,
					"insert",
					{
						"characters": "\n\nconsole.lo"
					},
					"DwAAAEMLAAAAAAAARAsAAAAAAAAAAAAARAsAAAAAAABICwAAAAAAAAAAAABICwAAAAAAAEkLAAAAAAAAAAAAAEkLAAAAAAAATQsAAAAAAAAAAAAARAsAAAAAAABECwAAAAAAAAQAAAAgICAgSQsAAAAAAABKCwAAAAAAAAAAAABKCwAAAAAAAEsLAAAAAAAAAAAAAEsLAAAAAAAATAsAAAAAAAAAAAAATAsAAAAAAABNCwAAAAAAAAAAAABNCwAAAAAAAE4LAAAAAAAAAAAAAE4LAAAAAAAATwsAAAAAAAAAAAAATwsAAAAAAABQCwAAAAAAAAAAAABQCwAAAAAAAFELAAAAAAAAAAAAAFELAAAAAAAAUgsAAAAAAAAAAAAAUgsAAAAAAABTCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwsAAAAAAABDCwAAAAAAAAAAAAAAAPC/"
				],
				[
					767,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAAFMLAAAAAAAAVAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwsAAAAAAABTCwAAAAAAAAAAAAAAAPC/"
				],
				[
					768,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFQLAAAAAAAAVgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAsAAAAAAABUCwAAAAAAAAAAAAAAAPC/"
				],
				[
					769,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAFULAAAAAAAAVwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQsAAAAAAABVCwAAAAAAAAAAAAAAAPC/"
				],
				[
					770,
					1,
					"insert",
					{
						"characters": "this.svg()"
					},
					"CgAAAFYLAAAAAAAAVwsAAAAAAAAAAAAAVwsAAAAAAABYCwAAAAAAAAAAAABYCwAAAAAAAFkLAAAAAAAAAAAAAFkLAAAAAAAAWgsAAAAAAAAAAAAAWgsAAAAAAABbCwAAAAAAAAAAAABbCwAAAAAAAFwLAAAAAAAAAAAAAFwLAAAAAAAAXQsAAAAAAAAAAAAAXQsAAAAAAABeCwAAAAAAAAAAAABeCwAAAAAAAF8LAAAAAAAAAAAAAF8LAAAAAAAAYAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgsAAAAAAABWCwAAAAAAAAAAAAAAAPC/"
				],
				[
					772,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGELAAAAAAAAYgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQsAAAAAAABhCwAAAAAAAAAAAAAAAPC/"
				],
				[
					773,
					1,
					"insert",
					{
						"characters": " this.svg"
					},
					"CQAAAGILAAAAAAAAYwsAAAAAAAAAAAAAYwsAAAAAAABkCwAAAAAAAAAAAABkCwAAAAAAAGULAAAAAAAAAAAAAGULAAAAAAAAZgsAAAAAAAAAAAAAZgsAAAAAAABnCwAAAAAAAAAAAABnCwAAAAAAAGgLAAAAAAAAAAAAAGgLAAAAAAAAaQsAAAAAAAAAAAAAaQsAAAAAAABqCwAAAAAAAAAAAABqCwAAAAAAAGsLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgsAAAAAAABiCwAAAAAAAAAAAAAAAPC/"
				],
				[
					774,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGsLAAAAAAAAbQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawsAAAAAAABrCwAAAAAAAAAAAAAAAPC/"
				],
				[
					776,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAG4LAAAAAAAAbwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgsAAAAAAABuCwAAAAAAAAAAAAAAAPC/"
				],
				[
					784,
					1,
					"cut",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAbAAAAaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsK",
					"AQAAAAAAAAABAAAAGwAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					785,
					2,
					"paste",
					null,
					"AgAAAAAAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAA2AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					789,
					1,
					"insert",
					{
						"characters": "DIO"
					},
					"AwAAACcAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAACoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwAAAAAAAAAnAAAAAAAAAAAAAAAAAFtA"
				],
				[
					790,
					2,
					"left_delete",
					null,
					"AgAAACkAAAAAAAAAKQAAAAAAAAABAAAATygAAAAAAAAAKAAAAAAAAAABAAAASQ",
					"AQAAAAAAAAABAAAAKgAAAAAAAAAqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					791,
					1,
					"insert",
					{
						"characters": "OM"
					},
					"AgAAACgAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAAqAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAAAAAAAAAAoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					794,
					1,
					"insert",
					{
						"characters": "-dom"
					},
					"BAAAADYAAAAAAAAANwAAAAAAAAAAAAAANwAAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADkAAAAAAAAAAAAAADkAAAAAAAAAOgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgAAAAAAAAA2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					801,
					1,
					"doxy_enter",
					null,
					"AQAAAPMHAAAAAAAA+gcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wcAAAAAAADzBwAAAAAAAAAAAAAAAPC/"
				],
				[
					802,
					2,
					"left_delete",
					null,
					"AgAAAPkHAAAAAAAA+QcAAAAAAAABAAAAL/gHAAAAAAAA+AcAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAA+gcAAAAAAAD6BwAAAAAAAAAAAAAAAPC/"
				],
				[
					803,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAPgHAAAAAAAA+QcAAAAAAAAAAAAA+QcAAAAAAAD6BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+AcAAAAAAAD4BwAAAAAAAAAAAAAAAPC/"
				],
				[
					804,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPoHAAAAAAAA/AcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gcAAAAAAAD6BwAAAAAAAAAAAAAAAPC/"
				],
				[
					805,
					1,
					"insert",
					{
						"characters": "!this.svg"
					},
					"CQAAAPsHAAAAAAAA/AcAAAAAAAAAAAAA/AcAAAAAAAD9BwAAAAAAAAAAAAD9BwAAAAAAAP4HAAAAAAAAAAAAAP4HAAAAAAAA/wcAAAAAAAAAAAAA/wcAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAEIAAAAAAAAAAAAAAEIAAAAAAAAAggAAAAAAAAAAAAAAggAAAAAAAADCAAAAAAAAAAAAAADCAAAAAAAAAQIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wcAAAAAAAD7BwAAAAAAAAAAAAAAAPC/"
				],
				[
					807,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAUIAAAAAAAABwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQgAAAAAAAAFCAAAAAAAAAAAAAAAAPC/"
				],
				[
					808,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAYIAAAAAAAABwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABggAAAAAAAAGCAAAAAAAAAAAAAAAAPC/"
				],
				[
					809,
					1,
					"left_delete",
					null,
					"AQAAAAYIAAAAAAAABggAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAABwgAAAAAAAAHCAAAAAAAAAAAAAAAAPC/"
				],
				[
					810,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAAUIAAAAAAAABQgAAAAAAAABAAAAKAUIAAAAAAAABQgAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAABggAAAAAAAAGCAAAAAAAAAAAAAAAAPC/"
				],
				[
					811,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAUIAAAAAAAABggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQgAAAAAAAAFCAAAAAAAAAAAAAAAAPC/"
				],
				[
					812,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAYIAAAAAAAACAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABggAAAAAAAAGCAAAAAAAAAAAAAAAAPC/"
				],
				[
					813,
					1,
					"right_delete",
					null,
					"AQAAAAcIAAAAAAAABwgAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAABwgAAAAAAAAHCAAAAAAAAAAAAAAAAPC/"
				],
				[
					815,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAADwJAAAAAAAAPQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAkAAAAAAAA8CQAAAAAAAAAAAAAAYGVA"
				],
				[
					818,
					1,
					"left_delete",
					null,
					"AQAAADgKAAAAAAAAOAoAAAAAAAATAAAAICAgdGhpcy5zdmcoc3ZnKTsKIA",
					"AQAAAAAAAAABAAAAOAoAAAAAAABLCgAAAAAAAAAAAAAAACJA"
				],
				[
					823,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAEAGAAAAAAAAQgYAAAAAAAAAAAAAMwQAAAAAAAA1BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwQAAAAAAABABgAAAAAAAAAAAAAAAPC/"
				],
				[
					830,
					2,
					"right_delete",
					null,
					"AgAAAIYLAAAAAAAAhgsAAAAAAAABAAAAKIYLAAAAAAAAhgsAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAhgsAAAAAAACHCwAAAAAAAAAAAAAAAPC/"
				],
				[
					833,
					1,
					"left_delete",
					null,
					"AQAAAJILAAAAAAAAkgsAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAkwsAAAAAAACTCwAAAAAAAAAAAAAAAPC/"
				],
				[
					834,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAJELAAAAAAAAkQsAAAAAAAABAAAAKJELAAAAAAAAkQsAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAkgsAAAAAAACSCwAAAAAAAAAAAAAAAPC/"
				],
				[
					838,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJELAAAAAAAAkwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQsAAAAAAACRCwAAAAAAAAAAAAAAAPC/"
				],
				[
					839,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAJELAAAAAAAAkQsAAAAAAAABAAAAKJELAAAAAAAAkQsAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAkgsAAAAAAACSCwAAAAAAAAAAAAAAAPC/"
				],
				[
					840,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAJELAAAAAAAAkgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQsAAAAAAACRCwAAAAAAAAAAAAAAAPC/"
				],
				[
					844,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFAHAAAAAAAAUQcAAAAAAAAAAAAAUQcAAAAAAABTBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAcAAAAAAABQBwAAAAAAAAAAAAAAAPC/"
				],
				[
					876,
					2,
					"left_delete",
					null,
					"AwAAAEMGAAAAAAAAQwYAAAAAAAABAAAAL1AHAAAAAAAAUAcAAAAAAAACAAAAICBCBgAAAAAAAEIGAAAAAAAAAQAAACo",
					"AQAAAAAAAAABAAAARAYAAAAAAABEBgAAAAAAAAAAAAAAAPC/"
				],
				[
					879,
					2,
					"left_delete",
					null,
					"AgAAADQEAAAAAAAANAQAAAAAAAABAAAAKjMEAAAAAAAAMwQAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAANQQAAAAAAAA1BAAAAAAAAAAAAAAAAPC/"
				],
				[
					882,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAADQEAAAAAAAANQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAQAAAAAAAA0BAAAAAAAAAAAAAAAAPC/"
				],
				[
					893,
					2,
					"left_delete",
					null,
					"AgAAADcKAAAAAAAANwoAAAAAAAABAAAALzYKAAAAAAAANgoAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAOAoAAAAAAAA4CgAAAAAAAAAAAAAAAPC/"
				],
				[
					899,
					2,
					"left_delete",
					null,
					"AgAAAEUJAAAAAAAARQkAAAAAAAABAAAAKkQJAAAAAAAARAkAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAARgkAAAAAAABGCQAAAAAAAAAAAAAAAPC/"
				],
				[
					911,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAKcKAAAAAAAAqAoAAAAAAAAAAAAAqAoAAAAAAACoCgAAAAAAACgAAAAgLyoobmFtZSxwcm9wcykgPT4gZihuYW1lLHByb3BzLCBzdmcpICov",
					"AQAAAAAAAAABAAAApwoAAAAAAADPCgAAAAAAAAAAAAAAAPC/"
				],
				[
					916,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAJANAAAAAAAAkg0AAAAAAAAAAAAAlwMAAAAAAACZAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkA0AAAAAAACXAwAAAAAAAAAAAAAAAPC/"
				],
				[
					929,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAJUNAAAAAAAAlg0AAAAAAAAAAAAAlg0AAAAAAACXDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQ0AAAAAAACVDQAAAAAAAAAAAAAAADJA"
				],
				[
					931,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAAJYNAAAAAAAAlw0AAAAAAAAAAAAAlw0AAAAAAACYDQAAAAAAAAAAAACYDQAAAAAAAJkNAAAAAAAAAAAAAJkNAAAAAAAAmg0AAAAAAAAAAAAAmg0AAAAAAACbDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlg0AAAAAAACWDQAAAAAAAAAAAAAAAAAA"
				],
				[
					932,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJsNAAAAAAAAnA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmw0AAAAAAACbDQAAAAAAAAAAAAAAAPC/"
				],
				[
					933,
					1,
					"paste",
					null,
					"AQAAAJwNAAAAAAAApg0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnA0AAAAAAACcDQAAAAAAAAAAAAAAAPC/"
				],
				[
					934,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAKYNAAAAAAAApw0AAAAAAAAAAAAApw0AAAAAAACoDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApg0AAAAAAACmDQAAAAAAAAAAAAAAAPC/"
				],
				[
					935,
					1,
					"insert",
					{
						"characters": " props"
					},
					"BgAAAKgNAAAAAAAAqQ0AAAAAAAAAAAAAqQ0AAAAAAACqDQAAAAAAAAAAAACqDQAAAAAAAKsNAAAAAAAAAAAAAKsNAAAAAAAArA0AAAAAAAAAAAAArA0AAAAAAACtDQAAAAAAAAAAAACtDQAAAAAAAK4NAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqA0AAAAAAACoDQAAAAAAAAAAAAAAAPC/"
				],
				[
					936,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAK4NAAAAAAAArw0AAAAAAAAAAAAArw0AAAAAAACwDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArg0AAAAAAACuDQAAAAAAAAAAAAAAAPC/"
				],
				[
					937,
					1,
					"insert",
					{
						"characters": " >"
					},
					"AgAAALANAAAAAAAAsQ0AAAAAAAAAAAAAsQ0AAAAAAACyDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsA0AAAAAAACwDQAAAAAAAAAAAAAAAPC/"
				],
				[
					938,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALINAAAAAAAAsw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsg0AAAAAAACyDQAAAAAAAAAAAAAAAPC/"
				],
				[
					939,
					3,
					"left_delete",
					null,
					"AwAAALINAAAAAAAAsg0AAAAAAAABAAAAILENAAAAAAAAsQ0AAAAAAAABAAAAPrANAAAAAAAAsA0AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAsw0AAAAAAACzDQAAAAAAAAAAAAAAAPC/"
				],
				[
					940,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAALANAAAAAAAAsQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsA0AAAAAAACwDQAAAAAAAAAAAAAAAPC/"
				],
				[
					941,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALENAAAAAAAAsg0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQ0AAAAAAACxDQAAAAAAAAAAAAAAAPC/"
				],
				[
					942,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAALINAAAAAAAAtA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsg0AAAAAAACyDQAAAAAAAAAAAAAAAPC/"
				],
				[
					943,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAALMNAAAAAAAAtA0AAAAAAAAAAAAAtA0AAAAAAAC1DQAAAAAAAAAAAAC0DQAAAAAAALYNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsw0AAAAAAACzDQAAAAAAAAAAAAAAAPC/"
				],
				[
					947,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AgAAALgNAAAAAAAAuQ0AAAAAAAAAAAAAtA0AAAAAAAC0DQAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAAuA0AAAAAAAC4DQAAAAAAAAAAAAAAADJA"
				],
				[
					952,
					1,
					"insert_snippet",
					{
						"contents": "(${0:$SELECTION})"
					},
					"AgAAAKkNAAAAAAAAqQ0AAAAAAAAFAAAAcHJvcHOpDQAAAAAAALANAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQ0AAAAAAACuDQAAAAAAAAAAAAAAAPC/"
				],
				[
					953,
					1,
					"insert_snippet",
					{
						"contents": "{${0:$SELECTION}}"
					},
					"AgAAAKoNAAAAAAAAqg0AAAAAAAAFAAAAcHJvcHOqDQAAAAAAALENAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqg0AAAAAAACvDQAAAAAAAAAAAAAAAPC/"
				],
				[
					954,
					1,
					"insert",
					{
						"characters": "svgRef"
					},
					"BwAAAKsNAAAAAAAArA0AAAAAAAAAAAAArA0AAAAAAACsDQAAAAAAAAUAAABwcm9wc6wNAAAAAAAArQ0AAAAAAAAAAAAArQ0AAAAAAACuDQAAAAAAAAAAAACuDQAAAAAAAK8NAAAAAAAAAAAAAK8NAAAAAAAAsA0AAAAAAAAAAAAAsA0AAAAAAACxDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqw0AAAAAAACwDQAAAAAAAAAAAAAAAPC/"
				],
				[
					956,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALMNAAAAAAAAtQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsw0AAAAAAACzDQAAAAAAAAAAAAAAAPC/"
				],
				[
					957,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAALMNAAAAAAAAsw0AAAAAAAABAAAAKLMNAAAAAAAAsw0AAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAtA0AAAAAAAC0DQAAAAAAAAAAAAAAAPC/"
				],
				[
					959,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALkNAAAAAAAAug0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQ0AAAAAAAC5DQAAAAAAAAAAAAAAUHBA"
				],
				[
					966,
					1,
					"insert",
					{
						"characters": "export"
					},
					"BgAAAJYNAAAAAAAAlw0AAAAAAAAAAAAAlw0AAAAAAACYDQAAAAAAAAAAAACYDQAAAAAAAJkNAAAAAAAAAAAAAJkNAAAAAAAAmg0AAAAAAAAAAAAAmg0AAAAAAACbDQAAAAAAAAAAAACbDQAAAAAAAJwNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlg0AAAAAAACWDQAAAAAAAAAAAAAAAPC/"
				],
				[
					967,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJwNAAAAAAAAnQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnA0AAAAAAACcDQAAAAAAAAAAAAAAAPC/"
				],
				[
					972,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAMENAAAAAAAAwg0AAAAAAAAAAAAAwg0AAAAAAADDDQAAAAAAAAAAAADDDQAAAAAAAMQNAAAAAAAAAAAAAMQNAAAAAAAAxQ0AAAAAAAAAAAAAxQ0AAAAAAADGDQAAAAAAAAAAAADGDQAAAAAAAMcNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQ0AAAAAAADBDQAAAAAAAAAAAAAAAPC/"
				],
				[
					973,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMcNAAAAAAAAyA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxw0AAAAAAADHDQAAAAAAAAAAAAAAAPC/"
				],
				[
					985,
					1,
					"insert",
					{
						"characters": "<svg></"
					},
					"BwAAAMgNAAAAAAAAyQ0AAAAAAAAAAAAAyQ0AAAAAAADKDQAAAAAAAAAAAADKDQAAAAAAAMsNAAAAAAAAAAAAAMsNAAAAAAAAzA0AAAAAAAAAAAAAzA0AAAAAAADNDQAAAAAAAAAAAADNDQAAAAAAAM4NAAAAAAAAAAAAAM4NAAAAAAAAzw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyA0AAAAAAADIDQAAAAAAAAAAAAAAAPC/"
				],
				[
					986,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAM8NAAAAAAAA0A0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzw0AAAAAAADPDQAAAAAAAAAAAAAAAPC/"
				],
				[
					987,
					1,
					"left_delete",
					null,
					"AQAAAM8NAAAAAAAAzw0AAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/"
				],
				[
					988,
					1,
					"insert",
					{
						"characters": "svg>"
					},
					"BAAAAM8NAAAAAAAA0A0AAAAAAAAAAAAA0A0AAAAAAADRDQAAAAAAAAAAAADRDQAAAAAAANINAAAAAAAAAAAAANINAAAAAAAA0w0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzw0AAAAAAADPDQAAAAAAAAAAAAAAAPC/"
				],
				[
					993,
					1,
					"insert",
					{
						"characters": "M;"
					},
					"AgAAANMNAAAAAAAA1A0AAAAAAAAAAAAA1A0AAAAAAADVDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0w0AAAAAAADTDQAAAAAAAP///////+9/"
				],
				[
					994,
					2,
					"left_delete",
					null,
					"AgAAANQNAAAAAAAA1A0AAAAAAAABAAAAO9MNAAAAAAAA0w0AAAAAAAABAAAATQ",
					"AQAAAAAAAAABAAAA1Q0AAAAAAADVDQAAAAAAAAAAAAAAAPC/"
				],
				[
					995,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANMNAAAAAAAA1A0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0w0AAAAAAADTDQAAAAAAAAAAAAAAAPC/"
				],
				[
					996,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANQNAAAAAAAA1Q0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1A0AAAAAAADUDQAAAAAAAAAAAAAAAPC/"
				],
				[
					999,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD1DQAAaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7CmltcG9ydCB7IFBvaW50LCBFbGVtZW50LCBTVkcgfSBmcm9tICcuLi9kb20uanMnOwppbXBvcnQgeyB0cmtsIH0gZnJvbSAnLi4vdHJrbC5qcyc7CmltcG9ydCB7IGxhenlJbml0aWFsaXplciB9IGZyb20gJy4uL2xhenlJbml0aWFsaXplci5qcyc7CgpleHBvcnQgZnVuY3Rpb24gU3ZnUGF0aFRyYWNlcihwYXRoKSB7CiAgbGV0IGJib3ggPSBTVkcuYmJveChwYXRoKTsKICBsZXQgcmVjdCA9IEVsZW1lbnQucmVjdChTVkcub3duZXIocGF0aCkuZWxlbWVudCk7CiAgbGV0IGxlbmd0aCA9IHBhdGguZ2V0VG90YWxMZW5ndGgoKTsKICBsZXQgc3RlcHMgPSAxMDA7CiAgbGV0IGNlbnRlciA9IGJib3guY2VudGVyOwoKICAvL2NvbnNvbGUubG9nKCJTdmdQYXRoVHJhY2VyICIsIHsgY2VudGVyLCBiYm94LCByZWN0LCBsZW5ndGggfSk7CgogIGxldCBzZWxmID0gewogICAgbGVuZ3RoLAogICAgY2VudGVyLAogICAgKmVudHJpZXMoKSB7fSwKICAgICpbU3ltYm9sLml0ZXJhdG9yXSgpIHsKICAgICAgZm9yKGxldCBpID0gMDsgaSA8IHN0ZXBzOyBpKyspIHsKICAgICAgICBjb25zdCBvZmZzZXQgPSAoaSAqIGxlbmd0aCkgLyBzdGVwczsKICAgICAgICBsZXQgcG9pbnQgPSBuZXcgUG9pbnQocGF0aC5nZXRQb2ludEF0TGVuZ3RoKG9mZnNldCkpOwogICAgICAgIGxldCByZWxhdGl2ZSA9IFBvaW50LmRpZmYocG9pbnQsIGNlbnRlcik7CiAgICAgICAgbGV0IGFuZ2xlID0gUG9pbnQudG9BbmdsZShyZWxhdGl2ZSk7CiAgICAgICAgbGV0IGRpc3RhbmNlID0gUG9pbnQuZGlzdGFuY2UocmVsYXRpdmUpOwogICAgICAgIHlpZWxkIFtvZmZzZXQsIHBvaW50XTsKICAgICAgfQogICAgfQogIH07CiAgcmV0dXJuIHNlbGY7Cn0KCi8qZXhwb3J0IGNsYXNzIFN2Z092ZXJsYXkgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQgewogIC8vbGF5ZXIgPSBsYXp5SW5pdGlhbGl6ZXIoKCkgPT4gRWxlbWVudC5jcmVhdGUoJ2RpdicsIHsgaWQ6ICdzdmctb3ZlcmxheScsIHBhcmVudDogZG9jdW1lbnQuYm9keSB9KSk7CgogIHhzdmcgPSBsYXp5SW5pdGlhbGl6ZXIoKHJlY3QsIHJvb3QpID0+IHsKICAgIC8vY29uc29sZS5sb2coImxhenlJbml0aWFsaXplcjogIiwgeyByZWN0LCByb290IH0pOwogICAgbGV0IHN2ZyA9IFNWRy5jcmVhdGUoJ3N2ZycsCiAgICAgIHsKICAgICAgICBwYXJlbnQ6IHJvb3QsCiAgICAgICAgd2lkdGg6IHJlY3Qud2lkdGgsCiAgICAgICAgaGVpZ2h0OiByZWN0LmhlaWdodCwKICAgICAgICB2aWV3Qm94OiBgMCAwICR7cmVjdC53aWR0aH0gJHtyZWN0LmhlaWdodH1gLAogICAgICAgIHN0eWxlOiBgd2lkdGg6ICR7cmVjdC53aWR0aH1weDsgaGVpZ2h0OiAke3JlY3QuaGVpZ2h0fXB4YAogICAgICB9LAogICAgICByb290CiAgICApOwogICAgY29uc3QgZiA9IHRoaXMuZmFjdG9yeSgpOwogICAgaWYoZikgZi5yb290ID0gc3ZnOwogICAgU1ZHLmNyZWF0ZSgnZGVmcycsIHt9LCBzdmcpOwoKICAgIFJlYWN0RE9NLnJlbmRlcih0aGlzLnByb3BzLmNoaWxkcmVuLCBzdmcpOwogICAgLy8KICAgIHJldHVybiBzdmc7CiAgfSk7CgogIGZhY3RvcnkgPSBsYXp5SW5pdGlhbGl6ZXIocm9vdCA9PiBTVkcuZmFjdG9yeShyb290IHx8IHRoaXMuc3ZnKCkpKTsKICBwYXRocyA9IFtdOwoKICBjb25zdHJ1Y3Rvcihwcm9wcykgewogICAgc3VwZXIocHJvcHMpOwogICAgdGhpcy5sYXllclJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpOwoKICAgIGNvbnN0IHsgc3ZnUmVmIH0gPSB0aGlzLnByb3BzOwoKICAgIGlmKGdsb2JhbC53aW5kb3cpIHsKICAgICAgd2luZG93LnN2Z092ZXJsYXkgPSB0aGlzOwogICAgfQogIH0KCiAgY29tcG9uZW50RGlkTW91bnQoKSB7CiAgICBjb25zdCByZWYgPSB0aGlzLmxheWVyUmVmLmN1cnJlbnQ7CgogICAgLy90cmtsLnByb3BlcnR5KHRoaXMubGF5ZXJSZWYsICdjdXJyZW50Jykuc3Vic2NyaWJlKHJlZiA9PiB7CiAgICAvL2NvbnNvbGUubG9nKCJsYXllclJlZjogIiwgcmVmKTsKICAgIGlmKCF0aGlzLnN2ZykgewogICAgbGV0IHJlY3QgPSBFbGVtZW50LnJlY3QocmVmKTsKICAgIGxldCBzdmcgPSBTVkcuY3JlYXRlKCdzdmcnLAogICAgICB7CiAgICAgICAgd2lkdGg6IHJlY3Qud2lkdGgsCiAgICAgICAgaGVpZ2h0OiByZWN0LmhlaWdodCwKICAgICAgICB2aWV3Qm94OiBgMCAwICR7cmVjdC53aWR0aH0gJHtyZWN0LmhlaWdodH1gLAogICAgICAgIHN0eWxlOiBgd2lkdGg6ICR7cmVjdC53aWR0aH1weDsgaGVpZ2h0OiAke3JlY3QuaGVpZ2h0fXB4YAogICAgICB9LAogICAgICByZWYKICAgICk7CiAgICBTVkcuY3JlYXRlKCdkZWZzJywge30sIHN2Zyk7Cn0KICAgICBTVkcuY3JlYXRlKCJyZWN0IiwgewogICAgICAgICAgeDogMTAwLAogICAgICAgICAgeTogMTAwLAogICAgICAgICAgd2lkdGg6IDEwMCwKICAgICAgICAgIGhlaWdodDogMTAwLAogICAgICAgICAgc3Ryb2tlOiAiIzAwMCIsCiAgICAgICAgICBzdHJva2VXaWR0aDogMiwKICAgICAgICAgIGZpbGw6ICJyZ2IoMCwyNTUsMCkiLAogICAgICAgICAgImZpbGwtb3BhY2l0eSI6IDAuNQogICAgICAgIH0sIHN2ZwogICAgICApOwogICAgY29uc3QgZiA9IHRoaXMuZmFjdG9yeSgpOwogICAgZi5yb290ID0gc3ZnOwogICAgaWYodHlwZW9mIHN2Z1JlZiA9PSAnZnVuY3Rpb24nKQogICAgICBzdmdSZWYoeyBzdmcsIGZhY3Rvcnk6IGYgIH0pOwogICAgLy9jb25zb2xlLmxvZygiU3ZnT3ZlcmxheTogIiwgeyBzdmcsIHJlY3QgfSk7CgogICAgLy90aGlzLmNyZWF0ZVBhdGhzKCk7CiAgICAvL30pOwogIH0KCiAgY3JlYXRlUGF0aHMgPSAoKSA9PiB7CiAgICBjb25zdCBmID0gdGhpcy5mYWN0b3J5KCk7CgogICAgY29uc29sZS5sb2coInRoaXMuc3ZnIiwgdGhpcy5zdmcpOwoKICAgIGlmKHR5cGVvZiBmID09ICdmdW5jdGlvbicpCiAgICAgIGYoJ3JlY3QnLCB7CiAgICAgICAgd2lkdGg6IDEwMCwKICAgICAgICBoZWlnaHQ6IDEwMCwKICAgICAgICB4OiA1MCwKICAgICAgICB5OiA1MCwKICAgICAgICBzdHJva2U6ICdyZWQnLAogICAgICAgIHN0cm9rZVdpZHRoOiAnNCcKICAgICAgfSk7CiAgfTsKCiAgcmVuZGVyKCkgewogICAgaWYoZ2xvYmFsLndpbmRvdykgdGhpcy5jcmVhdGVQYXRocygpOwoKICAgIHJldHVybiAoPGRpdgogICAgICAgIGNsYXNzTmFtZT17J3N2Zy1vdmVybGF5J30KICAgICAgICByZWY9e3RoaXMubGF5ZXJSZWZ9CiAgICAgICAgc3R5bGU9e3sKICAgICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLAogICAgICAgICAgbGVmdDogMCwKICAgICAgICAgIHRvcDogMCwKICAgICAgICAgIHdpZHRoOiAnMTAwdncnLAogICAgICAgICAgaGVpZ2h0OiAnMTAwJScsCiAgICAgICAgICBwb2ludGVyRXZlbnRzOiAnbm9uZScsCiAgICAgICAgICAuLi50aGlzLnByb3BzLnN0eWxlCiAgICAgICAgfX0KICAgICAgLz4KICAgICk7CiAgfQp9Ki8KCmV4cG9ydCBjb25zdCBTdmdPdmVybGF5ID0gKHtzdmdSZWZ9KSA9PiB7CgpyZXR1cm4gPHN2Zz48L3N2Zz47Cgp9OwoKZXhwb3J0IGRlZmF1bHQgU3ZnT3ZlcmxheTsKAAAAAAAAAAD3DQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1Q0AAAAAAADVDQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "stores/RootStore.js",
			"settings":
			{
				"buffer_size": 12510,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/roman/wild-beauty/stores/queries.js",
			"settings":
			{
				"buffer_size": 6310,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					10,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAYhYAAAAAAACeFgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 1247,
				"line_ending": "Unix"
			}
		},
		{
			"file": "node_modules/react/index.js",
			"settings":
			{
				"buffer_size": 190,
				"line_ending": "Unix"
			}
		},
		{
			"file": "node_modules/react/cjs/react.development.js",
			"settings":
			{
				"buffer_size": 72141,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/roman/wild-beauty/pages/new.js",
			"settings":
			{
				"buffer_size": 7439,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "/home/roman/wild-beauty/lib/axios.js",
			"settings":
			{
				"buffer_size": 1370,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAF4CAAAAAAAAXwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgIAAAAAAABeAgAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " new"
					},
					"BAAAAF8CAAAAAAAAYAIAAAAAAAAAAAAAYAIAAAAAAABhAgAAAAAAAAAAAABhAgAAAAAAAGICAAAAAAAAAAAAAGICAAAAAAAAYwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwIAAAAAAABfAgAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " Error"
					},
					"BgAAAGMCAAAAAAAAZAIAAAAAAAAAAAAAZAIAAAAAAABlAgAAAAAAAAAAAABlAgAAAAAAAGYCAAAAAAAAAAAAAGYCAAAAAAAAZwIAAAAAAAAAAAAAZwIAAAAAAABoAgAAAAAAAAAAAABoAgAAAAAAAGkCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYwIAAAAAAABjAgAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGkCAAAAAAAAawIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQIAAAAAAABpAgAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": ".stack"
					},
					"BgAAAGsCAAAAAAAAbAIAAAAAAAAAAAAAbAIAAAAAAABtAgAAAAAAAAAAAABtAgAAAAAAAG4CAAAAAAAAAAAAAG4CAAAAAAAAbwIAAAAAAAAAAAAAbwIAAAAAAABwAgAAAAAAAAAAAABwAgAAAAAAAHECAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawIAAAAAAABrAgAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "\nEr"
					},
					"BAAAAB4CAAAAAAAAHwIAAAAAAAAAAAAAHwIAAAAAAAAlAgAAAAAAAAAAAAAlAgAAAAAAACYCAAAAAAAAAAAAACYCAAAAAAAAJwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgIAAAAAAAAeAgAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"left_delete",
					null,
					"AQAAACYCAAAAAAAAJgIAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAJwIAAAAAAAAnAgAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "rror.max"
					},
					"CAAAACYCAAAAAAAAJwIAAAAAAAAAAAAAJwIAAAAAAAAoAgAAAAAAAAAAAAAoAgAAAAAAACkCAAAAAAAAAAAAACkCAAAAAAAAKgIAAAAAAAAAAAAAKgIAAAAAAAArAgAAAAAAAAAAAAArAgAAAAAAACwCAAAAAAAAAAAAACwCAAAAAAAALQIAAAAAAAAAAAAALQIAAAAAAAAuAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgIAAAAAAAAmAgAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"paste",
					null,
					"AgAAACUCAAAAAAAARgIAAAAAAAAAAAAARgIAAAAAAABGAgAAAAAAAAkAAABFcnJvci5tYXg",
					"AQAAAAAAAAABAAAALgIAAAAAAAAlAgAAAAAAAAAAAAAAAEtA"
				],
				[
					23,
					1,
					"left_delete",
					null,
					"AQAAAEUCAAAAAAAARQIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAARgIAAAAAAABGAgAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "config,"
					},
					"BwAAAIcCAAAAAAAAiAIAAAAAAAAAAAAAiAIAAAAAAACJAgAAAAAAAAAAAACJAgAAAAAAAIoCAAAAAAAAAAAAAIoCAAAAAAAAiwIAAAAAAAAAAAAAiwIAAAAAAACMAgAAAAAAAAAAAACMAgAAAAAAAI0CAAAAAAAAAAAAAI0CAAAAAAAAjgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwIAAAAAAACHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI4CAAAAAAAAjwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgIAAAAAAACOAgAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"cut",
					null,
					"AQAAAOUBAAAAAAAA5QEAAAAAAAA6AAAAICAgICAgY29uc3QgeyB1cmwsIG1ldGhvZCwgZGF0YSB9ID0gKGF3YWl0IGNvbmZpZykgfHwge307Cg",
					"AQAAAAAAAAABAAAA5QEAAAAAAAAfAgAAAAAAAAAAAAAAAAAA"
				],
				[
					71,
					2,
					"paste",
					null,
					"AgAAAOUBAAAAAAAAHwIAAAAAAAAAAAAAHwIAAAAAAABZAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QEAAAAAAADlAQAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BgAAAOsBAAAAAAAA7AEAAAAAAAAAAAAA7AEAAAAAAADsAQAAAAAAABsAAABjb25zdCB7IHVybCwgbWV0aG9kLCBkYXRhIH3sAQAAAAAAAO0BAAAAAAAAAAAAAO0BAAAAAAAA7gEAAAAAAAAAAAAA7gEAAAAAAADvAQAAAAAAAAAAAADvAQAAAAAAAPABAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wEAAAAAAAAGAgAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": " cfg"
					},
					"BAAAAPABAAAAAAAA8QEAAAAAAAAAAAAA8QEAAAAAAADyAQAAAAAAAAAAAADyAQAAAAAAAPMBAAAAAAAAAAAAAPMBAAAAAAAA9AEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8AEAAAAAAADwAQAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "cfg"
					},
					"BAAAADECAAAAAAAAMgIAAAAAAAAAAAAAMgIAAAAAAAAyAgAAAAAAABQAAAAoYXdhaXQgY29uZmlnKSB8fCB7fTICAAAAAAAAMwIAAAAAAAAAAAAAMwIAAAAAAAA0AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQIAAAAAAAAxAgAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "cfg"
					},
					"BAAAAJ4CAAAAAAAAnwIAAAAAAAAAAAAAnwIAAAAAAACfAgAAAAAAAAYAAABjb25maWefAgAAAAAAAKACAAAAAAAAAAAAAKACAAAAAAAAoQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngIAAAAAAACkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAKICAAAAAAAApAIAAAAAAAAAAAAAngIAAAAAAACgAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngIAAAAAAACiAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "server.js",
			"settings":
			{
				"buffer_size": 15599,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "stores/queries.js",
			"settings":
			{
				"buffer_size": 6310,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					36,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AgAAAE4KAAAAAAAATwoAAAAAAAAAAAAATwoAAAAAAABPCgAAAAAAAAUAAAAgIC8vYw",
					"AQAAAAAAAAABAAAAUwoAAAAAAABOCgAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"cut",
					null,
					"AQAAAKQBAAAAAAAApAEAAAAAAAAtAAAAImh0dHA6Ly93aWxkLWJlYXV0eS5oZXJva3VhcHAuY29tL3YxL2dyYXBocWwi",
					"AQAAAAAAAAABAAAApAEAAAAAAADRAQAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "apiURL"
					},
					"BgAAAKQBAAAAAAAApQEAAAAAAAAAAAAApQEAAAAAAACmAQAAAAAAAAAAAACmAQAAAAAAAKcBAAAAAAAAAAAAAKcBAAAAAAAAqAEAAAAAAAAAAAAAqAEAAAAAAACpAQAAAAAAAAAAAACpAQAAAAAAAKoBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAEAAAAAAACkAQAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "\ncn"
					},
					"AwAAAH0BAAAAAAAAfgEAAAAAAAAAAAAAfgEAAAAAAAB/AQAAAAAAAAAAAAB/AQAAAAAAAIABAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQEAAAAAAAB9AQAAAAAAAAAAAAAAoGdA"
				],
				[
					70,
					1,
					"left_delete",
					null,
					"AQAAAH8BAAAAAAAAfwEAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAgAEAAAAAAACAAQAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "onst"
					},
					"BAAAAH8BAAAAAAAAgAEAAAAAAAAAAAAAgAEAAAAAAACBAQAAAAAAAAAAAACBAQAAAAAAAIIBAAAAAAAAAAAAAIIBAAAAAAAAgwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwEAAAAAAAB/AQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": " apiURL"
					},
					"BwAAAIMBAAAAAAAAhAEAAAAAAAAAAAAAhAEAAAAAAACFAQAAAAAAAAAAAACFAQAAAAAAAIYBAAAAAAAAAAAAAIYBAAAAAAAAhwEAAAAAAAAAAAAAhwEAAAAAAACIAQAAAAAAAAAAAACIAQAAAAAAAIkBAAAAAAAAAAAAAIkBAAAAAAAAigEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgwEAAAAAAACDAQAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAIoBAAAAAAAAiwEAAAAAAAAAAAAAiwEAAAAAAACMAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigEAAAAAAACKAQAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIwBAAAAAAAAjQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAEAAAAAAACMAQAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"paste",
					null,
					"AQAAAI0BAAAAAAAAugEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQEAAAAAAACNAQAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALoBAAAAAAAAuwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugEAAAAAAAC6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALsBAAAAAAAAvAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwEAAAAAAAC7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "awrn"
					},
					"BQAAAFYWAAAAAAAAVxYAAAAAAAAAAAAAVxYAAAAAAABXFgAAAAAAAAMAAABsb2dXFgAAAAAAAFgWAAAAAAAAAAAAAFgWAAAAAAAAWRYAAAAAAAAAAAAAWRYAAAAAAABaFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVhYAAAAAAABZFgAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					4,
					"left_delete",
					null,
					"BAAAAFkWAAAAAAAAWRYAAAAAAAABAAAAblgWAAAAAAAAWBYAAAAAAAABAAAAclcWAAAAAAAAVxYAAAAAAAABAAAAd1YWAAAAAAAAVhYAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAWhYAAAAAAABaFgAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "warn"
					},
					"BAAAAFYWAAAAAAAAVxYAAAAAAAAAAAAAVxYAAAAAAABYFgAAAAAAAAAAAABYFgAAAAAAAFkWAAAAAAAAAAAAAFkWAAAAAAAAWhYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVhYAAAAAAABWFgAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"cut",
					null,
					"AQAAAGQKAAAAAAAAZAoAAAAAAAAsAAAAICBjb25zb2xlLmxvZygiUm9vdFN0b3JlLmxvYWRJdGVtcyIsIGRhdGEpOwo",
					"AQAAAAAAAAABAAAAZAoAAAAAAACQCgAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					1,
					"paste",
					null,
					"AQAAAIAJAAAAAAAArAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAkAAAAAAACACQAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": "where"
					},
					"BgAAAKUJAAAAAAAApgkAAAAAAAAAAAAApgkAAAAAAACmCQAAAAAAAAQAAABkYXRhpgkAAAAAAACnCQAAAAAAAAAAAACnCQAAAAAAAKgJAAAAAAAAAAAAAKgJAAAAAAAAqQkAAAAAAAAAAAAAqQkAAAAAAACqCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQkAAAAAAACpCQAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAEoWAAAAAAAASxYAAAAAAAAAAAAASxYAAAAAAABPFgAAAAAAAAAAAABPFgAAAAAAAFAWAAAAAAAAAAAAAFAWAAAAAAAAVBYAAAAAAAAAAAAASxYAAAAAAABLFgAAAAAAAAQAAAAgICAg",
					"AQAAAAAAAAABAAAAShYAAAAAAABKFgAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BAAAAEsWAAAAAAAATBYAAAAAAAAAAAAATRYAAAAAAABNFgAAAAAAAAQAAAAgICAgTBYAAAAAAABNFgAAAAAAAAAAAABNFgAAAAAAAE4WAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASxYAAAAAAABLFgAAAAAAAAAAAAAAAEJA"
				],
				[
					197,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAE4WAAAAAAAAUBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAThYAAAAAAABOFgAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": "process.env."
					},
					"DAAAAE8WAAAAAAAAUBYAAAAAAAAAAAAAUBYAAAAAAABRFgAAAAAAAAAAAABRFgAAAAAAAFIWAAAAAAAAAAAAAFIWAAAAAAAAUxYAAAAAAAAAAAAAUxYAAAAAAABUFgAAAAAAAAAAAABUFgAAAAAAAFUWAAAAAAAAAAAAAFUWAAAAAAAAVhYAAAAAAAAAAAAAVhYAAAAAAABXFgAAAAAAAAAAAABXFgAAAAAAAFgWAAAAAAAAAAAAAFgWAAAAAAAAWRYAAAAAAAAAAAAAWRYAAAAAAABaFgAAAAAAAAAAAABaFgAAAAAAAFsWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATxYAAAAAAABPFgAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "PORT"
					},
					"BAAAAFsWAAAAAAAAXBYAAAAAAAAAAAAAXBYAAAAAAABdFgAAAAAAAAAAAABdFgAAAAAAAF4WAAAAAAAAAAAAAF4WAAAAAAAAXxYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWxYAAAAAAABbFgAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGAWAAAAAAAAYRYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYBYAAAAAAABgFgAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAGEWAAAAAAAAYxYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYRYAAAAAAABhFgAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAGIWAAAAAAAAYxYAAAAAAAAAAAAAYxYAAAAAAABkFgAAAAAAAAAAAABjFgAAAAAAAGUWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYhYAAAAAAABiFgAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": "endpoint"
					},
					"CAAAAGUWAAAAAAAAZhYAAAAAAAAAAAAAZhYAAAAAAABnFgAAAAAAAAAAAABnFgAAAAAAAGgWAAAAAAAAAAAAAGgWAAAAAAAAaRYAAAAAAAAAAAAAaRYAAAAAAABqFgAAAAAAAAAAAABqFgAAAAAAAGsWAAAAAAAAAAAAAGsWAAAAAAAAbBYAAAAAAAAAAAAAbBYAAAAAAABtFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZRYAAAAAAABlFgAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAG0WAAAAAAAAbhYAAAAAAAAAAAAAbhYAAAAAAABvFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbRYAAAAAAABtFgAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG8WAAAAAAAAcBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbxYAAAAAAABvFgAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAHAWAAAAAAAAchYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcBYAAAAAAABwFgAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": "http://"
					},
					"BwAAAHEWAAAAAAAAchYAAAAAAAAAAAAAchYAAAAAAABzFgAAAAAAAAAAAABzFgAAAAAAAHQWAAAAAAAAAAAAAHQWAAAAAAAAdRYAAAAAAAAAAAAAdRYAAAAAAAB2FgAAAAAAAAAAAAB2FgAAAAAAAHcWAAAAAAAAAAAAAHcWAAAAAAAAeBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcRYAAAAAAABxFgAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": "1270"
					},
					"BAAAAHgWAAAAAAAAeRYAAAAAAAAAAAAAeRYAAAAAAAB6FgAAAAAAAAAAAAB6FgAAAAAAAHsWAAAAAAAAAAAAAHsWAAAAAAAAfBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeBYAAAAAAAB4FgAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"left_delete",
					null,
					"AQAAAHsWAAAAAAAAexYAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAfBYAAAAAAAB8FgAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": ".0.0.1:${pr"
					},
					"CwAAAHsWAAAAAAAAfBYAAAAAAAAAAAAAfBYAAAAAAAB9FgAAAAAAAAAAAAB9FgAAAAAAAH4WAAAAAAAAAAAAAH4WAAAAAAAAfxYAAAAAAAAAAAAAfxYAAAAAAACAFgAAAAAAAAAAAACAFgAAAAAAAIEWAAAAAAAAAAAAAIEWAAAAAAAAghYAAAAAAAAAAAAAghYAAAAAAACDFgAAAAAAAAAAAACDFgAAAAAAAIQWAAAAAAAAAAAAAIQWAAAAAAAAhRYAAAAAAAAAAAAAhRYAAAAAAACGFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAexYAAAAAAAB7FgAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					1,
					"insert",
					{
						"characters": "ocess.env."
					},
					"CgAAAIYWAAAAAAAAhxYAAAAAAAAAAAAAhxYAAAAAAACIFgAAAAAAAAAAAACIFgAAAAAAAIkWAAAAAAAAAAAAAIkWAAAAAAAAihYAAAAAAAAAAAAAihYAAAAAAACLFgAAAAAAAAAAAACLFgAAAAAAAIwWAAAAAAAAAAAAAIwWAAAAAAAAjRYAAAAAAAAAAAAAjRYAAAAAAACOFgAAAAAAAAAAAACOFgAAAAAAAI8WAAAAAAAAAAAAAI8WAAAAAAAAkBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhhYAAAAAAACGFgAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"insert",
					{
						"characters": "PORT}/"
					},
					"BgAAAJAWAAAAAAAAkRYAAAAAAAAAAAAAkRYAAAAAAACSFgAAAAAAAAAAAACSFgAAAAAAAJMWAAAAAAAAAAAAAJMWAAAAAAAAlBYAAAAAAAAAAAAAlBYAAAAAAACVFgAAAAAAAAAAAACVFgAAAAAAAJYWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkBYAAAAAAACQFgAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"left_delete",
					null,
					"AQAAAJUWAAAAAAAAlRYAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAlhYAAAAAAACWFgAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "+endpoint;"
					},
					"CgAAAJYWAAAAAAAAlxYAAAAAAAAAAAAAlxYAAAAAAACYFgAAAAAAAAAAAACYFgAAAAAAAJkWAAAAAAAAAAAAAJkWAAAAAAAAmhYAAAAAAAAAAAAAmhYAAAAAAACbFgAAAAAAAAAAAACbFgAAAAAAAJwWAAAAAAAAAAAAAJwWAAAAAAAAnRYAAAAAAAAAAAAAnRYAAAAAAACeFgAAAAAAAAAAAACeFgAAAAAAAJ8WAAAAAAAAAAAAAJ8WAAAAAAAAoBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlhYAAAAAAACWFgAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					1,
					"left_delete",
					null,
					"AQAAAGEWAAAAAAAAYRYAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAAYhYAAAAAAABiFgAAAAAAAAAAAAAAKIFA"
				],
				[
					220,
					2,
					"left_delete",
					null,
					"AgAAAKAWAAAAAAAAoBYAAAAAAAABAAAAfZ8WAAAAAAAAnxYAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAoRYAAAAAAAChFgAAAAAAAAAAAAAAoGdA"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": "'+"
					},
					"AgAAAIEWAAAAAAAAghYAAAAAAAAAAAAAghYAAAAAAACDFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgRYAAAAAAACBFgAAAAAAAAAAAAAAAPC/"
				],
				[
					228,
					2,
					"right_delete",
					null,
					"AgAAAIMWAAAAAAAAgxYAAAAAAAABAAAAJIMWAAAAAAAAgxYAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAAgxYAAAAAAACDFgAAAAAAAAAAAAAAAPC/"
				],
				[
					231,
					1,
					"left_delete",
					null,
					"AQAAAJMWAAAAAAAAkxYAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAlBYAAAAAAACUFgAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"right_delete",
					null,
					"AQAAAJMWAAAAAAAAkxYAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAkxYAAAAAAACTFgAAAAAAAAAAAAAAAPC/"
				],
				[
					235,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAkxYAAAAAAACTFgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/lazyInitializer.js",
			"settings":
			{
				"buffer_size": 4906,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "lib/util.js",
			"settings":
			{
				"buffer_size": 183809,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"contents": "import React from \"react\";\nimport App from \"next/app\";\nimport { Router } from \"next/router\";\nimport { toJS } from \"mobx\";\nimport { Provider } from \"mobx-react\";\nimport Util from \"../lib/util.js\";\nimport { getOrCreateStore } from \"../stores/createStore.js\";\nimport { withRouter } from \"next/router\";\nimport i18nStore from \"../stores/i18nStore.js\";\nimport SiteMap from \"../components/siteMap.js\";\n\nimport \"../static/css/grid.css\";\nimport \"../static/css/react-dropdown-tree-select.css\";\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, router, ctx }) {\n    // create a store with the initial state\n    const mobxStore = getOrCreateStore(!Util.isBrowser());\n    console.log(\"mobxStore:\", Object.keys(mobxStore));\n    ctx.mobxStore = mobxStore;\n    const basePageProps = {\n      initialMobxState: mobxStore // store that will be serialized for ssr (see constructor)\n    };\n    const rootStore = basePageProps.initialMobxState[\"RootStore\"];\n    const editorStore = basePageProps.initialMobxState[\"EditorStore\"];\n    var pageProps = { ...basePageProps };\n    const getInit =\n      Component.getInitialProps ||\n      (() => {\n        return {};\n      });\n    if(typeof getInit == \"function\") {\n      let pageCtx = { ...ctx, ...basePageProps, mobxStore };\n      // inject the basePageProps in the parameters of getInitialProps\n      pageProps = await getInit(pageCtx);\n\n      console.log(\"App pageProps=\", Object.fromEntries(Object.entries(pageProps).map(([key, value]) => [key, Util.isArray(value) || (typeof value == \"object\" && value !== null && value.length !== undefined) ? `Array(${value.length})` : typeof value])));\n\n      if(pageProps.items) {\n        pageProps.items.forEach(item => {\n          //console.log(\"rootStore.items.set \", item.id, item);\n          rootStore.items.set(\"\" + item.id, item);\n        });\n      }\n\n      //console.log(`App.getInitialProps `, { pageProps });\n      // return the basePageProps inside the pageProps\n      pageProps = { ...basePageProps, ...pageProps };\n    } else {\n      //console.log(`App.getInitialProps ${componentName} has no getInitialProps!`);\n    }\n\n    return { pageProps };\n  }\n\n  constructor(props) {\n    super(props);\n    const { router, pageProps } = props;\n    this.mobxStore = getOrCreateStore(!global.window, props.pageProps.initialMobxState, props.pageProps);\n    //console.log(\"App.constructor\", { pageProps: Object.keys(pageProps) });\n\n    const rootStore = this.mobxStore.RootStore;\n    const editorStore = this.mobxStore.EditorStore;\n\n    if(pageProps.items !== undefined && pageProps.items !== null) {\n      // console.log(\"pageProps.items\", pageProps.items);\n      let items = pageProps.items.map(item => [\"\" + item.id, item]);\n      rootStore.items.clear();\n      rootStore.items.merge(items);\n      console.log(`items.length=`, items.length, ` rootStore.items.size=${rootStore.items.size}`);\n    }\n    if(pageProps.photos !== undefined) {\n      let photos = pageProps.photos.map(photo => [\"\" + photo.id, photo]);\n      rootStore.photos.clear();\n      rootStore.photos.merge(photos);\n      console.log(`photos.length=`, photos.length, ` rootStore.photos.size=${rootStore.photos.size}`);\n    }\n\n    const pageName = router.pathname.replace(/^\\//, \"\");\n    if(global.window) {\n      window.Util = Util;\n      window.stores = this.mobxStore;\n      window.site = Util.find(SiteMap, pageName, \"name\");\n    }\n    /*\n    if(pageProps) {\n      const { initialMobxState } = pageProps;\n      const items = initialMobxState[\"RootStore\"].items, photos = initialMobxState[\"RootStore\"].photos;\n      //console.log(\"App.constructor\", Object.keys(initialMobxState));\n\n      if(items && items.size > 0)\n      rootStore.items.replace(items);\n          if(photos && photos.size  > 0)\n\n      rootStore.photos.replace(photos);\n    }*/\n\n    Router.events.on(\"routeChangeStart\", url => {\n      console.log(\"App is changing to: \" + url);\n    });\n    }\n\n  componentDidMount(props) {\n    const { router, pageProps } = this.props;\n\n    const rootStore = this.mobxStore.RootStore;\n    const editorStore = this.mobxStore.EditorStore;\n\n    const handleRouteChange = url => {\n      console.log(\"App is changing to: \", url);\n\n      rootStore.setState({ loading: true });\n    };\n\n    // Router.events.on(\"routeChangeStart\", handleRouteChange);\n\n    console.log(\"App.componentDidMount \", router.query);\n    const obj = [\"step\", \"image\", \"selected\"].reduce((acc, key) => (router.query[key] !== undefined ? { ...acc, [key]: parseInt(router.query[key]) } : acc), {});\n    //console.log(\"newState: \", obj);\n\n    rootStore.setState(obj);\n  }\n\n  render() {\n    const { Component, pageProps, router, initialMobxState } = this.props;\n\n    if(Util.isBrowser()) window.component = Component;\n\n    //console.log(\"App.render\");\n    return (\n      <React.Fragment>\n        <Provider rootStore={this.mobxStore.RootStore} editorStore={this.mobxStore.EditorStore} i18nStore={i18nStore} store={this.mobxStore}>\n          <Component {...pageProps} router={router} key={Router.route} />\n        </Provider>\n\n        <style jsx global>{`\n          @font-face {\n            font-family: \"Fixed\";\n            src: url(\"static/fonts/Fixed-Medium.eot\");\n            src: url(\"static/fonts/Fixed-Medium.eot?#iefix\") format(\"embedded-opentype\"), url(\"static/fonts/Fixed-Medium.woff2\") format(\"woff2\"), url(\"static/fonts/Fixed-Medium.woff\") format(\"woff\"), url(\"static/fonts/Fixed-Medium.ttf\") format(\"truetype\"), url(\"static/fonts/Fixed-Medium.svg#Fixed-Medium\") format(\"svg\");\n            font-weight: 500;\n            font-style: normal;\n          }\n\n          body {\n            font-family: Fixed;\n            font-size: 13px;\n            background: url(static/img/tile-background.png) repeat;\n            background-size: auto 50vmin;\n            margin: 0;\n          }\n          @media (max-width: 375px) {\n            body {\n              font-size: 14px;\n            }\n            .content-layout {\n              padding: 0px 10px;\n            }\n          }\n\n          #__next {\n            margin: 0px;\n            padding: 0px;\n            overflow-x: hidden;\n          }\n          html,\n          body,\n          .page-layout,\n          .content-layout {\n            overflow-x: hidden;\n          }\n          .page-layout {\n            min-height: 100vh;\n          }\n\n          button,\n          textarea,\n          input,\n          select,\n          a {\n            -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n            -webkit-tap-highlight-color: transparent;\n            -webkit-user-select: none;\n            -khtml-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n          }\n          textarea,\n          input,\n          select {\n            -webkit-user-select: text;\n            -khtml-user-select: text;\n            -moz-user-select: text;\n            -ms-user-select: text;\n            user-select: text;\n          }\n          :focus {\n            outline: none !important;\n          }\n          button.icon {\n            padding: 0px;\n          }\n          body {\n            margin: 0px;\n            padding: 0px;\n          }\n\n          .title-bar > span {\n            white-space: pre;\n          }\n\n          button {\n            -webkit-appearance: none;\n            border: 1px outset #555555;\n            border-radius: 5px;\n            -webkit-border-radius: 5px;\n            box-sizing: border-box;\n            background: linear-gradient(top, #f0f0f0 0%, #dcdcdc 44%, #dcdcdc 44%, #c8c8c8 63%, #8d8d8d 100%);\n            background: -webkit-linear-gradient(top, #f0f0f0 0%, #dcdcdc 44%, #dcdcdc 44%, #c8c8c8 63%, #8d8d8d 100%);\n          }\n          button:active:enabled {\n            border: 1px inset #aaa;\n            background: linear-gradient(bottom, #f0f0f0 0%, #dcdcdc 44%, #dcdcdc 44%, #c8c8c8 63%, #8d8d8d 100%);\n            background: -webkit-linear-gradient(bottom, #f0f0f0 0%, #dcdcdc 44%, #dcdcdc 44%, #c8c8c8 63%, #8d8d8d 100%);\n          }\n          button:active:enabled > svg,\n          button:active:enabled > img {\n            transform: translate(1px, 1px);\n          }\n          button:hover:enabled {\n            box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.6);\n          }\n          button:active:enabled {\n            box-shadow: none;\n          }\n          .tooltip:after {\n            background: linear-gradient(to bottom, #ffda15ff 0%, #f3c500ff 100%);\n            color: #000;\n            margin: 10px 3px;\n            padding: 8px;\n            -webkit-border-radius: 4px;\n            -moz-border-radius: 4px;\n\n            border-radius: 4px;\n            box-shadow: 5px 5px 10px 2px rgba(0, 0, 0, 0.62);\n          }\n          button:disabled {\n            filter: grayscale(100%);\n            box-shadow: none;\n          }\n        `}</style>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(MyApp);\n",
			"file": "pages/_app.js",
			"file_size": 8878,
			"file_write_time": 132767404130732328,
			"settings":
			{
				"buffer_size": 8880,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAEIPAAAAAAAARA8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQg8AAAAAAABCDwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "stores/functions.js",
			"settings":
			{
				"buffer_size": 4829,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"insert",
					{
						"characters": "\nconsole.log"
					},
					"DQAAAK4KAAAAAAAArwoAAAAAAAAAAAAArwoAAAAAAAC3CgAAAAAAAAAAAAC3CgAAAAAAALgKAAAAAAAAAAAAALgKAAAAAAAAuQoAAAAAAAAAAAAAuQoAAAAAAAC6CgAAAAAAAAAAAAC6CgAAAAAAALsKAAAAAAAAAAAAALsKAAAAAAAAvAoAAAAAAAAAAAAAvAoAAAAAAAC9CgAAAAAAAAAAAAC9CgAAAAAAAL4KAAAAAAAAAAAAAL4KAAAAAAAAvwoAAAAAAAAAAAAAvwoAAAAAAADACgAAAAAAAAAAAADACgAAAAAAAMEKAAAAAAAAAAAAAMEKAAAAAAAAwgoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgoAAAAAAACuCgAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMIKAAAAAAAAxAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgoAAAAAAADCCgAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAMMKAAAAAAAAxQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwoAAAAAAADDCgAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " m,"
					},
					"AwAAAMUKAAAAAAAAxgoAAAAAAAAAAAAAxgoAAAAAAADHCgAAAAAAAAAAAADHCgAAAAAAAMgKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQoAAAAAAADFCgAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					3,
					"left_delete",
					null,
					"AwAAAMcKAAAAAAAAxwoAAAAAAAABAAAALMYKAAAAAAAAxgoAAAAAAAABAAAAbcUKAAAAAAAAxQoAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAyAoAAAAAAADICgAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMUKAAAAAAAAxgoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQoAAAAAAADFCgAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAAMYKAAAAAAAAxwoAAAAAAAAAAAAAxwoAAAAAAADICgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxgoAAAAAAADGCgAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"paste",
					null,
					"AQAAAMQKAAAAAAAAzwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAoAAAAAAADECgAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAANIKAAAAAAAA0woAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0goAAAAAAADSCgAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAANQKAAAAAAAA1QoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AoAAAAAAADUCgAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "Edge,"
					},
					"BQAAANMKAAAAAAAA1AoAAAAAAAAAAAAA1AoAAAAAAADVCgAAAAAAAAAAAADVCgAAAAAAANYKAAAAAAAAAAAAANYKAAAAAAAA1woAAAAAAAAAAAAA1woAAAAAAADYCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0woAAAAAAADTCgAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANgKAAAAAAAA2QoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AoAAAAAAADYCgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/fd-graph.js",
			"settings":
			{
				"buffer_size": 12273,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert",
					{
						"characters": "\ncnsol.e"
					},
					"CgAAABsLAAAAAAAAHAsAAAAAAAAAAAAAHAsAAAAAAAAeCwAAAAAAAAAAAAAeCwAAAAAAACALAAAAAAAAAAAAACALAAAAAAAAIQsAAAAAAAAAAAAAIQsAAAAAAAAiCwAAAAAAAAAAAAAiCwAAAAAAACMLAAAAAAAAAAAAACMLAAAAAAAAJAsAAAAAAAAAAAAAJAsAAAAAAAAlCwAAAAAAAAAAAAAlCwAAAAAAACYLAAAAAAAAAAAAACYLAAAAAAAAJwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwsAAAAAAAAbCwAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					6,
					"left_delete",
					null,
					"BgAAACYLAAAAAAAAJgsAAAAAAAABAAAAZSULAAAAAAAAJQsAAAAAAAABAAAALiQLAAAAAAAAJAsAAAAAAAABAAAAbCMLAAAAAAAAIwsAAAAAAAABAAAAbyILAAAAAAAAIgsAAAAAAAABAAAAcyELAAAAAAAAIQsAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAJwsAAAAAAAAnCwAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "onsole.log"
					},
					"CgAAACELAAAAAAAAIgsAAAAAAAAAAAAAIgsAAAAAAAAjCwAAAAAAAAAAAAAjCwAAAAAAACQLAAAAAAAAAAAAACQLAAAAAAAAJQsAAAAAAAAAAAAAJQsAAAAAAAAmCwAAAAAAAAAAAAAmCwAAAAAAACcLAAAAAAAAAAAAACcLAAAAAAAAKAsAAAAAAAAAAAAAKAsAAAAAAAApCwAAAAAAAAAAAAApCwAAAAAAACoLAAAAAAAAAAAAACoLAAAAAAAAKwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQsAAAAAAAAhCwAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACsLAAAAAAAALQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwsAAAAAAAArCwAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAACwLAAAAAAAALgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAsAAAAAAAAsCwAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "addEdge"
					},
					"BwAAAC0LAAAAAAAALgsAAAAAAAAAAAAALgsAAAAAAAAvCwAAAAAAAAAAAAAvCwAAAAAAADALAAAAAAAAAAAAADALAAAAAAAAMQsAAAAAAAAAAAAAMQsAAAAAAAAyCwAAAAAAAAAAAAAyCwAAAAAAADMLAAAAAAAAAAAAADMLAAAAAAAANAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQsAAAAAAAAtCwAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADULAAAAAAAANgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQsAAAAAAAA1CwAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAADYLAAAAAAAANwsAAAAAAAAAAAAANwsAAAAAAAA4CwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgsAAAAAAAA2CwAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADkLAAAAAAAAOgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQsAAAAAAAA5CwAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"cut",
					null,
					"AQAAABwLAAAAAAAAHAsAAAAAAAAfAAAAICAgIGNvbnNvbGUubG9nKCdhZGRFZGdlJywgZSk7Cg",
					"AQAAAAAAAAABAAAAHAsAAAAAAAA7CwAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"paste",
					null,
					"AQAAAGwLAAAAAAAAiwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAsAAAAAAABsCwAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": ",ârgs"
					},
					"BgAAAIcLAAAAAAAAiAsAAAAAAAAAAAAAiAsAAAAAAACICwAAAAAAAAEAAABliAsAAAAAAACJCwAAAAAAAAAAAACJCwAAAAAAAIoLAAAAAAAAAAAAAIoLAAAAAAAAiwsAAAAAAAAAAAAAiwsAAAAAAACMCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwsAAAAAAACICwAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					5,
					"left_delete",
					null,
					"BQAAAIsLAAAAAAAAiwsAAAAAAAABAAAAc4oLAAAAAAAAigsAAAAAAAABAAAAZ4kLAAAAAAAAiQsAAAAAAAABAAAAcogLAAAAAAAAiAsAAAAAAAACAAAAw6KHCwAAAAAAAIcLAAAAAAAAAQAAACw",
					"AQAAAAAAAAABAAAAjAsAAAAAAACMCwAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "args"
					},
					"BAAAAIcLAAAAAAAAiAsAAAAAAAAAAAAAiAsAAAAAAACJCwAAAAAAAAAAAACJCwAAAAAAAIoLAAAAAAAAAAAAAIoLAAAAAAAAiwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwsAAAAAAACHCwAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": "\\bn"
					},
					"AwAAAIMsAAAAAAAAhCwAAAAAAAAAAAAAhCwAAAAAAACFLAAAAAAAAAAAAACFLAAAAAAAAIYsAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgywAAAAAAACDLAAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					2,
					"left_delete",
					null,
					"AgAAAIUsAAAAAAAAhSwAAAAAAAABAAAAboQsAAAAAAAAhCwAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAAhiwAAAAAAACGLAAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAIQsAAAAAAAAhSwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhCwAAAAAAACELAAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": "+Util.stack"
					},
					"CwAAAIYsAAAAAAAAhywAAAAAAAAAAAAAhywAAAAAAACILAAAAAAAAAAAAACILAAAAAAAAIksAAAAAAAAAAAAAIksAAAAAAAAiiwAAAAAAAAAAAAAiiwAAAAAAACLLAAAAAAAAAAAAACLLAAAAAAAAIwsAAAAAAAAAAAAAIwsAAAAAAAAjSwAAAAAAAAAAAAAjSwAAAAAAACOLAAAAAAAAAAAAACOLAAAAAAAAI8sAAAAAAAAAAAAAI8sAAAAAAAAkCwAAAAAAAAAAAAAkCwAAAAAAACRLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhiwAAAAAAACGLAAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJEsAAAAAAAAkywAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkSwAAAAAAACRLAAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": "bn"
					},
					"AgAAAIcsAAAAAAAAiCwAAAAAAAAAAAAAiCwAAAAAAACJLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhywAAAAAAACHLAAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					2,
					"left_delete",
					null,
					"AgAAAIgsAAAAAAAAiCwAAAAAAAABAAAAbocsAAAAAAAAhywAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAAiSwAAAAAAACJLAAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": "new"
					},
					"AwAAAIcsAAAAAAAAiCwAAAAAAAAAAAAAiCwAAAAAAACJLAAAAAAAAAAAAACJLAAAAAAAAIosAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhywAAAAAAACHLAAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": " Error()."
					},
					"CQAAAIosAAAAAAAAiywAAAAAAAAAAAAAiywAAAAAAACMLAAAAAAAAAAAAACMLAAAAAAAAI0sAAAAAAAAAAAAAI0sAAAAAAAAjiwAAAAAAAAAAAAAjiwAAAAAAACPLAAAAAAAAAAAAACPLAAAAAAAAJAsAAAAAAAAAAAAAJAsAAAAAAAAkSwAAAAAAAAAAAAAkSwAAAAAAACSLAAAAAAAAAAAAACSLAAAAAAAAJMsAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiiwAAAAAAACKLAAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					5,
					"right_delete",
					null,
					"BQAAAJMsAAAAAAAAkywAAAAAAAABAAAAVZMsAAAAAAAAkywAAAAAAAABAAAAdJMsAAAAAAAAkywAAAAAAAABAAAAaZMsAAAAAAAAkywAAAAAAAABAAAAbJMsAAAAAAAAkywAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAkywAAAAAAACTLAAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"right_delete",
					null,
					"AQAAAJksAAAAAAAAmSwAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAmSwAAAAAAACZLAAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAJgsAAAAAAAAmCwAAAAAAAABAAAAKJgsAAAAAAAAmCwAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAmSwAAAAAAACZLAAAAAAAAAAAAAAAAPC/"
				],
				[
					164,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJgsAAAAAAAAmiwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmCwAAAAAAACYLAAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					2,
					"left_delete",
					null,
					"AgAAAJksAAAAAAAAmSwAAAAAAAABAAAAKZgsAAAAAAAAmCwAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAmiwAAAAAAACaLAAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJgsAAAAAAAAmiwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmCwAAAAAAACYLAAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					2,
					"left_delete",
					null,
					"AgAAAJksAAAAAAAAmSwAAAAAAAABAAAAKZgsAAAAAAAAmCwAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAmiwAAAAAAACaLAAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAJgsAAAAAAAAmSwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmCwAAAAAAACYLAAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAALsDAAAAAAAAvAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwMAAAAAAAC7AwAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"left_delete",
					null,
					"AQAAALsDAAAAAAAAuwMAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAvAMAAAAAAAC8AwAAAAAAAAAAAAAAAPC/"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAC8vAAAAAAAAMC8AAAAAAAAAAAAAMC8AAAAAAAAyLwAAAAAAAAAAAAAyLwAAAAAAADMvAAAAAAAAAAAAADMvAAAAAAAANS8AAAAAAAAAAAAAMC8AAAAAAAAwLwAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAALy8AAAAAAAAvLwAAAAAAAAAAAAAAAPC/"
				],
				[
					223,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAADMvAAAAAAAANS8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMy8AAAAAAAAzLwAAAAAAAAAAAAAAAPC/"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": "Symbol"
					},
					"BgAAADQvAAAAAAAANS8AAAAAAAAAAAAANS8AAAAAAAA2LwAAAAAAAAAAAAA2LwAAAAAAADcvAAAAAAAAAAAAADcvAAAAAAAAOC8AAAAAAAAAAAAAOC8AAAAAAAA5LwAAAAAAAAAAAAA5LwAAAAAAADovAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANC8AAAAAAAA0LwAAAAAAAAAAAAAAAPC/"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": ".,"
					},
					"AgAAADovAAAAAAAAOy8AAAAAAAAAAAAAOy8AAAAAAAA8LwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOi8AAAAAAAA6LwAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"left_delete",
					null,
					"AQAAADsvAAAAAAAAOy8AAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAPC8AAAAAAAA8LwAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": "inspect"
					},
					"BwAAADsvAAAAAAAAPC8AAAAAAAAAAAAAPC8AAAAAAAA9LwAAAAAAAAAAAAA9LwAAAAAAAD4vAAAAAAAAAAAAAD4vAAAAAAAAPy8AAAAAAAAAAAAAPy8AAAAAAABALwAAAAAAAAAAAABALwAAAAAAAEEvAAAAAAAAAAAAAEEvAAAAAAAAQi8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOy8AAAAAAAA7LwAAAAAAAAAAAAAAAPC/"
				],
				[
					229,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEMvAAAAAAAARS8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQy8AAAAAAABDLwAAAAAAAAAAAAAAAPC/"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": "iop"
					},
					"AwAAAEQvAAAAAAAARS8AAAAAAAAAAAAARS8AAAAAAABGLwAAAAAAAAAAAABGLwAAAAAAAEcvAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARC8AAAAAAABELwAAAAAAAAAAAAAAAPC/"
				],
				[
					231,
					3,
					"left_delete",
					null,
					"AwAAAEYvAAAAAAAARi8AAAAAAAABAAAAcEUvAAAAAAAARS8AAAAAAAABAAAAb0QvAAAAAAAARC8AAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAARy8AAAAAAABHLwAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": "options="
					},
					"CAAAAEQvAAAAAAAARS8AAAAAAAAAAAAARS8AAAAAAABGLwAAAAAAAAAAAABGLwAAAAAAAEcvAAAAAAAAAAAAAEcvAAAAAAAASC8AAAAAAAAAAAAASC8AAAAAAABJLwAAAAAAAAAAAABJLwAAAAAAAEovAAAAAAAAAAAAAEovAAAAAAAASy8AAAAAAAAAAAAASy8AAAAAAABMLwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARC8AAAAAAABELwAAAAAAAAAAAAAAAPC/"
				],
				[
					233,
					1,
					"insert",
					{
						"characters": " ä"
					},
					"AgAAAEwvAAAAAAAATS8AAAAAAAAAAAAATS8AAAAAAABOLwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATC8AAAAAAABMLwAAAAAAAAAAAAAAAPC/"
				],
				[
					234,
					1,
					"left_delete",
					null,
					"AQAAAE0vAAAAAAAATS8AAAAAAAACAAAAw6Q",
					"AQAAAAAAAAABAAAATi8AAAAAAABOLwAAAAAAAAAAAAAAAPC/"
				],
				[
					235,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAE0vAAAAAAAATy8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATS8AAAAAAABNLwAAAAAAAAAAAAAAAPC/"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFAvAAAAAAAAUS8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUC8AAAAAAABQLwAAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAFEvAAAAAAAAUy8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUS8AAAAAAABRLwAAAAAAAAAAAAAAAPC/"
				],
				[
					243,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAFIvAAAAAAAAUy8AAAAAAAAAAAAAUy8AAAAAAABVLwAAAAAAAAAAAABVLwAAAAAAAFYvAAAAAAAAAAAAAFYvAAAAAAAAWC8AAAAAAAAAAAAAUy8AAAAAAABTLwAAAAAAAAIAAAAgIFMvAAAAAAAAVy8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUi8AAAAAAABSLwAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": "for"
					},
					"BQAAADsvAAAAAAAAPC8AAAAAAAAAAAAAPC8AAAAAAAA8LwAAAAAAAAcAAABpbnNwZWN0TS8AAAAAAABNLwAAAAAAAAQAAAAgICAgPC8AAAAAAAA9LwAAAAAAAAAAAAA9LwAAAAAAAD4vAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOy8AAAAAAABCLwAAAAAAAAAAAAAAAPC/"
				],
				[
					251,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAD4vAAAAAAAAQC8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPi8AAAAAAAA+LwAAAAAAAAAAAAAAAPC/"
				],
				[
					252,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAD8vAAAAAAAAQS8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPy8AAAAAAAA/LwAAAAAAAAAAAAAAAPC/"
				],
				[
					253,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAEAvAAAAAAAAQS8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQC8AAAAAAABALwAAAAAAAAAAAAAAAPC/"
				],
				[
					254,
					1,
					"left_delete",
					null,
					"AQAAAEAvAAAAAAAAQC8AAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAQS8AAAAAAABBLwAAAAAAAAAAAAAAAPC/"
				],
				[
					255,
					1,
					"paste",
					null,
					"AQAAAEAvAAAAAAAAWi8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQC8AAAAAAABALwAAAAAAAAAAAAAAAPC/"
				],
				[
					263,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAC8vAAAAAAAAMC8AAAAAAAAAAAAAMC8AAAAAAAAyLwAAAAAAAAAAAAAyLwAAAAAAADMvAAAAAAAAAAAAADMvAAAAAAAANS8AAAAAAAAAAAAAMC8AAAAAAAAwLwAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAALy8AAAAAAAAvLwAAAAAAAAAAAAAAAPC/"
				],
				[
					264,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAADMvAAAAAAAANS8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMy8AAAAAAAAzLwAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": "Symbol."
					},
					"BwAAADQvAAAAAAAANS8AAAAAAAAAAAAANS8AAAAAAAA2LwAAAAAAAAAAAAA2LwAAAAAAADcvAAAAAAAAAAAAADcvAAAAAAAAOC8AAAAAAAAAAAAAOC8AAAAAAAA5LwAAAAAAAAAAAAA5LwAAAAAAADovAAAAAAAAAAAAADovAAAAAAAAOy8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANC8AAAAAAAA0LwAAAAAAAAAAAAAAAPC/"
				],
				[
					266,
					1,
					"insert",
					{
						"characters": "toStringTg"
					},
					"CgAAADsvAAAAAAAAPC8AAAAAAAAAAAAAPC8AAAAAAAA9LwAAAAAAAAAAAAA9LwAAAAAAAD4vAAAAAAAAAAAAAD4vAAAAAAAAPy8AAAAAAAAAAAAAPy8AAAAAAABALwAAAAAAAAAAAABALwAAAAAAAEEvAAAAAAAAAAAAAEEvAAAAAAAAQi8AAAAAAAAAAAAAQi8AAAAAAABDLwAAAAAAAAAAAABDLwAAAAAAAEQvAAAAAAAAAAAAAEQvAAAAAAAARS8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOy8AAAAAAAA7LwAAAAAAAAAAAAAAAPC/"
				],
				[
					267,
					1,
					"left_delete",
					null,
					"AQAAAEQvAAAAAAAARC8AAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAARS8AAAAAAABFLwAAAAAAAAAAAAAAAPC/"
				],
				[
					268,
					1,
					"insert",
					{
						"characters": "ag"
					},
					"AgAAAEQvAAAAAAAARS8AAAAAAAAAAAAARS8AAAAAAABGLwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARC8AAAAAAABELwAAAAAAAAAAAAAAAPC/"
				],
				[
					270,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEcvAAAAAAAASS8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARy8AAAAAAABHLwAAAAAAAAAAAAAAAPC/"
				],
				[
					272,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEkvAAAAAAAASi8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASS8AAAAAAABJLwAAAAAAAAAAAAAAAPC/"
				],
				[
					273,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAEovAAAAAAAATC8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASi8AAAAAAABKLwAAAAAAAAAAAAAAAPC/"
				],
				[
					274,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAEsvAAAAAAAATC8AAAAAAAAAAAAATC8AAAAAAABNLwAAAAAAAAAAAABNLwAAAAAAAE4vAAAAAAAAAAAAAE4vAAAAAAAATy8AAAAAAAAAAAAATy8AAAAAAABQLwAAAAAAAAAAAABQLwAAAAAAAFEvAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASy8AAAAAAABLLwAAAAAAAAAAAAAAAPC/"
				],
				[
					275,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFEvAAAAAAAAUi8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUS8AAAAAAABRLwAAAAAAAAAAAAAAAPC/"
				],
				[
					276,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAFIvAAAAAAAAVC8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUi8AAAAAAABSLwAAAAAAAAAAAAAAAPC/"
				],
				[
					277,
					1,
					"insert",
					{
						"characters": "Eg"
					},
					"AgAAAFMvAAAAAAAAVC8AAAAAAAAAAAAAVC8AAAAAAABVLwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUy8AAAAAAABTLwAAAAAAAAAAAAAAAPC/"
				],
				[
					278,
					1,
					"left_delete",
					null,
					"AQAAAFQvAAAAAAAAVC8AAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAAVS8AAAAAAABVLwAAAAAAAAAAAAAAAPC/"
				],
				[
					279,
					1,
					"insert",
					{
						"characters": "dge"
					},
					"AwAAAFQvAAAAAAAAVS8AAAAAAAAAAAAAVS8AAAAAAABWLwAAAAAAAAAAAABWLwAAAAAAAFcvAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVC8AAAAAAABULwAAAAAAAAAAAAAAAPC/"
				],
				[
					281,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFgvAAAAAAAAWS8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWC8AAAAAAABYLwAAAAAAAAAAAAAAAPC/"
				],
				[
					282,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFkvAAAAAAAAWi8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWS8AAAAAAABZLwAAAAAAAAAAAAAAAPC/"
				],
				[
					284,
					1,
					"insert",
					{
						"characters": "get"
					},
					"AwAAADMvAAAAAAAANC8AAAAAAAAAAAAANC8AAAAAAAA1LwAAAAAAAAAAAAA1LwAAAAAAADYvAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMy8AAAAAAAAzLwAAAAAAAAAAAAAAADJA"
				],
				[
					285,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADYvAAAAAAAANy8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANi8AAAAAAAA2LwAAAAAAAAAAAAAAAPC/"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAEcrAAAAAAAASCsAAAAAAAAAAAAASCsAAAAAAABIKwAAAAAAAA0AAABleHRlbmRzIExpbmUg",
					"AQAAAAAAAAABAAAARysAAAAAAABUKwAAAAAAAAAAAAAAAPC/"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAIYrAAAAAAAAhysAAAAAAAAAAAAAhysAAAAAAACIKwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhisAAAAAAACGKwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/geom/rect.js",
			"settings":
			{
				"buffer_size": 15697,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKQvAAAAAAAApS8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApC8AAAAAAACkLwAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"left_delete",
					null,
					"AQAAAKQvAAAAAAAApC8AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAApS8AAAAAAAClLwAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAJEvAAAAAAAAki8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkS8AAAAAAACRLwAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " S"
					},
					"AgAAAJIvAAAAAAAAky8AAAAAAAAAAAAAky8AAAAAAACULwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAki8AAAAAAACSLwAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"left_delete",
					null,
					"AQAAAJMvAAAAAAAAky8AAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAAlC8AAAAAAACULwAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJMvAAAAAAAAlC8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAky8AAAAAAACTLwAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"left_delete",
					null,
					"AQAAAJMvAAAAAAAAky8AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAlC8AAAAAAACULwAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "[Symbol."
					},
					"CAAAAJMvAAAAAAAAlC8AAAAAAAAAAAAAlC8AAAAAAACVLwAAAAAAAAAAAACVLwAAAAAAAJYvAAAAAAAAAAAAAJYvAAAAAAAAly8AAAAAAAAAAAAAly8AAAAAAACYLwAAAAAAAAAAAACYLwAAAAAAAJkvAAAAAAAAAAAAAJkvAAAAAAAAmi8AAAAAAAAAAAAAmi8AAAAAAACbLwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAky8AAAAAAACTLwAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "toStr"
					},
					"BgAAAJsvAAAAAAAAnC8AAAAAAAAAAAAAnC8AAAAAAACcLwAAAAAAAA4AAABSZWN0LnByb3RvdHlwZZwvAAAAAAAAnS8AAAAAAAAAAAAAnS8AAAAAAACeLwAAAAAAAAAAAACeLwAAAAAAAJ8vAAAAAAAAAAAAAJ8vAAAAAAAAoC8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmy8AAAAAAACpLwAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert_completion",
					{
						"completion": "toStringTag",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "toStringTag"
					},
					"AgAAAJsvAAAAAAAAmy8AAAAAAAAFAAAAdG9TdHKbLwAAAAAAAKYvAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoC8AAAAAAACgLwAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "]:"
					},
					"AgAAAKYvAAAAAAAApy8AAAAAAAAAAAAApy8AAAAAAACoLwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApi8AAAAAAACmLwAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKgvAAAAAAAAqS8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqC8AAAAAAACoLwAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAKkvAAAAAAAAqy8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqS8AAAAAAACpLwAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "Rect"
					},
					"BAAAAKovAAAAAAAAqy8AAAAAAAAAAAAAqy8AAAAAAACsLwAAAAAAAAAAAACsLwAAAAAAAK0vAAAAAAAAAAAAAK0vAAAAAAAAri8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqi8AAAAAAACqLwAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAAK8vAAAAAAAAsC8AAAAAAAAAAAAAsC8AAAAAAACxLwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAry8AAAAAAACvLwAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAHcvAAAAAAAAeS8AAAAAAAAAAAAAYi8AAAAAAABkLwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYi8AAAAAAAB3LwAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAALUvAAAAAAAAty8AAAAAAAAAAAAAky8AAAAAAACVLwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAky8AAAAAAAC1LwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/geom/line.js",
			"settings":
			{
				"buffer_size": 15229,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					16,
					1,
					"insert",
					{
						"characters": "this[Symbol"
					},
					"CwAAABwjAAAAAAAAHSMAAAAAAAAAAAAAHSMAAAAAAAAeIwAAAAAAAAAAAAAeIwAAAAAAAB8jAAAAAAAAAAAAAB8jAAAAAAAAICMAAAAAAAAAAAAAICMAAAAAAAAhIwAAAAAAAAAAAAAhIwAAAAAAACIjAAAAAAAAAAAAACIjAAAAAAAAIyMAAAAAAAAAAAAAIyMAAAAAAAAkIwAAAAAAAAAAAAAkIwAAAAAAACUjAAAAAAAAAAAAACUjAAAAAAAAJiMAAAAAAAAAAAAAJiMAAAAAAAAnIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHCMAAAAAAAAcIwAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": ".to"
					},
					"AwAAACcjAAAAAAAAKCMAAAAAAAAAAAAAKCMAAAAAAAApIwAAAAAAAAAAAAApIwAAAAAAACojAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJyMAAAAAAAAnIwAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert_completion",
					{
						"completion": "toStringTag",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "toStringTag"
					},
					"AgAAACgjAAAAAAAAKCMAAAAAAAACAAAAdG8oIwAAAAAAADMjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKiMAAAAAAAAqIwAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "]+'"
					},
					"AwAAADMjAAAAAAAANCMAAAAAAAAAAAAANCMAAAAAAAA1IwAAAAAAAAAAAAA1IwAAAAAAADYjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMyMAAAAAAAAzIwAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " '"
					},
					"AgAAADYjAAAAAAAANyMAAAAAAAAAAAAANyMAAAAAAAA4IwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANiMAAAAAAAA2IwAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					8,
					"right_delete",
					null,
					"CAAAADgjAAAAAAAAOCMAAAAAAAABAAAAJzgjAAAAAAAAOCMAAAAAAAABAAAATDgjAAAAAAAAOCMAAAAAAAABAAAAaTgjAAAAAAAAOCMAAAAAAAABAAAAbjgjAAAAAAAAOCMAAAAAAAABAAAAZTgjAAAAAAAAOCMAAAAAAAABAAAAIDgjAAAAAAAAOCMAAAAAAAABAAAAJzgjAAAAAAAAOCMAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAOCMAAAAAAAA4IwAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"left_delete",
					null,
					"AQAAADkjAAAAAAAAOSMAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAOiMAAAAAAAA6IwAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"remove pac",
				"Package Control: Remove Package"
			],
			[
				"lebab",
				"Lebab: transform to ES6"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"schemeed",
				"SchemeEditor: Edit installed scheme"
			],
			[
				"scherme ed",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"repo",
				"Package Control: Add Repository"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"sche",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"packag",
				"Package Control: List Unmanaged Packages"
			],
			[
				"list pa",
				"Package Control: List Packages"
			],
			[
				"packa",
				"PackageResourceViewer: Extract All Packages"
			],
			[
				"extra",
				"PackageResourceViewer: Extract Package"
			],
			[
				"scheme",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"edit",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"install pack",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 178.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/rsenn/wild-beauty",
		"/home/roman/Projects/rsenn/wild-beauty/node_modules",
		"/home/roman/Projects/rsenn/wild-beauty/node_modules/react",
		"/home/roman/Projects/rsenn/wild-beauty/node_modules/react/cjs"
	],
	"file_history":
	[
		"/home/roman/Projects/rsenn/wild-beauty/pages/tree.js",
		"/home/roman/Projects/rsenn/wild-beauty/lib/dom/element.js",
		"/home/roman/Projects/rsenn/wild-beauty/lib/devtools.js",
		"/home/roman/Projects/rsenn/wild-beauty/imageConversion.js",
		"/home/roman/Projects/rsenn/wild-beauty/components/upload/RUG.js",
		"/home/roman/Projects/rsenn/wild-beauty/stores/functions.js",
		"/home/roman/Projects/rsenn/wild-beauty/components/views/imageUpload.js",
		"/home/roman/Projects/rsenn/wild-beauty/pages/new.js",
		"/home/roman/Projects/rsenn/wild-beauty/lib/touchHandler.js",
		"/home/roman/Projects/rsenn/wild-beauty/server.js",
		"/home/roman/Projects/rsenn/wild-beauty/static/wasm/bpgdec.wasm.js",
		"/home/roman/Projects/rsenn/wild-beauty/static/html/bpgdec.js",
		"/home/roman/Projects/rsenn/wild-beauty/stores/api.js",
		"/home/roman/Projects/rsenn/wild-beauty/query.js",
		"/home/roman/Projects/rsenn/wild-beauty/lib/trkl.js",
		"/home/roman/Projects/rsenn/wild-beauty/lib/dom/rect.js",
		"/home/roman/the-wild-beauty-company/pages/new.js",
		"/home/roman/the-wild-beauty-company/components/views/imageUpload.js",
		"/home/roman/Projects/rsenn/wild-beauty/lib/dom/line.js",
		"/home/roman/Projects/rsenn/wild-beauty/polyserver/delaunay.js",
		"/home/roman/wild-beauty/lib/dom/rect.js",
		"/home/roman/wild-beauty/pages/new/[photo_id].js",
		"/home/roman/wild-beauty/pages/new.js",
		"/home/roman/wild-beauty/README.md",
		"/home/roman/wild-beauty/components/views/draggableList.js",
		"/home/roman/wild-beauty/lib/touchHandler.js",
		"/home/roman/the-wild-beauty-company/lib/touchHandler.js",
		"/home/roman/wild-beauty/lib/lazyInitializer.js",
		"/home/roman/wild-beauty/components/views/imageUpload.js",
		"/home/roman/wild-beauty/components/upload/RUG.js",
		"/home/roman/wild-beauty/wild-beauty.sublime-project",
		"/home/roman/wild-beauty/package.json",
		"/home/roman/wild-beauty/lib/util.js",
		"/home/roman/wild-beauty/components/views/itemEditor.js",
		"/home/roman/the-wild-beauty-company/lib/util.js",
		"/home/roman/wild-beauty/pages/show/[id].js",
		"/home/roman/wild-beauty/lib/dom/point.js",
		"/home/roman/wild-beauty/lib/dom/line.js",
		"/home/roman/wild-beauty/lib/devtools.js",
		"/home/roman/wild-beauty/node_modules/@ampproject/toolbox-optimizer/lib/transformers/ServerSideRendering.js",
		"/home/roman/the-wild-beauty-company/components/views/itemEditor.js",
		"/home/roman/the-wild-beauty-company/pages/new/[photo_id].js",
		"/home/roman/wild-beauty/stores/EditorStore.js",
		"/home/roman/the-wild-beauty-company/node_modules/mobx/lib/mobx.module.js",
		"/home/roman/wild-beauty/lib/dom/svg.js",
		"/home/roman/wild-beauty/lib/dom/pointList.js",
		"/home/roman/wild-beauty/pages/tree.js",
		"/home/roman/wild-beauty/stores/RootStore.js",
		"/home/roman/wild-beauty/lib/dominate.essential.js",
		"/home/roman/wild-beauty/lib/dom.js",
		"/home/roman/wild-beauty/lib/dom/element.js",
		"/home/roman/wild-beauty/lib/dom/elementRect.js",
		"/home/roman/the-wild-beauty-company/pages/list.js",
		"/home/roman/wild-beauty/lib/svg/path.js",
		"/home/roman/wild-beauty/action-save-new.svg",
		"/home/roman/wild-beauty/test-path.js",
		"/home/roman/wild-beauty/lib/dom/timer.js",
		"/home/roman/wild-beauty/lib/svg/load.js",
		"/home/roman/wild-beauty/lib/svg/path-parser.js",
		"/home/roman/the-wild-beauty-company/node_modules/svg-path-parser/index.js",
		"/home/roman/the-wild-beauty-company/node_modules/svg-path-parser/parser.js",
		"/home/roman/the-wild-beauty-company/lib/dom/element.js",
		"/home/roman/the-wild-beauty-company/stores/RootStore.js",
		"/home/roman/the-wild-beauty-company/lib/dom/svg.js",
		"/home/roman/wild-beauty/lib/svg/path_parse.js",
		"/home/roman/the-wild-beauty-company/lib/dom/pointList.js",
		"/home/roman/wild-beauty/components/views/treeGraph.js",
		"/home/roman/wild-beauty/components/simple/svgText.js",
		"/home/roman/the-wild-beauty-company/lib/dom/rect.js",
		"/home/roman/wild-beauty/lib/dom/size.js",
		"/home/roman/the-wild-beauty-company/pages/tree.js",
		"/home/roman/wild-beauty/lib/alea.js",
		"/home/roman/wild-beauty/lib/fd-graph.js",
		"/home/roman/wild-beauty/lib/lua.js",
		"/home/roman/wild-beauty/stores/functions.js",
		"/home/roman/wild-beauty/test-alea.js",
		"/home/roman/the-wild-beauty-company/lib/fd-graph.js",
		"/home/roman/the-wild-beauty-company/pages/show.js",
		"/home/roman/wild-beauty/components/views/treeView.js",
		"/home/roman/the-wild-beauty-company/components/simple/svgText.js",
		"/home/roman/wild-beauty/components/layout.js",
		"/home/roman/wild-beauty/pages/_app.js",
		"/home/roman/the-wild-beauty-company/components/nav.js",
		"/home/roman/the-wild-beauty-company/pages/_app.js",
		"/home/roman/wild-beauty/components/nav.js",
		"/home/roman/the-wild-beauty-company/hyphenate.js",
		"/home/roman/the-wild-beauty-company/components/views/treeGraph.js",
		"/home/roman/wild-beauty/lib/dom/align.js",
		"/home/roman/wild-beauty/pages/show.js",
		"/home/roman/wild-beauty/pages/browse.js",
		"/home/roman/wild-beauty/lib/dom/bbox.js",
		"/home/roman/wild-beauty/components/graph.js",
		"/home/roman/wild-beauty/stores/api.js",
		"/home/roman/wild-beauty/stores/queries.js",
		"/home/roman/the-wild-beauty-company/static/img/action-save-new.svg",
		"/home/roman/the-wild-beauty-company/static/img/icon-editbox-add.svg",
		"/home/roman/wild-beauty/components/simple/editableField.js",
		"/home/roman/wild-beauty/lib/devpane.js",
		"/home/roman/the-wild-beauty-company/pages/browse.js",
		"/home/roman/the-wild-beauty-company/icon-editbox-add.svg",
		"/home/roman/the-wild-beauty-company/action-save-new.svg",
		"/home/roman/wild-beauty/query.js",
		"/home/roman/wild-beauty/server.js",
		"/home/roman/wild-beauty/imageConversion.js",
		"/home/roman/wild-beauty/components/views/toastsContainer.js",
		"/home/roman/the-wild-beauty-company/components/simple/editableField.js",
		"/home/roman/the-wild-beauty-company/components/upload/RUG.js",
		"/home/roman/wild-beauty/components/upload/view/List.js",
		"/home/roman/wild-beauty/components/upload/view/Card.js",
		"/home/roman/the-wild-beauty-company/lib/dom/timer.js",
		"/home/roman/wild-beauty/server.log",
		"/home/roman/wild-beauty/lib/util.es5.js",
		"/home/roman/wild-beauty/pages/test.js",
		"/home/roman/wild-beauty/components/simple/layer.js",
		"/home/roman/the-wild-beauty-company/stores/api.js",
		"/home/roman/wild-beauty/pages/index.js",
		"/home/roman/wild-beauty/pages/list.js",
		"/home/roman/wild-beauty/pages/panes.js",
		"/home/roman/wild-beauty/pages/oldindex.js",
		"/home/roman/wild-beauty/lib/dom/layer.js",
		"/home/roman/the-wild-beauty-company/lib/autoStore.js",
		"/home/roman/wild-beauty/components/simple/circleSegment.js",
		"/home/roman/wild-beauty/lib/autoStore.js",
		"/home/roman/wild-beauty/lib/autoStore.es5.js",
		"/home/roman/wild-beauty/lib/swipeTracker.js",
		"/home/roman/wild-beauty/lib/monotone-cubic-spline.js",
		"/home/roman/wild-beauty/lib/qrcode.js",
		"/home/roman/the-wild-beauty-company/lib/devpane.js"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 153.0,
		"where_history":
		[
			"/home/roman/wild-beauty/lib,/home/roman/wild-beauty/pages,/home/roman/wild-beauty/components,/home/roman/wild-beauty/stores,/home/roman/wild-beauty/static,*.js,*.css",
			"/home/roman/awild-beauty/lib,/home/roman/wild-beauty/pages,/home/roman/wild-beauty/components,/home/roman/wild-beauty/stores,/home/roman/wild-beauty/static,*.js,*.css",
			"/home/roman/wild-beauty/lib,/home/roman/wild-beauty/pages,/home/roman/wild-beauty/components,/home/roman/wild-beauty/stores,/home/roman/wild-beauty/static,*.js,*.css",
			"/home/roman/wild-beauty/lib,/home/roman/wild-beauty/pages,/home/roman/wild-beauty/components,/home/roman/wild-beauty/stores,*.js",
			"/home/roman/wild-beauty/lib,/home/roman/wild-beauty/pages,/home/roman/wild-beauty/components,/home/roman/wild-beauty/stores,/home/roman/wild-beauty/*.js,*.js",
			"/home/roman/wild-beauty/lib,/home/roman/wild-beauty/pages,/home/roman/wild-beauty/components,/home/roman/wild-beauty/stores,/home/roman/wild-beauty,*.js",
			"/home/roman/wild-beauty/lib,/home/roman/wild-beauty/pages,/home/roman/wild-beauty/components,/home/roman/wild-beauty/stores,*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"apiRequest",
			"svgRef",
			"SvgOverlay",
			"SvgLayer",
			"parent",
			"this.svg",
			"Util.entries =",
			"Util.entries",
			"dev",
			"loadItems",
			"Error\\.",
			"axios ERROR",
			"item:",
			"['\"`]g.bbox",
			"g.bbox",
			"mobxStore",
			"'Line",
			"inspect",
			"class Edge",
			"new Edge",
			"overflow: auto",
			": auto",
			"upload-card",
			"console.log.*RUG",
			"console.log.*__rec",
			"import.*trkl",
			"\"upload-card",
			"\\.upload-card",
			"function rec",
			"walkUp",
			"inside",
			"walk",
			"findAll",
			"SelectionRe",
			"upload",
			"receiveInstantiatedSource",
			"instantiateAsync",
			"wasmBinaryFile",
			"\\.wasm",
			"wasmBinaryFile",
			"instantiate",
			"wasmBinaryFile",
			"\\.wasm",
			"onSucc",
			"console.log",
			"log.*-entry",
			"mobile",
			"json",
			": Movement",
			"end.subs",
			"subscribe",
			"cancel",
			"MovementList",
			"cancel",
			"MovementListener",
			"SelectionListener",
			"SelectionLis",
			"defineGetter",
			"definenGetter",
			"toObject",
			"toObject = ",
			"toObject",
			"Util[^ ]*bject",
			"entries =",
			"fromEntries =",
			"fromEntries",
			"No image",
			"toStrinng",
			"match =",
			"extendArray =",
			"extendArray",
			"\\.last =",
			"last =",
			"\"last\"",
			"defineGetterSetter",
			"defineGetterSetter =",
			"extend",
			"last",
			"filter =",
			"Util.filter",
			"Util.foreach",
			"traverse",
			"filter =",
			"walkTree",
			"makeTree",
			"Tree value",
			"Tree.value",
			"parent",
			"trbl",
			"move",
			"move\\(",
			"removeEqual",
			"toHash",
			"ElementRectProxy",
			"position",
			"equal",
			"tmpü",
			"toString",
			" !",
			"PointList",
			".add =",
			"line_iter",
			"Polyline",
			"PointList",
			"line_iter",
			"scanSegment",
			"finalizeSegment",
			"for.let.* in ",
			"extend",
			"extend =",
			"extend",
			"padFn",
			"pad =",
			"round =",
			"angle =",
			"diff =",
			"fromAngle",
			"toPath",
			"isArray",
			"function img",
			"filter =",
			"methods",
			"window.dom",
			"global.window",
			"static find",
			"CSSTra",
			"CSSTransformSetters",
			"scale\\("
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"../lib/svg/overlay.js",
			"  ",
			"Util.\\1 = \\2 => { return \\3 }",
			"",
			"linearGradient",
			"",
			"* DEG2RAD",
			"editing",
			"",
			"api/photo/upload",
			"react-sortable-hoc",
			"prop-types",
			"",
			"icon-edit-",
			"entries",
			"",
			"sep",
			"newData",
			"",
			"imageImport",
			"\\2\\1",
			"\\1",
			"//console.log",
			"TreePage.",
			"\"Transition ",
			"Timer.std"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": false,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 227,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"color_scheme": "Packages/Outline/outline.hidden-tmTheme",
							"current_file": "/home/roman/wild-beauty/pages/tree.js",
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									4566,
									4574
								],
								[
									5378,
									5411
								],
								[
									7057,
									7067
								],
								[
									10280,
									10298
								],
								[
									11785,
									11801
								],
								[
									12228,
									12247
								],
								[
									12330,
									12350
								],
								[
									13509,
									13540
								],
								[
									13599,
									13623
								],
								[
									13731,
									13747
								],
								[
									13884,
									13907
								],
								[
									17667,
									17675
								]
							],
							"symlist":
							[
								"TreePage",
								"  static getInitialProps(ctx)",
								"  function()",
								"  constructor(props)",
								"  checkTagRemove()",
								"  componentDidMount()",
								"  componentDidUpdate()",
								"  getNum(elem, name)",
								"  getId(elem)",
								"  selectNode(item)",
								"  treeSelEvent(type, arg)",
								"  render()"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632290041.08,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "/home/roman/wild-beauty/pages/tree.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25520,
						"regions":
						{
						},
						"selection":
						[
							[
								8146,
								8085
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632290813.68,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3860.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "lib/geom/point.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11103,
						"regions":
						{
						},
						"selection":
						[
							[
								10500,
								10517
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632290813.41,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5529.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "pages/tree.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25520,
						"regions":
						{
						},
						"selection":
						[
							[
								10877,
								10877
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632288725.26,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5067.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/dom/svg.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17256,
						"regions":
						{
						},
						"selection":
						[
							[
								1636,
								1636
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632289611.79,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 309.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "lib/svg/overlay.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3575,
						"regions":
						{
							"col_00FF00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2546,
										2558
									]
								],
								"scope": "col_00FF00FF"
							},
							"col_00FF00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FF00FF_circle.png",
								"regions":
								[
									[
										2529,
										2529
									]
								],
								"scope": "col_gutter"
							},
							"col_010101FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2496,
										2500
									]
								],
								"scope": "col_010101FF"
							},
							"col_010101FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_010101FF_circle.png",
								"regions":
								[
									[
										2477,
										2477
									]
								],
								"scope": "col_gutter"
							},
							"col_FF0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										3059,
										3062
									]
								],
								"scope": "col_FF0000FF"
							},
							"col_FF0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF0000FF_circle.png",
								"regions":
								[
									[
										3042,
										3042
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								3541,
								3541
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632290149.1,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2295.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "stores/RootStore.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12510,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632290170.52,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5508.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/home/roman/wild-beauty/stores/queries.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6310,
						"regions":
						{
						},
						"selection":
						[
							[
								5730,
								5790
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632290813.01,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2456.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1247,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JSON/JSON.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632290812.22,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 204.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "node_modules/react/index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 190,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632290031.75,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "node_modules/react/cjs/react.development.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 72141,
						"regions":
						{
						},
						"selection":
						[
							[
								64082,
								64126
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632290811.43,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 37324.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/home/roman/wild-beauty/pages/new.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7439,
						"regions":
						{
						},
						"selection":
						[
							[
								7172,
								7172
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632289845.55,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3255.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/home/roman/wild-beauty/lib/axios.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1370,
						"regions":
						{
						},
						"selection":
						[
							[
								801,
								801
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632279163.94,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15599,
						"regions":
						{
						},
						"selection":
						[
							[
								2488,
								2491
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632290809.47,
							"tabs_extra_last_activated_sheet_index": 12,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2040.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "stores/queries.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6310,
						"regions":
						{
						},
						"selection":
						[
							[
								5779,
								5779
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632280025.67,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2499.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "lib/lazyInitializer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4906,
						"regions":
						{
						},
						"selection":
						[
							[
								1034,
								1034
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632288158.0,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 156.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "lib/util.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 183809,
						"regions":
						{
							"col_000000CC":
							{
								"flags": 16,
								"regions":
								[
									[
										47748,
										47763
									]
								],
								"scope": "col_000000CC"
							},
							"col_000000CC_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_000000CC_circle.png",
								"regions":
								[
									[
										47685,
										47685
									]
								],
								"scope": "col_gutter"
							},
							"col_000050FF":
							{
								"flags": 16,
								"regions":
								[
									[
										134206,
										134217
									]
								],
								"scope": "col_000050FF"
							},
							"col_000050FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_000050FF_circle.png",
								"regions":
								[
									[
										134127,
										134127
									]
								],
								"scope": "col_gutter"
							},
							"col_0000A0FF":
							{
								"flags": 16,
								"regions":
								[
									[
										134334,
										134346
									]
								],
								"scope": "col_0000A0FF"
							},
							"col_0000A0FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000A0FF_circle.png",
								"regions":
								[
									[
										134127,
										134127
									]
								],
								"scope": "col_gutter"
							},
							"col_005000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										134175,
										134186
									]
								],
								"scope": "col_005000FF"
							},
							"col_005000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_005000FF_circle.png",
								"regions":
								[
									[
										134127,
										134127
									]
								],
								"scope": "col_gutter"
							},
							"col_005050FF":
							{
								"flags": 16,
								"regions":
								[
									[
										134237,
										134249
									]
								],
								"scope": "col_005050FF"
							},
							"col_005050FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_005050FF_circle.png",
								"regions":
								[
									[
										134127,
										134127
									]
								],
								"scope": "col_gutter"
							},
							"col_00A000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										134300,
										134312
									]
								],
								"scope": "col_00A000FF"
							},
							"col_00A000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00A000FF_circle.png",
								"regions":
								[
									[
										134127,
										134127
									]
								],
								"scope": "col_gutter"
							},
							"col_00A0A0FF":
							{
								"flags": 16,
								"regions":
								[
									[
										134368,
										134382
									]
								],
								"scope": "col_00A0A0FF"
							},
							"col_00A0A0FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00A0A0FF_circle.png",
								"regions":
								[
									[
										134127,
										134127
									]
								],
								"scope": "col_gutter"
							},
							"col_010101FF":
							{
								"flags": 16,
								"regions":
								[
									[
										48186,
										48191
									],
									[
										124376,
										124381
									],
									[
										134146,
										134156
									],
									[
										134270,
										134280
									]
								],
								"scope": "col_010101FF"
							},
							"col_010101FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_010101FF_circle.png",
								"regions":
								[
									[
										47993,
										47993
									],
									[
										124337,
										124337
									],
									[
										134127,
										134127
									]
								],
								"scope": "col_gutter"
							},
							"col_4444DDFF":
							{
								"flags": 16,
								"regions":
								[
									[
										47799,
										47806
									]
								],
								"scope": "col_4444DDFF"
							},
							"col_4444DDFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_4444DDFF_circle.png",
								"regions":
								[
									[
										47685,
										47685
									]
								],
								"scope": "col_gutter"
							},
							"col_500000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										134160,
										134171
									]
								],
								"scope": "col_500000FF"
							},
							"col_500000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_500000FF_circle.png",
								"regions":
								[
									[
										134127,
										134127
									]
								],
								"scope": "col_gutter"
							},
							"col_500050FF":
							{
								"flags": 16,
								"regions":
								[
									[
										134221,
										134233
									]
								],
								"scope": "col_500050FF"
							},
							"col_500050FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_500050FF_circle.png",
								"regions":
								[
									[
										134127,
										134127
									]
								],
								"scope": "col_gutter"
							},
							"col_505000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										134190,
										134202
									]
								],
								"scope": "col_505000FF"
							},
							"col_505000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_505000FF_circle.png",
								"regions":
								[
									[
										134127,
										134127
									]
								],
								"scope": "col_gutter"
							},
							"col_505050FF":
							{
								"flags": 16,
								"regions":
								[
									[
										134253,
										134266
									]
								],
								"scope": "col_505050FF"
							},
							"col_505050FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_505050FF_circle.png",
								"regions":
								[
									[
										134127,
										134127
									]
								],
								"scope": "col_gutter"
							},
							"col_7FFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										121195,
										121205
									]
								],
								"scope": "col_7FFFFFFF"
							},
							"col_7FFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_7FFFFFFF_circle.png",
								"regions":
								[
									[
										121180,
										121180
									]
								],
								"scope": "col_gutter"
							},
							"col_A00000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										134284,
										134296
									]
								],
								"scope": "col_A00000FF"
							},
							"col_A00000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_A00000FF_circle.png",
								"regions":
								[
									[
										134127,
										134127
									]
								],
								"scope": "col_gutter"
							},
							"col_A000A0FF":
							{
								"flags": 16,
								"regions":
								[
									[
										134350,
										134364
									]
								],
								"scope": "col_A000A0FF"
							},
							"col_A000A0FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_A000A0FF_circle.png",
								"regions":
								[
									[
										134127,
										134127
									]
								],
								"scope": "col_gutter"
							},
							"col_A0A000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										134316,
										134330
									]
								],
								"scope": "col_A0A000FF"
							},
							"col_A0A000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_A0A000FF_circle.png",
								"regions":
								[
									[
										134127,
										134127
									]
								],
								"scope": "col_gutter"
							},
							"col_A0A0A0FF":
							{
								"flags": 16,
								"regions":
								[
									[
										134386,
										134402
									]
								],
								"scope": "col_A0A0A0FF"
							},
							"col_A0A0A0FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_A0A0A0FF_circle.png",
								"regions":
								[
									[
										134127,
										134127
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										120959,
										120969
									],
									[
										124383,
										124388
									]
								],
								"scope": "col_FFFFFFFF"
							},
							"col_FFFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFFFFFF_circle.png",
								"regions":
								[
									[
										120906,
										120906
									],
									[
										124337,
										124337
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								86669,
								86701
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632279545.55,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 48878.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "pages/_app.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8880,
						"regions":
						{
						},
						"selection":
						[
							[
								3908,
								3908
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632279600.85,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 924.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "stores/functions.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4829,
						"regions":
						{
						},
						"selection":
						[
							[
								2777,
								2777
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632272391.16,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1071.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "lib/fd-graph.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12273,
						"regions":
						{
						},
						"selection":
						[
							[
								11144,
								11144
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632272631.79,
							"tabs_extra_last_activated_sheet_index": 2,
							"tabs_extra_moving":
							[
								12,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6617.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "lib/geom/rect.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15697,
						"regions":
						{
						},
						"selection":
						[
							[
								12181,
								12215
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632272810.02,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 83.0,
						"translation.y": 7025.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "lib/geom/line.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15229,
						"regions":
						{
						},
						"selection":
						[
							[
								1869,
								1870
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1632272594.35,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 786.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 57.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.646658711217,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Lebab_Warning":
	{
		"height": 140.0
	},
	"output.doc":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 252.0
	},
	"output.unsaved_changes":
	{
		"height": 134.0
	},
	"pinned_build_system": "",
	"project": "wild-beauty.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"server",
				"server.js"
			],
			[
				"rootStore",
				"stores/RootStore.js"
			],
			[
				"svg.",
				"lib/dom/svg.js"
			],
			[
				"_app",
				"pages/_app.js"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"server.js",
				"server.js"
			],
			[
				"point",
				"lib/geom/point.js"
			],
			[
				"line.js",
				"lib/geom/line.js"
			],
			[
				"trkl",
				"lib/trkl.js"
			],
			[
				"devtoo",
				"lib/devtools.js"
			],
			[
				"imageConv",
				"imageConversion.js"
			],
			[
				"Eleme",
				"lib/dom/element.js"
			],
			[
				"eleme",
				"lib/dom/element.js"
			],
			[
				"rect",
				"lib/dom/rect.js"
			],
			[
				"rect.js",
				"lib/dom/rect.js"
			],
			[
				"",
				"lib/dom/element.js"
			],
			[
				"lin",
				"lib/dom/line.js"
			],
			[
				"bpgdec.wasm.js",
				"static/wasm/bpgdec.wasm.js"
			],
			[
				"bpgdec",
				"static/html/bpgdec.js"
			],
			[
				"package",
				"package.json"
			],
			[
				"new.js",
				"pages/new.js"
			],
			[
				"README",
				"README.md"
			],
			[
				"new",
				"pages/new.js"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"line",
				"lib/dom/line.js"
			],
			[
				"editorSt",
				"stores/EditorStore.js"
			],
			[
				"pointList",
				"lib/dom/pointList.js"
			],
			[
				"poin",
				"lib/dom/pointList.js"
			],
			[
				"dom",
				"lib/dom.js"
			],
			[
				"dom.js",
				"lib/dom.js"
			],
			[
				"rootSt",
				"stores/RootStore.js"
			],
			[
				"action-save",
				"action-save-new.svg"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"point.js",
				"lib/dom/point.js"
			],
			[
				"svg.j",
				"lib/dom/svg.js"
			],
			[
				"elementRec",
				"lib/dom/elementRect.js"
			],
			[
				"elemen",
				"lib/dom/element.js"
			],
			[
				"size.js",
				"lib/dom/size.js"
			],
			[
				"alea.js",
				"lib/alea.js"
			],
			[
				"fd-gra",
				"lib/fd-graph.js"
			],
			[
				"test-alea",
				"test-alea.js"
			],
			[
				"test-al",
				"test-alea.js"
			],
			[
				"alea",
				"lib/alea.js"
			],
			[
				"func",
				"stores/functions.js"
			],
			[
				"treeV",
				"components/views/treeView.js"
			],
			[
				"size",
				"lib/dom/size.js"
			],
			[
				"fd-graph",
				"lib/fd-graph.js"
			],
			[
				"rect.",
				"lib/dom/rect.js"
			],
			[
				"treeGra",
				"components/views/treeGraph.js"
			],
			[
				"tree.s",
				"pages/tree.js"
			],
			[
				"bbox",
				"lib/dom/bbox.js"
			],
			[
				"tree",
				"pages/tree.js"
			],
			[
				"api",
				"stores/api.js"
			],
			[
				"browse",
				"pages/browse.js"
			],
			[
				"query.js",
				"query.js"
			],
			[
				"api.j",
				"stores/api.js"
			],
			[
				"quer",
				"stores/queries.js"
			],
			[
				"toast",
				"components/views/toastsContainer.js"
			],
			[
				"_app.js",
				"pages/_app.js"
			],
			[
				"RUG",
				"components/upload/RUG.js"
			],
			[
				"imageC",
				"imageConversion.js"
			],
			[
				"queries",
				"stores/queries.js"
			],
			[
				"server.",
				"server.js"
			],
			[
				"api.",
				"stores/api.js"
			],
			[
				"upload",
				"components/views/imageUpload.js"
			],
			[
				"imageUp",
				"components/views/imageUpload.js"
			],
			[
				"api.js",
				"stores/api.js"
			],
			[
				"layer.js",
				"lib/dom/layer.js"
			],
			[
				"index.",
				"lib/index.js"
			],
			[
				"devpa",
				"lib/devpane.js"
			],
			[
				"eagle.js",
				"lib/eagle.js"
			],
			[
				"lua.js",
				"lib/lua.js"
			],
			[
				"util.",
				"lib/util.js"
			],
			[
				"circ",
				"components/simple/circleSegment.js"
			],
			[
				"elem",
				"lib/dom/element.js"
			],
			[
				"_app.j",
				"pages/_app.js"
			],
			[
				"editableF",
				"components/simple/editableField.js"
			],
			[
				"RootSt",
				"stores/RootStore.js"
			],
			[
				"imageCon",
				"imageConversion.js"
			],
			[
				"style.css",
				"static/style.css"
			],
			[
				"index",
				"pages/index.js"
			],
			[
				"iteme",
				"components/views/itemEditor.js"
			],
			[
				"itemed",
				"components/views/itemEditor.js"
			],
			[
				"point.j",
				"lib/dom/point.js"
			],
			[
				"test-c",
				"test-color.js"
			],
			[
				"test-pa",
				"test-path.js"
			],
			[
				"hsla",
				"lib/dom/hsla.js"
			],
			[
				"rgba",
				"lib/dom/rgba.js"
			],
			[
				"test-co",
				"test-color.js"
			],
			[
				"imageUo",
				"components/views/imageUpload.js"
			],
			[
				"RUG.js",
				"components/upload/RUG.js"
			],
			[
				"List.js",
				"components/upload/view/List.js"
			],
			[
				"imageU",
				"components/views/imageUpload.js"
			],
			[
				"arc.",
				"arc.svg"
			],
			[
				"svg-pat",
				"lib/svg-path.js"
			],
			[
				"arc.sv",
				"arc.svg"
			],
			[
				"test.sv",
				"test.svg"
			],
			[
				"roo",
				"stores/RootStore.js"
			],
			[
				"new.j",
				"pages/new.js"
			],
			[
				"query",
				"query.js"
			],
			[
				"axios",
				"lib/axios.js"
			],
			[
				"nav",
				"components/nav.js"
			],
			[
				"itemEd",
				"components/views/itemEditor.js"
			],
			[
				"RootS",
				"stores/RootStore.js"
			],
			[
				"rootS",
				"stores/RootStore.js"
			],
			[
				"rootst",
				"stores/RootStore.js"
			],
			[
				"devtool",
				"lib/devtools.js"
			],
			[
				"editable",
				"components/simple/editableField.js"
			],
			[
				"editab",
				"components/simple/editableField.js"
			],
			[
				"editableFie",
				"components/simple/editableField.js"
			],
			[
				"Edit",
				"components/simple/editableField.js"
			],
			[
				"devtools.",
				"lib/devtools.js"
			],
			[
				"RootStore",
				"stores/RootStore.js"
			],
			[
				"addIte",
				"components/views/addItemBar.js"
			],
			[
				"server.j",
				"server.js"
			],
			[
				"lay",
				"components/layout.js"
			],
			[
				"layout",
				"components/layout.js"
			],
			[
				"siteMap",
				"components/siteMap.js"
			],
			[
				"react-up",
				"static/css/react-upload-gallery.css"
			],
			[
				"upload.js",
				"components/upload.js"
			],
			[
				"imageup",
				"components/views/imageUpload.js"
			],
			[
				"style",
				"static/style.css"
			],
			[
				"docume",
				"pages/_document.js"
			],
			[
				"uploadim",
				"node_modules/@render-props/image-props/cjs/utils/loadImages.js"
			],
			[
				"wrapif",
				"components/simple/wrapIf.js"
			],
			[
				"style.cs",
				"static/style.css"
			],
			[
				"editor",
				"components/views/itemEditor.js"
			],
			[
				"editablef",
				"components/simple/editableField.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 317.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
