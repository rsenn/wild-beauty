'use strict'

exports.__esModule = true
exports.default = exports.requestTimeout = exports.clearRequestTimeout = void 0

var _raf = _interopRequireWildcard(require('raf'))

var _performanceNow = _interopRequireDefault(require('performance-now'))

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {default: obj}
}

function _getRequireWildcardCache() {
  if (typeof WeakMap !== 'function') return null
  var cache = new WeakMap()
  _getRequireWildcardCache = function() {
    return cache
  }
  return cache
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj
  }
  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {
    return {default: obj}
  }
  var cache = _getRequireWildcardCache()
  if (cache && cache.has(obj)) {
    return cache.get(obj)
  }
  var newObj = {}
  var hasPropertyDescriptor =
    Object.defineProperty && Object.getOwnPropertyDescriptor
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor
        ? Object.getOwnPropertyDescriptor(obj, key)
        : null
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc)
      } else {
        newObj[key] = obj[key]
      }
    }
  }
  newObj.default = obj
  if (cache) {
    cache.set(obj, newObj)
  }
  return newObj
}

/**  Copyright 2011, Joe Lambert.
 **  Free to use under the MIT license.
 **  http://www.opensource.org/licenses/mit-license.php
 **/
const clearRequestTimeout = handle => {
  ;(0, _raf.cancel)(handle.value)
}

exports.clearRequestTimeout = clearRequestTimeout

const requestTimeout = (fn, delay) => {
  const start = (0, _performanceNow.default)(),
    handle = {}

  const loop = () => {
    ;(0, _performanceNow.default)() - start >= delay
      ? fn.call(null)
      : (handle.value = (0, _raf.default)(loop))
  }

  handle.value = (0, _raf.default)(loop)
  return handle
}

exports.requestTimeout = requestTimeout
var _default = requestTimeout
exports.default = _default
