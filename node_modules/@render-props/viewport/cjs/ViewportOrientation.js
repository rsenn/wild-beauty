'use strict'

var _interopRequireDefault = require('@babel/runtime/helpers/interopRequireDefault')

exports.__esModule = true
exports.default = ViewportOrientation
exports.supportsScreenOrientation = void 0

var _react = _interopRequireDefault(require('react'))

var _propTypes = _interopRequireDefault(require('prop-types'))

var _utils = require('./utils')

var _statics = require('./statics')

var _ViewportSize = _interopRequireDefault(require('./ViewportSize'))

/**
<ViewportOrientation>
  {
    ({width, height, aspect, orientation, screenOrientation}) => (
      <Row
        bg='translucentWhite'
        br='1'
        p='3'
        m='t3'
        bc='translucentLight'
      >
        <Col x={4}>viewport width: {width}</Col>
        <Col x={4}>viewport height: {height}</Col>
        <Col x={4}>orientation: {orientation}</Col>
        <Col x={4}>screen orientation: {screenOrientation}</Col>
      </Row>
    )
  }
</ViewportOrientation>
**/
const supportsScreenOrientation =
  _statics.winScreen &&
  _statics.winScreen.orientation &&
  _statics.winScreen.orientation.type
exports.supportsScreenOrientation = supportsScreenOrientation

function ViewportOrientation(props) {
  // should be safely mutable because there aren't variable state keys
  // and we are localizing it to this component
  function children(sizeContext) {
    sizeContext.orientation = (0, _utils.getOrientation)(sizeContext)
    sizeContext.screenOrientation = supportsScreenOrientation
      ? _statics.winScreen.orientation.type
      : null
    return props.children(sizeContext)
  }

  return (0, _ViewportSize.default)({
    withCoords: props.withCoords,
    children,
  })
}

ViewportOrientation.propTypes = {
  children: _propTypes.default.func.isRequired,
}
