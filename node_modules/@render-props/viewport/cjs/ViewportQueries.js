'use strict'

var _interopRequireDefault = require('@babel/runtime/helpers/interopRequireDefault')

exports.__esModule = true
exports.default = ViewportQueries
exports.viewportQueriesContext = exports.inFullView = exports.inFullViewY = exports.inFullViewX = exports.inView = exports.inViewY = exports.inViewX = void 0

var _react = _interopRequireDefault(require('react'))

var _propTypes = _interopRequireDefault(require('prop-types'))

var _rect = require('@render-props/rect')

var _statics = require('./statics')

var _utils = require('./utils')

const _rects = (el, leeway, container = _statics.win) => [
  (0, _rect.rect)(el, leeway),
  container === _statics.win
    ? (0, _utils.getRect)()
    : (0, _rect.rect)(container),
]

const inViewX = (el, leeway, container) => {
  const [r, c] = _rects(el, leeway, container)

  return r !== void 0 && r.right > 0 && r.left < c.width
}

exports.inViewX = inViewX

const inViewY = (el, leeway, container) => {
  const [r, c] = _rects(el, leeway, container)

  return r !== void 0 && r.bottom > 0 && r.top < c.height
}

exports.inViewY = inViewY

const inView = (el, leeway, container) => {
  const [r, c] = _rects(el, leeway, container)

  return (
    r !== void 0 &&
    r.bottom > 0 &&
    r.top < c.height &&
    r.right > 0 &&
    r.left < c.width
  )
}

exports.inView = inView

const inFullViewX = (el, leeway, container) => {
  const [r, c] = _rects(el, leeway, container)

  if (r === void 0 || c === void 0) return false
  return c.width - r.width >= 0 && r.left >= c.left && r.right <= c.right
}

exports.inFullViewX = inFullViewX

const inFullViewY = (el, leeway, container) => {
  const [r, c] = _rects(el, leeway, container)

  if (r === void 0 || c === void 0) return false
  return c.height - r.height >= 0 && r.top >= c.top && r.bottom <= c.bottom
}

exports.inFullViewY = inFullViewY

const inFullView = (el, leeway, container) => {
  const [r, c] = _rects(el, leeway, container)

  if (r === void 0 || c === void 0) return false
  return (
    c.width - r.width >= 0 &&
    c.height - r.height >= 0 &&
    r.left >= c.left &&
    r.right <= c.right &&
    r.top >= c.top &&
    r.bottom <= c.bottom
  )
}

exports.inFullView = inFullView
const viewportQueriesContext = {
  inViewX: (el, leeway) => inViewX(el, leeway),
  inViewY: (el, leeway) => inViewY(el, leeway),
  inView: (el, leeway) => inView(el, leeway),
  inFullViewX: (el, leeway) => inFullViewX(el, leeway),
  inFullViewY: (el, leeway) => inFullViewY(el, leeway),
  inFullView: (el, leeway) => inFullView(el, leeway),
}
exports.viewportQueriesContext = viewportQueriesContext

function ViewportQueries(props) {
  return props.children(viewportQueriesContext)
}

ViewportQueries.propTypes = {
  children: _propTypes.default.func.isRequired,
}
